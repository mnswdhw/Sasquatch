S: ARRAY BITVECTOR(4) OF BITVECTOR(4);
x0 : BITVECTOR(4);
y0 : BITVECTOR(4);
a0 : BITVECTOR(4);
b0 : BITVECTOR(4);
x1 : BITVECTOR(4);
y1 : BITVECTOR(4);
a1 : BITVECTOR(4);
b1 : BITVECTOR(4);
x2 : BITVECTOR(4);
y2 : BITVECTOR(4);
a2 : BITVECTOR(4);
b2 : BITVECTOR(4);
x3 : BITVECTOR(4);
y3 : BITVECTOR(4);
a3 : BITVECTOR(4);
b3 : BITVECTOR(4);
x4 : BITVECTOR(4);
y4 : BITVECTOR(4);
a4 : BITVECTOR(4);
b4 : BITVECTOR(4);
x5 : BITVECTOR(4);
y5 : BITVECTOR(4);
a5 : BITVECTOR(4);
b5 : BITVECTOR(4);
x6 : BITVECTOR(4);
y6 : BITVECTOR(4);
a6 : BITVECTOR(4);
b6 : BITVECTOR(4);
x7 : BITVECTOR(4);
y7 : BITVECTOR(4);
a7 : BITVECTOR(4);
b7 : BITVECTOR(4);
x8 : BITVECTOR(4);
y8 : BITVECTOR(4);
a8 : BITVECTOR(4);
b8 : BITVECTOR(4);
x9 : BITVECTOR(4);
y9 : BITVECTOR(4);
a9 : BITVECTOR(4);
b9 : BITVECTOR(4);
x10 : BITVECTOR(4);
y10 : BITVECTOR(4);
a10 : BITVECTOR(4);
b10 : BITVECTOR(4);
x11 : BITVECTOR(4);
y11 : BITVECTOR(4);
a11 : BITVECTOR(4);
b11 : BITVECTOR(4);
x12 : BITVECTOR(4);
y12 : BITVECTOR(4);
a12 : BITVECTOR(4);
b12 : BITVECTOR(4);
x13 : BITVECTOR(4);
y13 : BITVECTOR(4);
a13 : BITVECTOR(4);
b13 : BITVECTOR(4);
x14 : BITVECTOR(4);
y14 : BITVECTOR(4);
a14 : BITVECTOR(4);
b14 : BITVECTOR(4);
x15 : BITVECTOR(4);
y15 : BITVECTOR(4);
a15 : BITVECTOR(4);
b15 : BITVECTOR(4);
ASSERT( a0 = 0bin0000);
ASSERT( b0 = 0bin0000);
ASSERT( x0 = 0bin0000);
ASSERT( a1 = 0bin0001);
ASSERT( b1 = 0bin0001);
ASSERT( x1 = 0bin0001);
ASSERT( a2 = 0bin0010);
ASSERT( b2 = 0bin0010);
ASSERT( x2 = 0bin0010);
ASSERT( a3 = 0bin0011);
ASSERT( b3 = 0bin0011);
ASSERT( x3 = 0bin0011);
ASSERT( a4 = 0bin0100);
ASSERT( b4 = 0bin0100);
ASSERT( x4 = 0bin0100);
ASSERT( a5 = 0bin0101);
ASSERT( b5 = 0bin0101);
ASSERT( x5 = 0bin0101);
ASSERT( a6 = 0bin0110);
ASSERT( b6 = 0bin0110);
ASSERT( x6 = 0bin0110);
ASSERT( a7 = 0bin0111);
ASSERT( b7 = 0bin0111);
ASSERT( x7 = 0bin0111);
ASSERT( a8 = 0bin1000);
ASSERT( b8 = 0bin1000);
ASSERT( x8 = 0bin1000);
ASSERT( a9 = 0bin1001);
ASSERT( b9 = 0bin1001);
ASSERT( x9 = 0bin1001);
ASSERT( a10 = 0bin1010);
ASSERT( b10 = 0bin1010);
ASSERT( x10 = 0bin1010);
ASSERT( a11 = 0bin1011);
ASSERT( b11 = 0bin1011);
ASSERT( x11 = 0bin1011);
ASSERT( a12 = 0bin1100);
ASSERT( b12 = 0bin1100);
ASSERT( x12 = 0bin1100);
ASSERT( a13 = 0bin1101);
ASSERT( b13 = 0bin1101);
ASSERT( x13 = 0bin1101);
ASSERT( a14 = 0bin1110);
ASSERT( b14 = 0bin1110);
ASSERT( x14 = 0bin1110);
ASSERT( a15 = 0bin1111);
ASSERT( b15 = 0bin1111);
ASSERT( x15 = 0bin1111);
ASSERT(S[x0] = y0);
ASSERT(S[x1] = y1);
ASSERT(S[x2] = y2);
ASSERT(S[x3] = y3);
ASSERT(S[x4] = y4);
ASSERT(S[x5] = y5);
ASSERT(S[x6] = y6);
ASSERT(S[x7] = y7);
ASSERT(S[x8] = y8);
ASSERT(S[x9] = y9);
ASSERT(S[x10] = y10);
ASSERT(S[x11] = y11);
ASSERT(S[x12] = y12);
ASSERT(S[x13] = y13);
ASSERT(S[x14] = y14);
ASSERT(S[x15] = y15);
ASSERT( y0 /= y1);
ASSERT( y0 /= y2);
ASSERT( y0 /= y3);
ASSERT( y0 /= y4);
ASSERT( y0 /= y5);
ASSERT( y0 /= y6);
ASSERT( y0 /= y7);
ASSERT( y0 /= y8);
ASSERT( y0 /= y9);
ASSERT( y0 /= y10);
ASSERT( y0 /= y11);
ASSERT( y0 /= y12);
ASSERT( y0 /= y13);
ASSERT( y0 /= y14);
ASSERT( y0 /= y15);
ASSERT( y1 /= y2);
ASSERT( y1 /= y3);
ASSERT( y1 /= y4);
ASSERT( y1 /= y5);
ASSERT( y1 /= y6);
ASSERT( y1 /= y7);
ASSERT( y1 /= y8);
ASSERT( y1 /= y9);
ASSERT( y1 /= y10);
ASSERT( y1 /= y11);
ASSERT( y1 /= y12);
ASSERT( y1 /= y13);
ASSERT( y1 /= y14);
ASSERT( y1 /= y15);
ASSERT( y2 /= y3);
ASSERT( y2 /= y4);
ASSERT( y2 /= y5);
ASSERT( y2 /= y6);
ASSERT( y2 /= y7);
ASSERT( y2 /= y8);
ASSERT( y2 /= y9);
ASSERT( y2 /= y10);
ASSERT( y2 /= y11);
ASSERT( y2 /= y12);
ASSERT( y2 /= y13);
ASSERT( y2 /= y14);
ASSERT( y2 /= y15);
ASSERT( y3 /= y4);
ASSERT( y3 /= y5);
ASSERT( y3 /= y6);
ASSERT( y3 /= y7);
ASSERT( y3 /= y8);
ASSERT( y3 /= y9);
ASSERT( y3 /= y10);
ASSERT( y3 /= y11);
ASSERT( y3 /= y12);
ASSERT( y3 /= y13);
ASSERT( y3 /= y14);
ASSERT( y3 /= y15);
ASSERT( y4 /= y5);
ASSERT( y4 /= y6);
ASSERT( y4 /= y7);
ASSERT( y4 /= y8);
ASSERT( y4 /= y9);
ASSERT( y4 /= y10);
ASSERT( y4 /= y11);
ASSERT( y4 /= y12);
ASSERT( y4 /= y13);
ASSERT( y4 /= y14);
ASSERT( y4 /= y15);
ASSERT( y5 /= y6);
ASSERT( y5 /= y7);
ASSERT( y5 /= y8);
ASSERT( y5 /= y9);
ASSERT( y5 /= y10);
ASSERT( y5 /= y11);
ASSERT( y5 /= y12);
ASSERT( y5 /= y13);
ASSERT( y5 /= y14);
ASSERT( y5 /= y15);
ASSERT( y6 /= y7);
ASSERT( y6 /= y8);
ASSERT( y6 /= y9);
ASSERT( y6 /= y10);
ASSERT( y6 /= y11);
ASSERT( y6 /= y12);
ASSERT( y6 /= y13);
ASSERT( y6 /= y14);
ASSERT( y6 /= y15);
ASSERT( y7 /= y8);
ASSERT( y7 /= y9);
ASSERT( y7 /= y10);
ASSERT( y7 /= y11);
ASSERT( y7 /= y12);
ASSERT( y7 /= y13);
ASSERT( y7 /= y14);
ASSERT( y7 /= y15);
ASSERT( y8 /= y9);
ASSERT( y8 /= y10);
ASSERT( y8 /= y11);
ASSERT( y8 /= y12);
ASSERT( y8 /= y13);
ASSERT( y8 /= y14);
ASSERT( y8 /= y15);
ASSERT( y9 /= y10);
ASSERT( y9 /= y11);
ASSERT( y9 /= y12);
ASSERT( y9 /= y13);
ASSERT( y9 /= y14);
ASSERT( y9 /= y15);
ASSERT( y10 /= y11);
ASSERT( y10 /= y12);
ASSERT( y10 /= y13);
ASSERT( y10 /= y14);
ASSERT( y10 /= y15);
ASSERT( y11 /= y12);
ASSERT( y11 /= y13);
ASSERT( y11 /= y14);
ASSERT( y11 /= y15);
ASSERT( y12 /= y13);
ASSERT( y12 /= y14);
ASSERT( y12 /= y15);
ASSERT( y13 /= y14);
ASSERT( y13 /= y15);
ASSERT( y14 /= y15);
Sinv: ARRAY BITVECTOR(4) OF BITVECTOR(4);
ASSERT(Sinv[y0] = x0);
ASSERT(Sinv[y1] = x1);
ASSERT(Sinv[y2] = x2);
ASSERT(Sinv[y3] = x3);
ASSERT(Sinv[y4] = x4);
ASSERT(Sinv[y5] = x5);
ASSERT(Sinv[y6] = x6);
ASSERT(Sinv[y7] = x7);
ASSERT(Sinv[y8] = x8);
ASSERT(Sinv[y9] = x9);
ASSERT(Sinv[y10] = x10);
ASSERT(Sinv[y11] = x11);
ASSERT(Sinv[y12] = x12);
ASSERT(Sinv[y13] = x13);
ASSERT(Sinv[y14] = x14);
ASSERT(Sinv[y15] = x15);
ddt_a0_b0 : BITVECTOR(5);
istrue_a0_b0_x0 : BITVECTOR(1);
istrue_a0_b0_x1 : BITVECTOR(1);
istrue_a0_b0_x2 : BITVECTOR(1);
istrue_a0_b0_x3 : BITVECTOR(1);
istrue_a0_b0_x4 : BITVECTOR(1);
istrue_a0_b0_x5 : BITVECTOR(1);
istrue_a0_b0_x6 : BITVECTOR(1);
istrue_a0_b0_x7 : BITVECTOR(1);
istrue_a0_b0_x8 : BITVECTOR(1);
istrue_a0_b0_x9 : BITVECTOR(1);
istrue_a0_b0_x10 : BITVECTOR(1);
istrue_a0_b0_x11 : BITVECTOR(1);
istrue_a0_b0_x12 : BITVECTOR(1);
istrue_a0_b0_x13 : BITVECTOR(1);
istrue_a0_b0_x14 : BITVECTOR(1);
istrue_a0_b0_x15 : BITVECTOR(1);
ddt_a0_b1 : BITVECTOR(5);
istrue_a0_b1_x0 : BITVECTOR(1);
istrue_a0_b1_x1 : BITVECTOR(1);
istrue_a0_b1_x2 : BITVECTOR(1);
istrue_a0_b1_x3 : BITVECTOR(1);
istrue_a0_b1_x4 : BITVECTOR(1);
istrue_a0_b1_x5 : BITVECTOR(1);
istrue_a0_b1_x6 : BITVECTOR(1);
istrue_a0_b1_x7 : BITVECTOR(1);
istrue_a0_b1_x8 : BITVECTOR(1);
istrue_a0_b1_x9 : BITVECTOR(1);
istrue_a0_b1_x10 : BITVECTOR(1);
istrue_a0_b1_x11 : BITVECTOR(1);
istrue_a0_b1_x12 : BITVECTOR(1);
istrue_a0_b1_x13 : BITVECTOR(1);
istrue_a0_b1_x14 : BITVECTOR(1);
istrue_a0_b1_x15 : BITVECTOR(1);
ddt_a0_b2 : BITVECTOR(5);
istrue_a0_b2_x0 : BITVECTOR(1);
istrue_a0_b2_x1 : BITVECTOR(1);
istrue_a0_b2_x2 : BITVECTOR(1);
istrue_a0_b2_x3 : BITVECTOR(1);
istrue_a0_b2_x4 : BITVECTOR(1);
istrue_a0_b2_x5 : BITVECTOR(1);
istrue_a0_b2_x6 : BITVECTOR(1);
istrue_a0_b2_x7 : BITVECTOR(1);
istrue_a0_b2_x8 : BITVECTOR(1);
istrue_a0_b2_x9 : BITVECTOR(1);
istrue_a0_b2_x10 : BITVECTOR(1);
istrue_a0_b2_x11 : BITVECTOR(1);
istrue_a0_b2_x12 : BITVECTOR(1);
istrue_a0_b2_x13 : BITVECTOR(1);
istrue_a0_b2_x14 : BITVECTOR(1);
istrue_a0_b2_x15 : BITVECTOR(1);
ddt_a0_b3 : BITVECTOR(5);
istrue_a0_b3_x0 : BITVECTOR(1);
istrue_a0_b3_x1 : BITVECTOR(1);
istrue_a0_b3_x2 : BITVECTOR(1);
istrue_a0_b3_x3 : BITVECTOR(1);
istrue_a0_b3_x4 : BITVECTOR(1);
istrue_a0_b3_x5 : BITVECTOR(1);
istrue_a0_b3_x6 : BITVECTOR(1);
istrue_a0_b3_x7 : BITVECTOR(1);
istrue_a0_b3_x8 : BITVECTOR(1);
istrue_a0_b3_x9 : BITVECTOR(1);
istrue_a0_b3_x10 : BITVECTOR(1);
istrue_a0_b3_x11 : BITVECTOR(1);
istrue_a0_b3_x12 : BITVECTOR(1);
istrue_a0_b3_x13 : BITVECTOR(1);
istrue_a0_b3_x14 : BITVECTOR(1);
istrue_a0_b3_x15 : BITVECTOR(1);
ddt_a0_b4 : BITVECTOR(5);
istrue_a0_b4_x0 : BITVECTOR(1);
istrue_a0_b4_x1 : BITVECTOR(1);
istrue_a0_b4_x2 : BITVECTOR(1);
istrue_a0_b4_x3 : BITVECTOR(1);
istrue_a0_b4_x4 : BITVECTOR(1);
istrue_a0_b4_x5 : BITVECTOR(1);
istrue_a0_b4_x6 : BITVECTOR(1);
istrue_a0_b4_x7 : BITVECTOR(1);
istrue_a0_b4_x8 : BITVECTOR(1);
istrue_a0_b4_x9 : BITVECTOR(1);
istrue_a0_b4_x10 : BITVECTOR(1);
istrue_a0_b4_x11 : BITVECTOR(1);
istrue_a0_b4_x12 : BITVECTOR(1);
istrue_a0_b4_x13 : BITVECTOR(1);
istrue_a0_b4_x14 : BITVECTOR(1);
istrue_a0_b4_x15 : BITVECTOR(1);
ddt_a0_b5 : BITVECTOR(5);
istrue_a0_b5_x0 : BITVECTOR(1);
istrue_a0_b5_x1 : BITVECTOR(1);
istrue_a0_b5_x2 : BITVECTOR(1);
istrue_a0_b5_x3 : BITVECTOR(1);
istrue_a0_b5_x4 : BITVECTOR(1);
istrue_a0_b5_x5 : BITVECTOR(1);
istrue_a0_b5_x6 : BITVECTOR(1);
istrue_a0_b5_x7 : BITVECTOR(1);
istrue_a0_b5_x8 : BITVECTOR(1);
istrue_a0_b5_x9 : BITVECTOR(1);
istrue_a0_b5_x10 : BITVECTOR(1);
istrue_a0_b5_x11 : BITVECTOR(1);
istrue_a0_b5_x12 : BITVECTOR(1);
istrue_a0_b5_x13 : BITVECTOR(1);
istrue_a0_b5_x14 : BITVECTOR(1);
istrue_a0_b5_x15 : BITVECTOR(1);
ddt_a0_b6 : BITVECTOR(5);
istrue_a0_b6_x0 : BITVECTOR(1);
istrue_a0_b6_x1 : BITVECTOR(1);
istrue_a0_b6_x2 : BITVECTOR(1);
istrue_a0_b6_x3 : BITVECTOR(1);
istrue_a0_b6_x4 : BITVECTOR(1);
istrue_a0_b6_x5 : BITVECTOR(1);
istrue_a0_b6_x6 : BITVECTOR(1);
istrue_a0_b6_x7 : BITVECTOR(1);
istrue_a0_b6_x8 : BITVECTOR(1);
istrue_a0_b6_x9 : BITVECTOR(1);
istrue_a0_b6_x10 : BITVECTOR(1);
istrue_a0_b6_x11 : BITVECTOR(1);
istrue_a0_b6_x12 : BITVECTOR(1);
istrue_a0_b6_x13 : BITVECTOR(1);
istrue_a0_b6_x14 : BITVECTOR(1);
istrue_a0_b6_x15 : BITVECTOR(1);
ddt_a0_b7 : BITVECTOR(5);
istrue_a0_b7_x0 : BITVECTOR(1);
istrue_a0_b7_x1 : BITVECTOR(1);
istrue_a0_b7_x2 : BITVECTOR(1);
istrue_a0_b7_x3 : BITVECTOR(1);
istrue_a0_b7_x4 : BITVECTOR(1);
istrue_a0_b7_x5 : BITVECTOR(1);
istrue_a0_b7_x6 : BITVECTOR(1);
istrue_a0_b7_x7 : BITVECTOR(1);
istrue_a0_b7_x8 : BITVECTOR(1);
istrue_a0_b7_x9 : BITVECTOR(1);
istrue_a0_b7_x10 : BITVECTOR(1);
istrue_a0_b7_x11 : BITVECTOR(1);
istrue_a0_b7_x12 : BITVECTOR(1);
istrue_a0_b7_x13 : BITVECTOR(1);
istrue_a0_b7_x14 : BITVECTOR(1);
istrue_a0_b7_x15 : BITVECTOR(1);
ddt_a0_b8 : BITVECTOR(5);
istrue_a0_b8_x0 : BITVECTOR(1);
istrue_a0_b8_x1 : BITVECTOR(1);
istrue_a0_b8_x2 : BITVECTOR(1);
istrue_a0_b8_x3 : BITVECTOR(1);
istrue_a0_b8_x4 : BITVECTOR(1);
istrue_a0_b8_x5 : BITVECTOR(1);
istrue_a0_b8_x6 : BITVECTOR(1);
istrue_a0_b8_x7 : BITVECTOR(1);
istrue_a0_b8_x8 : BITVECTOR(1);
istrue_a0_b8_x9 : BITVECTOR(1);
istrue_a0_b8_x10 : BITVECTOR(1);
istrue_a0_b8_x11 : BITVECTOR(1);
istrue_a0_b8_x12 : BITVECTOR(1);
istrue_a0_b8_x13 : BITVECTOR(1);
istrue_a0_b8_x14 : BITVECTOR(1);
istrue_a0_b8_x15 : BITVECTOR(1);
ddt_a0_b9 : BITVECTOR(5);
istrue_a0_b9_x0 : BITVECTOR(1);
istrue_a0_b9_x1 : BITVECTOR(1);
istrue_a0_b9_x2 : BITVECTOR(1);
istrue_a0_b9_x3 : BITVECTOR(1);
istrue_a0_b9_x4 : BITVECTOR(1);
istrue_a0_b9_x5 : BITVECTOR(1);
istrue_a0_b9_x6 : BITVECTOR(1);
istrue_a0_b9_x7 : BITVECTOR(1);
istrue_a0_b9_x8 : BITVECTOR(1);
istrue_a0_b9_x9 : BITVECTOR(1);
istrue_a0_b9_x10 : BITVECTOR(1);
istrue_a0_b9_x11 : BITVECTOR(1);
istrue_a0_b9_x12 : BITVECTOR(1);
istrue_a0_b9_x13 : BITVECTOR(1);
istrue_a0_b9_x14 : BITVECTOR(1);
istrue_a0_b9_x15 : BITVECTOR(1);
ddt_a0_b10 : BITVECTOR(5);
istrue_a0_b10_x0 : BITVECTOR(1);
istrue_a0_b10_x1 : BITVECTOR(1);
istrue_a0_b10_x2 : BITVECTOR(1);
istrue_a0_b10_x3 : BITVECTOR(1);
istrue_a0_b10_x4 : BITVECTOR(1);
istrue_a0_b10_x5 : BITVECTOR(1);
istrue_a0_b10_x6 : BITVECTOR(1);
istrue_a0_b10_x7 : BITVECTOR(1);
istrue_a0_b10_x8 : BITVECTOR(1);
istrue_a0_b10_x9 : BITVECTOR(1);
istrue_a0_b10_x10 : BITVECTOR(1);
istrue_a0_b10_x11 : BITVECTOR(1);
istrue_a0_b10_x12 : BITVECTOR(1);
istrue_a0_b10_x13 : BITVECTOR(1);
istrue_a0_b10_x14 : BITVECTOR(1);
istrue_a0_b10_x15 : BITVECTOR(1);
ddt_a0_b11 : BITVECTOR(5);
istrue_a0_b11_x0 : BITVECTOR(1);
istrue_a0_b11_x1 : BITVECTOR(1);
istrue_a0_b11_x2 : BITVECTOR(1);
istrue_a0_b11_x3 : BITVECTOR(1);
istrue_a0_b11_x4 : BITVECTOR(1);
istrue_a0_b11_x5 : BITVECTOR(1);
istrue_a0_b11_x6 : BITVECTOR(1);
istrue_a0_b11_x7 : BITVECTOR(1);
istrue_a0_b11_x8 : BITVECTOR(1);
istrue_a0_b11_x9 : BITVECTOR(1);
istrue_a0_b11_x10 : BITVECTOR(1);
istrue_a0_b11_x11 : BITVECTOR(1);
istrue_a0_b11_x12 : BITVECTOR(1);
istrue_a0_b11_x13 : BITVECTOR(1);
istrue_a0_b11_x14 : BITVECTOR(1);
istrue_a0_b11_x15 : BITVECTOR(1);
ddt_a0_b12 : BITVECTOR(5);
istrue_a0_b12_x0 : BITVECTOR(1);
istrue_a0_b12_x1 : BITVECTOR(1);
istrue_a0_b12_x2 : BITVECTOR(1);
istrue_a0_b12_x3 : BITVECTOR(1);
istrue_a0_b12_x4 : BITVECTOR(1);
istrue_a0_b12_x5 : BITVECTOR(1);
istrue_a0_b12_x6 : BITVECTOR(1);
istrue_a0_b12_x7 : BITVECTOR(1);
istrue_a0_b12_x8 : BITVECTOR(1);
istrue_a0_b12_x9 : BITVECTOR(1);
istrue_a0_b12_x10 : BITVECTOR(1);
istrue_a0_b12_x11 : BITVECTOR(1);
istrue_a0_b12_x12 : BITVECTOR(1);
istrue_a0_b12_x13 : BITVECTOR(1);
istrue_a0_b12_x14 : BITVECTOR(1);
istrue_a0_b12_x15 : BITVECTOR(1);
ddt_a0_b13 : BITVECTOR(5);
istrue_a0_b13_x0 : BITVECTOR(1);
istrue_a0_b13_x1 : BITVECTOR(1);
istrue_a0_b13_x2 : BITVECTOR(1);
istrue_a0_b13_x3 : BITVECTOR(1);
istrue_a0_b13_x4 : BITVECTOR(1);
istrue_a0_b13_x5 : BITVECTOR(1);
istrue_a0_b13_x6 : BITVECTOR(1);
istrue_a0_b13_x7 : BITVECTOR(1);
istrue_a0_b13_x8 : BITVECTOR(1);
istrue_a0_b13_x9 : BITVECTOR(1);
istrue_a0_b13_x10 : BITVECTOR(1);
istrue_a0_b13_x11 : BITVECTOR(1);
istrue_a0_b13_x12 : BITVECTOR(1);
istrue_a0_b13_x13 : BITVECTOR(1);
istrue_a0_b13_x14 : BITVECTOR(1);
istrue_a0_b13_x15 : BITVECTOR(1);
ddt_a0_b14 : BITVECTOR(5);
istrue_a0_b14_x0 : BITVECTOR(1);
istrue_a0_b14_x1 : BITVECTOR(1);
istrue_a0_b14_x2 : BITVECTOR(1);
istrue_a0_b14_x3 : BITVECTOR(1);
istrue_a0_b14_x4 : BITVECTOR(1);
istrue_a0_b14_x5 : BITVECTOR(1);
istrue_a0_b14_x6 : BITVECTOR(1);
istrue_a0_b14_x7 : BITVECTOR(1);
istrue_a0_b14_x8 : BITVECTOR(1);
istrue_a0_b14_x9 : BITVECTOR(1);
istrue_a0_b14_x10 : BITVECTOR(1);
istrue_a0_b14_x11 : BITVECTOR(1);
istrue_a0_b14_x12 : BITVECTOR(1);
istrue_a0_b14_x13 : BITVECTOR(1);
istrue_a0_b14_x14 : BITVECTOR(1);
istrue_a0_b14_x15 : BITVECTOR(1);
ddt_a0_b15 : BITVECTOR(5);
istrue_a0_b15_x0 : BITVECTOR(1);
istrue_a0_b15_x1 : BITVECTOR(1);
istrue_a0_b15_x2 : BITVECTOR(1);
istrue_a0_b15_x3 : BITVECTOR(1);
istrue_a0_b15_x4 : BITVECTOR(1);
istrue_a0_b15_x5 : BITVECTOR(1);
istrue_a0_b15_x6 : BITVECTOR(1);
istrue_a0_b15_x7 : BITVECTOR(1);
istrue_a0_b15_x8 : BITVECTOR(1);
istrue_a0_b15_x9 : BITVECTOR(1);
istrue_a0_b15_x10 : BITVECTOR(1);
istrue_a0_b15_x11 : BITVECTOR(1);
istrue_a0_b15_x12 : BITVECTOR(1);
istrue_a0_b15_x13 : BITVECTOR(1);
istrue_a0_b15_x14 : BITVECTOR(1);
istrue_a0_b15_x15 : BITVECTOR(1);
ddt_a1_b0 : BITVECTOR(5);
istrue_a1_b0_x0 : BITVECTOR(1);
istrue_a1_b0_x1 : BITVECTOR(1);
istrue_a1_b0_x2 : BITVECTOR(1);
istrue_a1_b0_x3 : BITVECTOR(1);
istrue_a1_b0_x4 : BITVECTOR(1);
istrue_a1_b0_x5 : BITVECTOR(1);
istrue_a1_b0_x6 : BITVECTOR(1);
istrue_a1_b0_x7 : BITVECTOR(1);
istrue_a1_b0_x8 : BITVECTOR(1);
istrue_a1_b0_x9 : BITVECTOR(1);
istrue_a1_b0_x10 : BITVECTOR(1);
istrue_a1_b0_x11 : BITVECTOR(1);
istrue_a1_b0_x12 : BITVECTOR(1);
istrue_a1_b0_x13 : BITVECTOR(1);
istrue_a1_b0_x14 : BITVECTOR(1);
istrue_a1_b0_x15 : BITVECTOR(1);
ddt_a1_b1 : BITVECTOR(5);
istrue_a1_b1_x0 : BITVECTOR(1);
istrue_a1_b1_x1 : BITVECTOR(1);
istrue_a1_b1_x2 : BITVECTOR(1);
istrue_a1_b1_x3 : BITVECTOR(1);
istrue_a1_b1_x4 : BITVECTOR(1);
istrue_a1_b1_x5 : BITVECTOR(1);
istrue_a1_b1_x6 : BITVECTOR(1);
istrue_a1_b1_x7 : BITVECTOR(1);
istrue_a1_b1_x8 : BITVECTOR(1);
istrue_a1_b1_x9 : BITVECTOR(1);
istrue_a1_b1_x10 : BITVECTOR(1);
istrue_a1_b1_x11 : BITVECTOR(1);
istrue_a1_b1_x12 : BITVECTOR(1);
istrue_a1_b1_x13 : BITVECTOR(1);
istrue_a1_b1_x14 : BITVECTOR(1);
istrue_a1_b1_x15 : BITVECTOR(1);
ddt_a1_b2 : BITVECTOR(5);
istrue_a1_b2_x0 : BITVECTOR(1);
istrue_a1_b2_x1 : BITVECTOR(1);
istrue_a1_b2_x2 : BITVECTOR(1);
istrue_a1_b2_x3 : BITVECTOR(1);
istrue_a1_b2_x4 : BITVECTOR(1);
istrue_a1_b2_x5 : BITVECTOR(1);
istrue_a1_b2_x6 : BITVECTOR(1);
istrue_a1_b2_x7 : BITVECTOR(1);
istrue_a1_b2_x8 : BITVECTOR(1);
istrue_a1_b2_x9 : BITVECTOR(1);
istrue_a1_b2_x10 : BITVECTOR(1);
istrue_a1_b2_x11 : BITVECTOR(1);
istrue_a1_b2_x12 : BITVECTOR(1);
istrue_a1_b2_x13 : BITVECTOR(1);
istrue_a1_b2_x14 : BITVECTOR(1);
istrue_a1_b2_x15 : BITVECTOR(1);
ddt_a1_b3 : BITVECTOR(5);
istrue_a1_b3_x0 : BITVECTOR(1);
istrue_a1_b3_x1 : BITVECTOR(1);
istrue_a1_b3_x2 : BITVECTOR(1);
istrue_a1_b3_x3 : BITVECTOR(1);
istrue_a1_b3_x4 : BITVECTOR(1);
istrue_a1_b3_x5 : BITVECTOR(1);
istrue_a1_b3_x6 : BITVECTOR(1);
istrue_a1_b3_x7 : BITVECTOR(1);
istrue_a1_b3_x8 : BITVECTOR(1);
istrue_a1_b3_x9 : BITVECTOR(1);
istrue_a1_b3_x10 : BITVECTOR(1);
istrue_a1_b3_x11 : BITVECTOR(1);
istrue_a1_b3_x12 : BITVECTOR(1);
istrue_a1_b3_x13 : BITVECTOR(1);
istrue_a1_b3_x14 : BITVECTOR(1);
istrue_a1_b3_x15 : BITVECTOR(1);
ddt_a1_b4 : BITVECTOR(5);
istrue_a1_b4_x0 : BITVECTOR(1);
istrue_a1_b4_x1 : BITVECTOR(1);
istrue_a1_b4_x2 : BITVECTOR(1);
istrue_a1_b4_x3 : BITVECTOR(1);
istrue_a1_b4_x4 : BITVECTOR(1);
istrue_a1_b4_x5 : BITVECTOR(1);
istrue_a1_b4_x6 : BITVECTOR(1);
istrue_a1_b4_x7 : BITVECTOR(1);
istrue_a1_b4_x8 : BITVECTOR(1);
istrue_a1_b4_x9 : BITVECTOR(1);
istrue_a1_b4_x10 : BITVECTOR(1);
istrue_a1_b4_x11 : BITVECTOR(1);
istrue_a1_b4_x12 : BITVECTOR(1);
istrue_a1_b4_x13 : BITVECTOR(1);
istrue_a1_b4_x14 : BITVECTOR(1);
istrue_a1_b4_x15 : BITVECTOR(1);
ddt_a1_b5 : BITVECTOR(5);
istrue_a1_b5_x0 : BITVECTOR(1);
istrue_a1_b5_x1 : BITVECTOR(1);
istrue_a1_b5_x2 : BITVECTOR(1);
istrue_a1_b5_x3 : BITVECTOR(1);
istrue_a1_b5_x4 : BITVECTOR(1);
istrue_a1_b5_x5 : BITVECTOR(1);
istrue_a1_b5_x6 : BITVECTOR(1);
istrue_a1_b5_x7 : BITVECTOR(1);
istrue_a1_b5_x8 : BITVECTOR(1);
istrue_a1_b5_x9 : BITVECTOR(1);
istrue_a1_b5_x10 : BITVECTOR(1);
istrue_a1_b5_x11 : BITVECTOR(1);
istrue_a1_b5_x12 : BITVECTOR(1);
istrue_a1_b5_x13 : BITVECTOR(1);
istrue_a1_b5_x14 : BITVECTOR(1);
istrue_a1_b5_x15 : BITVECTOR(1);
ddt_a1_b6 : BITVECTOR(5);
istrue_a1_b6_x0 : BITVECTOR(1);
istrue_a1_b6_x1 : BITVECTOR(1);
istrue_a1_b6_x2 : BITVECTOR(1);
istrue_a1_b6_x3 : BITVECTOR(1);
istrue_a1_b6_x4 : BITVECTOR(1);
istrue_a1_b6_x5 : BITVECTOR(1);
istrue_a1_b6_x6 : BITVECTOR(1);
istrue_a1_b6_x7 : BITVECTOR(1);
istrue_a1_b6_x8 : BITVECTOR(1);
istrue_a1_b6_x9 : BITVECTOR(1);
istrue_a1_b6_x10 : BITVECTOR(1);
istrue_a1_b6_x11 : BITVECTOR(1);
istrue_a1_b6_x12 : BITVECTOR(1);
istrue_a1_b6_x13 : BITVECTOR(1);
istrue_a1_b6_x14 : BITVECTOR(1);
istrue_a1_b6_x15 : BITVECTOR(1);
ddt_a1_b7 : BITVECTOR(5);
istrue_a1_b7_x0 : BITVECTOR(1);
istrue_a1_b7_x1 : BITVECTOR(1);
istrue_a1_b7_x2 : BITVECTOR(1);
istrue_a1_b7_x3 : BITVECTOR(1);
istrue_a1_b7_x4 : BITVECTOR(1);
istrue_a1_b7_x5 : BITVECTOR(1);
istrue_a1_b7_x6 : BITVECTOR(1);
istrue_a1_b7_x7 : BITVECTOR(1);
istrue_a1_b7_x8 : BITVECTOR(1);
istrue_a1_b7_x9 : BITVECTOR(1);
istrue_a1_b7_x10 : BITVECTOR(1);
istrue_a1_b7_x11 : BITVECTOR(1);
istrue_a1_b7_x12 : BITVECTOR(1);
istrue_a1_b7_x13 : BITVECTOR(1);
istrue_a1_b7_x14 : BITVECTOR(1);
istrue_a1_b7_x15 : BITVECTOR(1);
ddt_a1_b8 : BITVECTOR(5);
istrue_a1_b8_x0 : BITVECTOR(1);
istrue_a1_b8_x1 : BITVECTOR(1);
istrue_a1_b8_x2 : BITVECTOR(1);
istrue_a1_b8_x3 : BITVECTOR(1);
istrue_a1_b8_x4 : BITVECTOR(1);
istrue_a1_b8_x5 : BITVECTOR(1);
istrue_a1_b8_x6 : BITVECTOR(1);
istrue_a1_b8_x7 : BITVECTOR(1);
istrue_a1_b8_x8 : BITVECTOR(1);
istrue_a1_b8_x9 : BITVECTOR(1);
istrue_a1_b8_x10 : BITVECTOR(1);
istrue_a1_b8_x11 : BITVECTOR(1);
istrue_a1_b8_x12 : BITVECTOR(1);
istrue_a1_b8_x13 : BITVECTOR(1);
istrue_a1_b8_x14 : BITVECTOR(1);
istrue_a1_b8_x15 : BITVECTOR(1);
ddt_a1_b9 : BITVECTOR(5);
istrue_a1_b9_x0 : BITVECTOR(1);
istrue_a1_b9_x1 : BITVECTOR(1);
istrue_a1_b9_x2 : BITVECTOR(1);
istrue_a1_b9_x3 : BITVECTOR(1);
istrue_a1_b9_x4 : BITVECTOR(1);
istrue_a1_b9_x5 : BITVECTOR(1);
istrue_a1_b9_x6 : BITVECTOR(1);
istrue_a1_b9_x7 : BITVECTOR(1);
istrue_a1_b9_x8 : BITVECTOR(1);
istrue_a1_b9_x9 : BITVECTOR(1);
istrue_a1_b9_x10 : BITVECTOR(1);
istrue_a1_b9_x11 : BITVECTOR(1);
istrue_a1_b9_x12 : BITVECTOR(1);
istrue_a1_b9_x13 : BITVECTOR(1);
istrue_a1_b9_x14 : BITVECTOR(1);
istrue_a1_b9_x15 : BITVECTOR(1);
ddt_a1_b10 : BITVECTOR(5);
istrue_a1_b10_x0 : BITVECTOR(1);
istrue_a1_b10_x1 : BITVECTOR(1);
istrue_a1_b10_x2 : BITVECTOR(1);
istrue_a1_b10_x3 : BITVECTOR(1);
istrue_a1_b10_x4 : BITVECTOR(1);
istrue_a1_b10_x5 : BITVECTOR(1);
istrue_a1_b10_x6 : BITVECTOR(1);
istrue_a1_b10_x7 : BITVECTOR(1);
istrue_a1_b10_x8 : BITVECTOR(1);
istrue_a1_b10_x9 : BITVECTOR(1);
istrue_a1_b10_x10 : BITVECTOR(1);
istrue_a1_b10_x11 : BITVECTOR(1);
istrue_a1_b10_x12 : BITVECTOR(1);
istrue_a1_b10_x13 : BITVECTOR(1);
istrue_a1_b10_x14 : BITVECTOR(1);
istrue_a1_b10_x15 : BITVECTOR(1);
ddt_a1_b11 : BITVECTOR(5);
istrue_a1_b11_x0 : BITVECTOR(1);
istrue_a1_b11_x1 : BITVECTOR(1);
istrue_a1_b11_x2 : BITVECTOR(1);
istrue_a1_b11_x3 : BITVECTOR(1);
istrue_a1_b11_x4 : BITVECTOR(1);
istrue_a1_b11_x5 : BITVECTOR(1);
istrue_a1_b11_x6 : BITVECTOR(1);
istrue_a1_b11_x7 : BITVECTOR(1);
istrue_a1_b11_x8 : BITVECTOR(1);
istrue_a1_b11_x9 : BITVECTOR(1);
istrue_a1_b11_x10 : BITVECTOR(1);
istrue_a1_b11_x11 : BITVECTOR(1);
istrue_a1_b11_x12 : BITVECTOR(1);
istrue_a1_b11_x13 : BITVECTOR(1);
istrue_a1_b11_x14 : BITVECTOR(1);
istrue_a1_b11_x15 : BITVECTOR(1);
ddt_a1_b12 : BITVECTOR(5);
istrue_a1_b12_x0 : BITVECTOR(1);
istrue_a1_b12_x1 : BITVECTOR(1);
istrue_a1_b12_x2 : BITVECTOR(1);
istrue_a1_b12_x3 : BITVECTOR(1);
istrue_a1_b12_x4 : BITVECTOR(1);
istrue_a1_b12_x5 : BITVECTOR(1);
istrue_a1_b12_x6 : BITVECTOR(1);
istrue_a1_b12_x7 : BITVECTOR(1);
istrue_a1_b12_x8 : BITVECTOR(1);
istrue_a1_b12_x9 : BITVECTOR(1);
istrue_a1_b12_x10 : BITVECTOR(1);
istrue_a1_b12_x11 : BITVECTOR(1);
istrue_a1_b12_x12 : BITVECTOR(1);
istrue_a1_b12_x13 : BITVECTOR(1);
istrue_a1_b12_x14 : BITVECTOR(1);
istrue_a1_b12_x15 : BITVECTOR(1);
ddt_a1_b13 : BITVECTOR(5);
istrue_a1_b13_x0 : BITVECTOR(1);
istrue_a1_b13_x1 : BITVECTOR(1);
istrue_a1_b13_x2 : BITVECTOR(1);
istrue_a1_b13_x3 : BITVECTOR(1);
istrue_a1_b13_x4 : BITVECTOR(1);
istrue_a1_b13_x5 : BITVECTOR(1);
istrue_a1_b13_x6 : BITVECTOR(1);
istrue_a1_b13_x7 : BITVECTOR(1);
istrue_a1_b13_x8 : BITVECTOR(1);
istrue_a1_b13_x9 : BITVECTOR(1);
istrue_a1_b13_x10 : BITVECTOR(1);
istrue_a1_b13_x11 : BITVECTOR(1);
istrue_a1_b13_x12 : BITVECTOR(1);
istrue_a1_b13_x13 : BITVECTOR(1);
istrue_a1_b13_x14 : BITVECTOR(1);
istrue_a1_b13_x15 : BITVECTOR(1);
ddt_a1_b14 : BITVECTOR(5);
istrue_a1_b14_x0 : BITVECTOR(1);
istrue_a1_b14_x1 : BITVECTOR(1);
istrue_a1_b14_x2 : BITVECTOR(1);
istrue_a1_b14_x3 : BITVECTOR(1);
istrue_a1_b14_x4 : BITVECTOR(1);
istrue_a1_b14_x5 : BITVECTOR(1);
istrue_a1_b14_x6 : BITVECTOR(1);
istrue_a1_b14_x7 : BITVECTOR(1);
istrue_a1_b14_x8 : BITVECTOR(1);
istrue_a1_b14_x9 : BITVECTOR(1);
istrue_a1_b14_x10 : BITVECTOR(1);
istrue_a1_b14_x11 : BITVECTOR(1);
istrue_a1_b14_x12 : BITVECTOR(1);
istrue_a1_b14_x13 : BITVECTOR(1);
istrue_a1_b14_x14 : BITVECTOR(1);
istrue_a1_b14_x15 : BITVECTOR(1);
ddt_a1_b15 : BITVECTOR(5);
istrue_a1_b15_x0 : BITVECTOR(1);
istrue_a1_b15_x1 : BITVECTOR(1);
istrue_a1_b15_x2 : BITVECTOR(1);
istrue_a1_b15_x3 : BITVECTOR(1);
istrue_a1_b15_x4 : BITVECTOR(1);
istrue_a1_b15_x5 : BITVECTOR(1);
istrue_a1_b15_x6 : BITVECTOR(1);
istrue_a1_b15_x7 : BITVECTOR(1);
istrue_a1_b15_x8 : BITVECTOR(1);
istrue_a1_b15_x9 : BITVECTOR(1);
istrue_a1_b15_x10 : BITVECTOR(1);
istrue_a1_b15_x11 : BITVECTOR(1);
istrue_a1_b15_x12 : BITVECTOR(1);
istrue_a1_b15_x13 : BITVECTOR(1);
istrue_a1_b15_x14 : BITVECTOR(1);
istrue_a1_b15_x15 : BITVECTOR(1);
ddt_a2_b0 : BITVECTOR(5);
istrue_a2_b0_x0 : BITVECTOR(1);
istrue_a2_b0_x1 : BITVECTOR(1);
istrue_a2_b0_x2 : BITVECTOR(1);
istrue_a2_b0_x3 : BITVECTOR(1);
istrue_a2_b0_x4 : BITVECTOR(1);
istrue_a2_b0_x5 : BITVECTOR(1);
istrue_a2_b0_x6 : BITVECTOR(1);
istrue_a2_b0_x7 : BITVECTOR(1);
istrue_a2_b0_x8 : BITVECTOR(1);
istrue_a2_b0_x9 : BITVECTOR(1);
istrue_a2_b0_x10 : BITVECTOR(1);
istrue_a2_b0_x11 : BITVECTOR(1);
istrue_a2_b0_x12 : BITVECTOR(1);
istrue_a2_b0_x13 : BITVECTOR(1);
istrue_a2_b0_x14 : BITVECTOR(1);
istrue_a2_b0_x15 : BITVECTOR(1);
ddt_a2_b1 : BITVECTOR(5);
istrue_a2_b1_x0 : BITVECTOR(1);
istrue_a2_b1_x1 : BITVECTOR(1);
istrue_a2_b1_x2 : BITVECTOR(1);
istrue_a2_b1_x3 : BITVECTOR(1);
istrue_a2_b1_x4 : BITVECTOR(1);
istrue_a2_b1_x5 : BITVECTOR(1);
istrue_a2_b1_x6 : BITVECTOR(1);
istrue_a2_b1_x7 : BITVECTOR(1);
istrue_a2_b1_x8 : BITVECTOR(1);
istrue_a2_b1_x9 : BITVECTOR(1);
istrue_a2_b1_x10 : BITVECTOR(1);
istrue_a2_b1_x11 : BITVECTOR(1);
istrue_a2_b1_x12 : BITVECTOR(1);
istrue_a2_b1_x13 : BITVECTOR(1);
istrue_a2_b1_x14 : BITVECTOR(1);
istrue_a2_b1_x15 : BITVECTOR(1);
ddt_a2_b2 : BITVECTOR(5);
istrue_a2_b2_x0 : BITVECTOR(1);
istrue_a2_b2_x1 : BITVECTOR(1);
istrue_a2_b2_x2 : BITVECTOR(1);
istrue_a2_b2_x3 : BITVECTOR(1);
istrue_a2_b2_x4 : BITVECTOR(1);
istrue_a2_b2_x5 : BITVECTOR(1);
istrue_a2_b2_x6 : BITVECTOR(1);
istrue_a2_b2_x7 : BITVECTOR(1);
istrue_a2_b2_x8 : BITVECTOR(1);
istrue_a2_b2_x9 : BITVECTOR(1);
istrue_a2_b2_x10 : BITVECTOR(1);
istrue_a2_b2_x11 : BITVECTOR(1);
istrue_a2_b2_x12 : BITVECTOR(1);
istrue_a2_b2_x13 : BITVECTOR(1);
istrue_a2_b2_x14 : BITVECTOR(1);
istrue_a2_b2_x15 : BITVECTOR(1);
ddt_a2_b3 : BITVECTOR(5);
istrue_a2_b3_x0 : BITVECTOR(1);
istrue_a2_b3_x1 : BITVECTOR(1);
istrue_a2_b3_x2 : BITVECTOR(1);
istrue_a2_b3_x3 : BITVECTOR(1);
istrue_a2_b3_x4 : BITVECTOR(1);
istrue_a2_b3_x5 : BITVECTOR(1);
istrue_a2_b3_x6 : BITVECTOR(1);
istrue_a2_b3_x7 : BITVECTOR(1);
istrue_a2_b3_x8 : BITVECTOR(1);
istrue_a2_b3_x9 : BITVECTOR(1);
istrue_a2_b3_x10 : BITVECTOR(1);
istrue_a2_b3_x11 : BITVECTOR(1);
istrue_a2_b3_x12 : BITVECTOR(1);
istrue_a2_b3_x13 : BITVECTOR(1);
istrue_a2_b3_x14 : BITVECTOR(1);
istrue_a2_b3_x15 : BITVECTOR(1);
ddt_a2_b4 : BITVECTOR(5);
istrue_a2_b4_x0 : BITVECTOR(1);
istrue_a2_b4_x1 : BITVECTOR(1);
istrue_a2_b4_x2 : BITVECTOR(1);
istrue_a2_b4_x3 : BITVECTOR(1);
istrue_a2_b4_x4 : BITVECTOR(1);
istrue_a2_b4_x5 : BITVECTOR(1);
istrue_a2_b4_x6 : BITVECTOR(1);
istrue_a2_b4_x7 : BITVECTOR(1);
istrue_a2_b4_x8 : BITVECTOR(1);
istrue_a2_b4_x9 : BITVECTOR(1);
istrue_a2_b4_x10 : BITVECTOR(1);
istrue_a2_b4_x11 : BITVECTOR(1);
istrue_a2_b4_x12 : BITVECTOR(1);
istrue_a2_b4_x13 : BITVECTOR(1);
istrue_a2_b4_x14 : BITVECTOR(1);
istrue_a2_b4_x15 : BITVECTOR(1);
ddt_a2_b5 : BITVECTOR(5);
istrue_a2_b5_x0 : BITVECTOR(1);
istrue_a2_b5_x1 : BITVECTOR(1);
istrue_a2_b5_x2 : BITVECTOR(1);
istrue_a2_b5_x3 : BITVECTOR(1);
istrue_a2_b5_x4 : BITVECTOR(1);
istrue_a2_b5_x5 : BITVECTOR(1);
istrue_a2_b5_x6 : BITVECTOR(1);
istrue_a2_b5_x7 : BITVECTOR(1);
istrue_a2_b5_x8 : BITVECTOR(1);
istrue_a2_b5_x9 : BITVECTOR(1);
istrue_a2_b5_x10 : BITVECTOR(1);
istrue_a2_b5_x11 : BITVECTOR(1);
istrue_a2_b5_x12 : BITVECTOR(1);
istrue_a2_b5_x13 : BITVECTOR(1);
istrue_a2_b5_x14 : BITVECTOR(1);
istrue_a2_b5_x15 : BITVECTOR(1);
ddt_a2_b6 : BITVECTOR(5);
istrue_a2_b6_x0 : BITVECTOR(1);
istrue_a2_b6_x1 : BITVECTOR(1);
istrue_a2_b6_x2 : BITVECTOR(1);
istrue_a2_b6_x3 : BITVECTOR(1);
istrue_a2_b6_x4 : BITVECTOR(1);
istrue_a2_b6_x5 : BITVECTOR(1);
istrue_a2_b6_x6 : BITVECTOR(1);
istrue_a2_b6_x7 : BITVECTOR(1);
istrue_a2_b6_x8 : BITVECTOR(1);
istrue_a2_b6_x9 : BITVECTOR(1);
istrue_a2_b6_x10 : BITVECTOR(1);
istrue_a2_b6_x11 : BITVECTOR(1);
istrue_a2_b6_x12 : BITVECTOR(1);
istrue_a2_b6_x13 : BITVECTOR(1);
istrue_a2_b6_x14 : BITVECTOR(1);
istrue_a2_b6_x15 : BITVECTOR(1);
ddt_a2_b7 : BITVECTOR(5);
istrue_a2_b7_x0 : BITVECTOR(1);
istrue_a2_b7_x1 : BITVECTOR(1);
istrue_a2_b7_x2 : BITVECTOR(1);
istrue_a2_b7_x3 : BITVECTOR(1);
istrue_a2_b7_x4 : BITVECTOR(1);
istrue_a2_b7_x5 : BITVECTOR(1);
istrue_a2_b7_x6 : BITVECTOR(1);
istrue_a2_b7_x7 : BITVECTOR(1);
istrue_a2_b7_x8 : BITVECTOR(1);
istrue_a2_b7_x9 : BITVECTOR(1);
istrue_a2_b7_x10 : BITVECTOR(1);
istrue_a2_b7_x11 : BITVECTOR(1);
istrue_a2_b7_x12 : BITVECTOR(1);
istrue_a2_b7_x13 : BITVECTOR(1);
istrue_a2_b7_x14 : BITVECTOR(1);
istrue_a2_b7_x15 : BITVECTOR(1);
ddt_a2_b8 : BITVECTOR(5);
istrue_a2_b8_x0 : BITVECTOR(1);
istrue_a2_b8_x1 : BITVECTOR(1);
istrue_a2_b8_x2 : BITVECTOR(1);
istrue_a2_b8_x3 : BITVECTOR(1);
istrue_a2_b8_x4 : BITVECTOR(1);
istrue_a2_b8_x5 : BITVECTOR(1);
istrue_a2_b8_x6 : BITVECTOR(1);
istrue_a2_b8_x7 : BITVECTOR(1);
istrue_a2_b8_x8 : BITVECTOR(1);
istrue_a2_b8_x9 : BITVECTOR(1);
istrue_a2_b8_x10 : BITVECTOR(1);
istrue_a2_b8_x11 : BITVECTOR(1);
istrue_a2_b8_x12 : BITVECTOR(1);
istrue_a2_b8_x13 : BITVECTOR(1);
istrue_a2_b8_x14 : BITVECTOR(1);
istrue_a2_b8_x15 : BITVECTOR(1);
ddt_a2_b9 : BITVECTOR(5);
istrue_a2_b9_x0 : BITVECTOR(1);
istrue_a2_b9_x1 : BITVECTOR(1);
istrue_a2_b9_x2 : BITVECTOR(1);
istrue_a2_b9_x3 : BITVECTOR(1);
istrue_a2_b9_x4 : BITVECTOR(1);
istrue_a2_b9_x5 : BITVECTOR(1);
istrue_a2_b9_x6 : BITVECTOR(1);
istrue_a2_b9_x7 : BITVECTOR(1);
istrue_a2_b9_x8 : BITVECTOR(1);
istrue_a2_b9_x9 : BITVECTOR(1);
istrue_a2_b9_x10 : BITVECTOR(1);
istrue_a2_b9_x11 : BITVECTOR(1);
istrue_a2_b9_x12 : BITVECTOR(1);
istrue_a2_b9_x13 : BITVECTOR(1);
istrue_a2_b9_x14 : BITVECTOR(1);
istrue_a2_b9_x15 : BITVECTOR(1);
ddt_a2_b10 : BITVECTOR(5);
istrue_a2_b10_x0 : BITVECTOR(1);
istrue_a2_b10_x1 : BITVECTOR(1);
istrue_a2_b10_x2 : BITVECTOR(1);
istrue_a2_b10_x3 : BITVECTOR(1);
istrue_a2_b10_x4 : BITVECTOR(1);
istrue_a2_b10_x5 : BITVECTOR(1);
istrue_a2_b10_x6 : BITVECTOR(1);
istrue_a2_b10_x7 : BITVECTOR(1);
istrue_a2_b10_x8 : BITVECTOR(1);
istrue_a2_b10_x9 : BITVECTOR(1);
istrue_a2_b10_x10 : BITVECTOR(1);
istrue_a2_b10_x11 : BITVECTOR(1);
istrue_a2_b10_x12 : BITVECTOR(1);
istrue_a2_b10_x13 : BITVECTOR(1);
istrue_a2_b10_x14 : BITVECTOR(1);
istrue_a2_b10_x15 : BITVECTOR(1);
ddt_a2_b11 : BITVECTOR(5);
istrue_a2_b11_x0 : BITVECTOR(1);
istrue_a2_b11_x1 : BITVECTOR(1);
istrue_a2_b11_x2 : BITVECTOR(1);
istrue_a2_b11_x3 : BITVECTOR(1);
istrue_a2_b11_x4 : BITVECTOR(1);
istrue_a2_b11_x5 : BITVECTOR(1);
istrue_a2_b11_x6 : BITVECTOR(1);
istrue_a2_b11_x7 : BITVECTOR(1);
istrue_a2_b11_x8 : BITVECTOR(1);
istrue_a2_b11_x9 : BITVECTOR(1);
istrue_a2_b11_x10 : BITVECTOR(1);
istrue_a2_b11_x11 : BITVECTOR(1);
istrue_a2_b11_x12 : BITVECTOR(1);
istrue_a2_b11_x13 : BITVECTOR(1);
istrue_a2_b11_x14 : BITVECTOR(1);
istrue_a2_b11_x15 : BITVECTOR(1);
ddt_a2_b12 : BITVECTOR(5);
istrue_a2_b12_x0 : BITVECTOR(1);
istrue_a2_b12_x1 : BITVECTOR(1);
istrue_a2_b12_x2 : BITVECTOR(1);
istrue_a2_b12_x3 : BITVECTOR(1);
istrue_a2_b12_x4 : BITVECTOR(1);
istrue_a2_b12_x5 : BITVECTOR(1);
istrue_a2_b12_x6 : BITVECTOR(1);
istrue_a2_b12_x7 : BITVECTOR(1);
istrue_a2_b12_x8 : BITVECTOR(1);
istrue_a2_b12_x9 : BITVECTOR(1);
istrue_a2_b12_x10 : BITVECTOR(1);
istrue_a2_b12_x11 : BITVECTOR(1);
istrue_a2_b12_x12 : BITVECTOR(1);
istrue_a2_b12_x13 : BITVECTOR(1);
istrue_a2_b12_x14 : BITVECTOR(1);
istrue_a2_b12_x15 : BITVECTOR(1);
ddt_a2_b13 : BITVECTOR(5);
istrue_a2_b13_x0 : BITVECTOR(1);
istrue_a2_b13_x1 : BITVECTOR(1);
istrue_a2_b13_x2 : BITVECTOR(1);
istrue_a2_b13_x3 : BITVECTOR(1);
istrue_a2_b13_x4 : BITVECTOR(1);
istrue_a2_b13_x5 : BITVECTOR(1);
istrue_a2_b13_x6 : BITVECTOR(1);
istrue_a2_b13_x7 : BITVECTOR(1);
istrue_a2_b13_x8 : BITVECTOR(1);
istrue_a2_b13_x9 : BITVECTOR(1);
istrue_a2_b13_x10 : BITVECTOR(1);
istrue_a2_b13_x11 : BITVECTOR(1);
istrue_a2_b13_x12 : BITVECTOR(1);
istrue_a2_b13_x13 : BITVECTOR(1);
istrue_a2_b13_x14 : BITVECTOR(1);
istrue_a2_b13_x15 : BITVECTOR(1);
ddt_a2_b14 : BITVECTOR(5);
istrue_a2_b14_x0 : BITVECTOR(1);
istrue_a2_b14_x1 : BITVECTOR(1);
istrue_a2_b14_x2 : BITVECTOR(1);
istrue_a2_b14_x3 : BITVECTOR(1);
istrue_a2_b14_x4 : BITVECTOR(1);
istrue_a2_b14_x5 : BITVECTOR(1);
istrue_a2_b14_x6 : BITVECTOR(1);
istrue_a2_b14_x7 : BITVECTOR(1);
istrue_a2_b14_x8 : BITVECTOR(1);
istrue_a2_b14_x9 : BITVECTOR(1);
istrue_a2_b14_x10 : BITVECTOR(1);
istrue_a2_b14_x11 : BITVECTOR(1);
istrue_a2_b14_x12 : BITVECTOR(1);
istrue_a2_b14_x13 : BITVECTOR(1);
istrue_a2_b14_x14 : BITVECTOR(1);
istrue_a2_b14_x15 : BITVECTOR(1);
ddt_a2_b15 : BITVECTOR(5);
istrue_a2_b15_x0 : BITVECTOR(1);
istrue_a2_b15_x1 : BITVECTOR(1);
istrue_a2_b15_x2 : BITVECTOR(1);
istrue_a2_b15_x3 : BITVECTOR(1);
istrue_a2_b15_x4 : BITVECTOR(1);
istrue_a2_b15_x5 : BITVECTOR(1);
istrue_a2_b15_x6 : BITVECTOR(1);
istrue_a2_b15_x7 : BITVECTOR(1);
istrue_a2_b15_x8 : BITVECTOR(1);
istrue_a2_b15_x9 : BITVECTOR(1);
istrue_a2_b15_x10 : BITVECTOR(1);
istrue_a2_b15_x11 : BITVECTOR(1);
istrue_a2_b15_x12 : BITVECTOR(1);
istrue_a2_b15_x13 : BITVECTOR(1);
istrue_a2_b15_x14 : BITVECTOR(1);
istrue_a2_b15_x15 : BITVECTOR(1);
ddt_a3_b0 : BITVECTOR(5);
istrue_a3_b0_x0 : BITVECTOR(1);
istrue_a3_b0_x1 : BITVECTOR(1);
istrue_a3_b0_x2 : BITVECTOR(1);
istrue_a3_b0_x3 : BITVECTOR(1);
istrue_a3_b0_x4 : BITVECTOR(1);
istrue_a3_b0_x5 : BITVECTOR(1);
istrue_a3_b0_x6 : BITVECTOR(1);
istrue_a3_b0_x7 : BITVECTOR(1);
istrue_a3_b0_x8 : BITVECTOR(1);
istrue_a3_b0_x9 : BITVECTOR(1);
istrue_a3_b0_x10 : BITVECTOR(1);
istrue_a3_b0_x11 : BITVECTOR(1);
istrue_a3_b0_x12 : BITVECTOR(1);
istrue_a3_b0_x13 : BITVECTOR(1);
istrue_a3_b0_x14 : BITVECTOR(1);
istrue_a3_b0_x15 : BITVECTOR(1);
ddt_a3_b1 : BITVECTOR(5);
istrue_a3_b1_x0 : BITVECTOR(1);
istrue_a3_b1_x1 : BITVECTOR(1);
istrue_a3_b1_x2 : BITVECTOR(1);
istrue_a3_b1_x3 : BITVECTOR(1);
istrue_a3_b1_x4 : BITVECTOR(1);
istrue_a3_b1_x5 : BITVECTOR(1);
istrue_a3_b1_x6 : BITVECTOR(1);
istrue_a3_b1_x7 : BITVECTOR(1);
istrue_a3_b1_x8 : BITVECTOR(1);
istrue_a3_b1_x9 : BITVECTOR(1);
istrue_a3_b1_x10 : BITVECTOR(1);
istrue_a3_b1_x11 : BITVECTOR(1);
istrue_a3_b1_x12 : BITVECTOR(1);
istrue_a3_b1_x13 : BITVECTOR(1);
istrue_a3_b1_x14 : BITVECTOR(1);
istrue_a3_b1_x15 : BITVECTOR(1);
ddt_a3_b2 : BITVECTOR(5);
istrue_a3_b2_x0 : BITVECTOR(1);
istrue_a3_b2_x1 : BITVECTOR(1);
istrue_a3_b2_x2 : BITVECTOR(1);
istrue_a3_b2_x3 : BITVECTOR(1);
istrue_a3_b2_x4 : BITVECTOR(1);
istrue_a3_b2_x5 : BITVECTOR(1);
istrue_a3_b2_x6 : BITVECTOR(1);
istrue_a3_b2_x7 : BITVECTOR(1);
istrue_a3_b2_x8 : BITVECTOR(1);
istrue_a3_b2_x9 : BITVECTOR(1);
istrue_a3_b2_x10 : BITVECTOR(1);
istrue_a3_b2_x11 : BITVECTOR(1);
istrue_a3_b2_x12 : BITVECTOR(1);
istrue_a3_b2_x13 : BITVECTOR(1);
istrue_a3_b2_x14 : BITVECTOR(1);
istrue_a3_b2_x15 : BITVECTOR(1);
ddt_a3_b3 : BITVECTOR(5);
istrue_a3_b3_x0 : BITVECTOR(1);
istrue_a3_b3_x1 : BITVECTOR(1);
istrue_a3_b3_x2 : BITVECTOR(1);
istrue_a3_b3_x3 : BITVECTOR(1);
istrue_a3_b3_x4 : BITVECTOR(1);
istrue_a3_b3_x5 : BITVECTOR(1);
istrue_a3_b3_x6 : BITVECTOR(1);
istrue_a3_b3_x7 : BITVECTOR(1);
istrue_a3_b3_x8 : BITVECTOR(1);
istrue_a3_b3_x9 : BITVECTOR(1);
istrue_a3_b3_x10 : BITVECTOR(1);
istrue_a3_b3_x11 : BITVECTOR(1);
istrue_a3_b3_x12 : BITVECTOR(1);
istrue_a3_b3_x13 : BITVECTOR(1);
istrue_a3_b3_x14 : BITVECTOR(1);
istrue_a3_b3_x15 : BITVECTOR(1);
ddt_a3_b4 : BITVECTOR(5);
istrue_a3_b4_x0 : BITVECTOR(1);
istrue_a3_b4_x1 : BITVECTOR(1);
istrue_a3_b4_x2 : BITVECTOR(1);
istrue_a3_b4_x3 : BITVECTOR(1);
istrue_a3_b4_x4 : BITVECTOR(1);
istrue_a3_b4_x5 : BITVECTOR(1);
istrue_a3_b4_x6 : BITVECTOR(1);
istrue_a3_b4_x7 : BITVECTOR(1);
istrue_a3_b4_x8 : BITVECTOR(1);
istrue_a3_b4_x9 : BITVECTOR(1);
istrue_a3_b4_x10 : BITVECTOR(1);
istrue_a3_b4_x11 : BITVECTOR(1);
istrue_a3_b4_x12 : BITVECTOR(1);
istrue_a3_b4_x13 : BITVECTOR(1);
istrue_a3_b4_x14 : BITVECTOR(1);
istrue_a3_b4_x15 : BITVECTOR(1);
ddt_a3_b5 : BITVECTOR(5);
istrue_a3_b5_x0 : BITVECTOR(1);
istrue_a3_b5_x1 : BITVECTOR(1);
istrue_a3_b5_x2 : BITVECTOR(1);
istrue_a3_b5_x3 : BITVECTOR(1);
istrue_a3_b5_x4 : BITVECTOR(1);
istrue_a3_b5_x5 : BITVECTOR(1);
istrue_a3_b5_x6 : BITVECTOR(1);
istrue_a3_b5_x7 : BITVECTOR(1);
istrue_a3_b5_x8 : BITVECTOR(1);
istrue_a3_b5_x9 : BITVECTOR(1);
istrue_a3_b5_x10 : BITVECTOR(1);
istrue_a3_b5_x11 : BITVECTOR(1);
istrue_a3_b5_x12 : BITVECTOR(1);
istrue_a3_b5_x13 : BITVECTOR(1);
istrue_a3_b5_x14 : BITVECTOR(1);
istrue_a3_b5_x15 : BITVECTOR(1);
ddt_a3_b6 : BITVECTOR(5);
istrue_a3_b6_x0 : BITVECTOR(1);
istrue_a3_b6_x1 : BITVECTOR(1);
istrue_a3_b6_x2 : BITVECTOR(1);
istrue_a3_b6_x3 : BITVECTOR(1);
istrue_a3_b6_x4 : BITVECTOR(1);
istrue_a3_b6_x5 : BITVECTOR(1);
istrue_a3_b6_x6 : BITVECTOR(1);
istrue_a3_b6_x7 : BITVECTOR(1);
istrue_a3_b6_x8 : BITVECTOR(1);
istrue_a3_b6_x9 : BITVECTOR(1);
istrue_a3_b6_x10 : BITVECTOR(1);
istrue_a3_b6_x11 : BITVECTOR(1);
istrue_a3_b6_x12 : BITVECTOR(1);
istrue_a3_b6_x13 : BITVECTOR(1);
istrue_a3_b6_x14 : BITVECTOR(1);
istrue_a3_b6_x15 : BITVECTOR(1);
ddt_a3_b7 : BITVECTOR(5);
istrue_a3_b7_x0 : BITVECTOR(1);
istrue_a3_b7_x1 : BITVECTOR(1);
istrue_a3_b7_x2 : BITVECTOR(1);
istrue_a3_b7_x3 : BITVECTOR(1);
istrue_a3_b7_x4 : BITVECTOR(1);
istrue_a3_b7_x5 : BITVECTOR(1);
istrue_a3_b7_x6 : BITVECTOR(1);
istrue_a3_b7_x7 : BITVECTOR(1);
istrue_a3_b7_x8 : BITVECTOR(1);
istrue_a3_b7_x9 : BITVECTOR(1);
istrue_a3_b7_x10 : BITVECTOR(1);
istrue_a3_b7_x11 : BITVECTOR(1);
istrue_a3_b7_x12 : BITVECTOR(1);
istrue_a3_b7_x13 : BITVECTOR(1);
istrue_a3_b7_x14 : BITVECTOR(1);
istrue_a3_b7_x15 : BITVECTOR(1);
ddt_a3_b8 : BITVECTOR(5);
istrue_a3_b8_x0 : BITVECTOR(1);
istrue_a3_b8_x1 : BITVECTOR(1);
istrue_a3_b8_x2 : BITVECTOR(1);
istrue_a3_b8_x3 : BITVECTOR(1);
istrue_a3_b8_x4 : BITVECTOR(1);
istrue_a3_b8_x5 : BITVECTOR(1);
istrue_a3_b8_x6 : BITVECTOR(1);
istrue_a3_b8_x7 : BITVECTOR(1);
istrue_a3_b8_x8 : BITVECTOR(1);
istrue_a3_b8_x9 : BITVECTOR(1);
istrue_a3_b8_x10 : BITVECTOR(1);
istrue_a3_b8_x11 : BITVECTOR(1);
istrue_a3_b8_x12 : BITVECTOR(1);
istrue_a3_b8_x13 : BITVECTOR(1);
istrue_a3_b8_x14 : BITVECTOR(1);
istrue_a3_b8_x15 : BITVECTOR(1);
ddt_a3_b9 : BITVECTOR(5);
istrue_a3_b9_x0 : BITVECTOR(1);
istrue_a3_b9_x1 : BITVECTOR(1);
istrue_a3_b9_x2 : BITVECTOR(1);
istrue_a3_b9_x3 : BITVECTOR(1);
istrue_a3_b9_x4 : BITVECTOR(1);
istrue_a3_b9_x5 : BITVECTOR(1);
istrue_a3_b9_x6 : BITVECTOR(1);
istrue_a3_b9_x7 : BITVECTOR(1);
istrue_a3_b9_x8 : BITVECTOR(1);
istrue_a3_b9_x9 : BITVECTOR(1);
istrue_a3_b9_x10 : BITVECTOR(1);
istrue_a3_b9_x11 : BITVECTOR(1);
istrue_a3_b9_x12 : BITVECTOR(1);
istrue_a3_b9_x13 : BITVECTOR(1);
istrue_a3_b9_x14 : BITVECTOR(1);
istrue_a3_b9_x15 : BITVECTOR(1);
ddt_a3_b10 : BITVECTOR(5);
istrue_a3_b10_x0 : BITVECTOR(1);
istrue_a3_b10_x1 : BITVECTOR(1);
istrue_a3_b10_x2 : BITVECTOR(1);
istrue_a3_b10_x3 : BITVECTOR(1);
istrue_a3_b10_x4 : BITVECTOR(1);
istrue_a3_b10_x5 : BITVECTOR(1);
istrue_a3_b10_x6 : BITVECTOR(1);
istrue_a3_b10_x7 : BITVECTOR(1);
istrue_a3_b10_x8 : BITVECTOR(1);
istrue_a3_b10_x9 : BITVECTOR(1);
istrue_a3_b10_x10 : BITVECTOR(1);
istrue_a3_b10_x11 : BITVECTOR(1);
istrue_a3_b10_x12 : BITVECTOR(1);
istrue_a3_b10_x13 : BITVECTOR(1);
istrue_a3_b10_x14 : BITVECTOR(1);
istrue_a3_b10_x15 : BITVECTOR(1);
ddt_a3_b11 : BITVECTOR(5);
istrue_a3_b11_x0 : BITVECTOR(1);
istrue_a3_b11_x1 : BITVECTOR(1);
istrue_a3_b11_x2 : BITVECTOR(1);
istrue_a3_b11_x3 : BITVECTOR(1);
istrue_a3_b11_x4 : BITVECTOR(1);
istrue_a3_b11_x5 : BITVECTOR(1);
istrue_a3_b11_x6 : BITVECTOR(1);
istrue_a3_b11_x7 : BITVECTOR(1);
istrue_a3_b11_x8 : BITVECTOR(1);
istrue_a3_b11_x9 : BITVECTOR(1);
istrue_a3_b11_x10 : BITVECTOR(1);
istrue_a3_b11_x11 : BITVECTOR(1);
istrue_a3_b11_x12 : BITVECTOR(1);
istrue_a3_b11_x13 : BITVECTOR(1);
istrue_a3_b11_x14 : BITVECTOR(1);
istrue_a3_b11_x15 : BITVECTOR(1);
ddt_a3_b12 : BITVECTOR(5);
istrue_a3_b12_x0 : BITVECTOR(1);
istrue_a3_b12_x1 : BITVECTOR(1);
istrue_a3_b12_x2 : BITVECTOR(1);
istrue_a3_b12_x3 : BITVECTOR(1);
istrue_a3_b12_x4 : BITVECTOR(1);
istrue_a3_b12_x5 : BITVECTOR(1);
istrue_a3_b12_x6 : BITVECTOR(1);
istrue_a3_b12_x7 : BITVECTOR(1);
istrue_a3_b12_x8 : BITVECTOR(1);
istrue_a3_b12_x9 : BITVECTOR(1);
istrue_a3_b12_x10 : BITVECTOR(1);
istrue_a3_b12_x11 : BITVECTOR(1);
istrue_a3_b12_x12 : BITVECTOR(1);
istrue_a3_b12_x13 : BITVECTOR(1);
istrue_a3_b12_x14 : BITVECTOR(1);
istrue_a3_b12_x15 : BITVECTOR(1);
ddt_a3_b13 : BITVECTOR(5);
istrue_a3_b13_x0 : BITVECTOR(1);
istrue_a3_b13_x1 : BITVECTOR(1);
istrue_a3_b13_x2 : BITVECTOR(1);
istrue_a3_b13_x3 : BITVECTOR(1);
istrue_a3_b13_x4 : BITVECTOR(1);
istrue_a3_b13_x5 : BITVECTOR(1);
istrue_a3_b13_x6 : BITVECTOR(1);
istrue_a3_b13_x7 : BITVECTOR(1);
istrue_a3_b13_x8 : BITVECTOR(1);
istrue_a3_b13_x9 : BITVECTOR(1);
istrue_a3_b13_x10 : BITVECTOR(1);
istrue_a3_b13_x11 : BITVECTOR(1);
istrue_a3_b13_x12 : BITVECTOR(1);
istrue_a3_b13_x13 : BITVECTOR(1);
istrue_a3_b13_x14 : BITVECTOR(1);
istrue_a3_b13_x15 : BITVECTOR(1);
ddt_a3_b14 : BITVECTOR(5);
istrue_a3_b14_x0 : BITVECTOR(1);
istrue_a3_b14_x1 : BITVECTOR(1);
istrue_a3_b14_x2 : BITVECTOR(1);
istrue_a3_b14_x3 : BITVECTOR(1);
istrue_a3_b14_x4 : BITVECTOR(1);
istrue_a3_b14_x5 : BITVECTOR(1);
istrue_a3_b14_x6 : BITVECTOR(1);
istrue_a3_b14_x7 : BITVECTOR(1);
istrue_a3_b14_x8 : BITVECTOR(1);
istrue_a3_b14_x9 : BITVECTOR(1);
istrue_a3_b14_x10 : BITVECTOR(1);
istrue_a3_b14_x11 : BITVECTOR(1);
istrue_a3_b14_x12 : BITVECTOR(1);
istrue_a3_b14_x13 : BITVECTOR(1);
istrue_a3_b14_x14 : BITVECTOR(1);
istrue_a3_b14_x15 : BITVECTOR(1);
ddt_a3_b15 : BITVECTOR(5);
istrue_a3_b15_x0 : BITVECTOR(1);
istrue_a3_b15_x1 : BITVECTOR(1);
istrue_a3_b15_x2 : BITVECTOR(1);
istrue_a3_b15_x3 : BITVECTOR(1);
istrue_a3_b15_x4 : BITVECTOR(1);
istrue_a3_b15_x5 : BITVECTOR(1);
istrue_a3_b15_x6 : BITVECTOR(1);
istrue_a3_b15_x7 : BITVECTOR(1);
istrue_a3_b15_x8 : BITVECTOR(1);
istrue_a3_b15_x9 : BITVECTOR(1);
istrue_a3_b15_x10 : BITVECTOR(1);
istrue_a3_b15_x11 : BITVECTOR(1);
istrue_a3_b15_x12 : BITVECTOR(1);
istrue_a3_b15_x13 : BITVECTOR(1);
istrue_a3_b15_x14 : BITVECTOR(1);
istrue_a3_b15_x15 : BITVECTOR(1);
ddt_a4_b0 : BITVECTOR(5);
istrue_a4_b0_x0 : BITVECTOR(1);
istrue_a4_b0_x1 : BITVECTOR(1);
istrue_a4_b0_x2 : BITVECTOR(1);
istrue_a4_b0_x3 : BITVECTOR(1);
istrue_a4_b0_x4 : BITVECTOR(1);
istrue_a4_b0_x5 : BITVECTOR(1);
istrue_a4_b0_x6 : BITVECTOR(1);
istrue_a4_b0_x7 : BITVECTOR(1);
istrue_a4_b0_x8 : BITVECTOR(1);
istrue_a4_b0_x9 : BITVECTOR(1);
istrue_a4_b0_x10 : BITVECTOR(1);
istrue_a4_b0_x11 : BITVECTOR(1);
istrue_a4_b0_x12 : BITVECTOR(1);
istrue_a4_b0_x13 : BITVECTOR(1);
istrue_a4_b0_x14 : BITVECTOR(1);
istrue_a4_b0_x15 : BITVECTOR(1);
ddt_a4_b1 : BITVECTOR(5);
istrue_a4_b1_x0 : BITVECTOR(1);
istrue_a4_b1_x1 : BITVECTOR(1);
istrue_a4_b1_x2 : BITVECTOR(1);
istrue_a4_b1_x3 : BITVECTOR(1);
istrue_a4_b1_x4 : BITVECTOR(1);
istrue_a4_b1_x5 : BITVECTOR(1);
istrue_a4_b1_x6 : BITVECTOR(1);
istrue_a4_b1_x7 : BITVECTOR(1);
istrue_a4_b1_x8 : BITVECTOR(1);
istrue_a4_b1_x9 : BITVECTOR(1);
istrue_a4_b1_x10 : BITVECTOR(1);
istrue_a4_b1_x11 : BITVECTOR(1);
istrue_a4_b1_x12 : BITVECTOR(1);
istrue_a4_b1_x13 : BITVECTOR(1);
istrue_a4_b1_x14 : BITVECTOR(1);
istrue_a4_b1_x15 : BITVECTOR(1);
ddt_a4_b2 : BITVECTOR(5);
istrue_a4_b2_x0 : BITVECTOR(1);
istrue_a4_b2_x1 : BITVECTOR(1);
istrue_a4_b2_x2 : BITVECTOR(1);
istrue_a4_b2_x3 : BITVECTOR(1);
istrue_a4_b2_x4 : BITVECTOR(1);
istrue_a4_b2_x5 : BITVECTOR(1);
istrue_a4_b2_x6 : BITVECTOR(1);
istrue_a4_b2_x7 : BITVECTOR(1);
istrue_a4_b2_x8 : BITVECTOR(1);
istrue_a4_b2_x9 : BITVECTOR(1);
istrue_a4_b2_x10 : BITVECTOR(1);
istrue_a4_b2_x11 : BITVECTOR(1);
istrue_a4_b2_x12 : BITVECTOR(1);
istrue_a4_b2_x13 : BITVECTOR(1);
istrue_a4_b2_x14 : BITVECTOR(1);
istrue_a4_b2_x15 : BITVECTOR(1);
ddt_a4_b3 : BITVECTOR(5);
istrue_a4_b3_x0 : BITVECTOR(1);
istrue_a4_b3_x1 : BITVECTOR(1);
istrue_a4_b3_x2 : BITVECTOR(1);
istrue_a4_b3_x3 : BITVECTOR(1);
istrue_a4_b3_x4 : BITVECTOR(1);
istrue_a4_b3_x5 : BITVECTOR(1);
istrue_a4_b3_x6 : BITVECTOR(1);
istrue_a4_b3_x7 : BITVECTOR(1);
istrue_a4_b3_x8 : BITVECTOR(1);
istrue_a4_b3_x9 : BITVECTOR(1);
istrue_a4_b3_x10 : BITVECTOR(1);
istrue_a4_b3_x11 : BITVECTOR(1);
istrue_a4_b3_x12 : BITVECTOR(1);
istrue_a4_b3_x13 : BITVECTOR(1);
istrue_a4_b3_x14 : BITVECTOR(1);
istrue_a4_b3_x15 : BITVECTOR(1);
ddt_a4_b4 : BITVECTOR(5);
istrue_a4_b4_x0 : BITVECTOR(1);
istrue_a4_b4_x1 : BITVECTOR(1);
istrue_a4_b4_x2 : BITVECTOR(1);
istrue_a4_b4_x3 : BITVECTOR(1);
istrue_a4_b4_x4 : BITVECTOR(1);
istrue_a4_b4_x5 : BITVECTOR(1);
istrue_a4_b4_x6 : BITVECTOR(1);
istrue_a4_b4_x7 : BITVECTOR(1);
istrue_a4_b4_x8 : BITVECTOR(1);
istrue_a4_b4_x9 : BITVECTOR(1);
istrue_a4_b4_x10 : BITVECTOR(1);
istrue_a4_b4_x11 : BITVECTOR(1);
istrue_a4_b4_x12 : BITVECTOR(1);
istrue_a4_b4_x13 : BITVECTOR(1);
istrue_a4_b4_x14 : BITVECTOR(1);
istrue_a4_b4_x15 : BITVECTOR(1);
ddt_a4_b5 : BITVECTOR(5);
istrue_a4_b5_x0 : BITVECTOR(1);
istrue_a4_b5_x1 : BITVECTOR(1);
istrue_a4_b5_x2 : BITVECTOR(1);
istrue_a4_b5_x3 : BITVECTOR(1);
istrue_a4_b5_x4 : BITVECTOR(1);
istrue_a4_b5_x5 : BITVECTOR(1);
istrue_a4_b5_x6 : BITVECTOR(1);
istrue_a4_b5_x7 : BITVECTOR(1);
istrue_a4_b5_x8 : BITVECTOR(1);
istrue_a4_b5_x9 : BITVECTOR(1);
istrue_a4_b5_x10 : BITVECTOR(1);
istrue_a4_b5_x11 : BITVECTOR(1);
istrue_a4_b5_x12 : BITVECTOR(1);
istrue_a4_b5_x13 : BITVECTOR(1);
istrue_a4_b5_x14 : BITVECTOR(1);
istrue_a4_b5_x15 : BITVECTOR(1);
ddt_a4_b6 : BITVECTOR(5);
istrue_a4_b6_x0 : BITVECTOR(1);
istrue_a4_b6_x1 : BITVECTOR(1);
istrue_a4_b6_x2 : BITVECTOR(1);
istrue_a4_b6_x3 : BITVECTOR(1);
istrue_a4_b6_x4 : BITVECTOR(1);
istrue_a4_b6_x5 : BITVECTOR(1);
istrue_a4_b6_x6 : BITVECTOR(1);
istrue_a4_b6_x7 : BITVECTOR(1);
istrue_a4_b6_x8 : BITVECTOR(1);
istrue_a4_b6_x9 : BITVECTOR(1);
istrue_a4_b6_x10 : BITVECTOR(1);
istrue_a4_b6_x11 : BITVECTOR(1);
istrue_a4_b6_x12 : BITVECTOR(1);
istrue_a4_b6_x13 : BITVECTOR(1);
istrue_a4_b6_x14 : BITVECTOR(1);
istrue_a4_b6_x15 : BITVECTOR(1);
ddt_a4_b7 : BITVECTOR(5);
istrue_a4_b7_x0 : BITVECTOR(1);
istrue_a4_b7_x1 : BITVECTOR(1);
istrue_a4_b7_x2 : BITVECTOR(1);
istrue_a4_b7_x3 : BITVECTOR(1);
istrue_a4_b7_x4 : BITVECTOR(1);
istrue_a4_b7_x5 : BITVECTOR(1);
istrue_a4_b7_x6 : BITVECTOR(1);
istrue_a4_b7_x7 : BITVECTOR(1);
istrue_a4_b7_x8 : BITVECTOR(1);
istrue_a4_b7_x9 : BITVECTOR(1);
istrue_a4_b7_x10 : BITVECTOR(1);
istrue_a4_b7_x11 : BITVECTOR(1);
istrue_a4_b7_x12 : BITVECTOR(1);
istrue_a4_b7_x13 : BITVECTOR(1);
istrue_a4_b7_x14 : BITVECTOR(1);
istrue_a4_b7_x15 : BITVECTOR(1);
ddt_a4_b8 : BITVECTOR(5);
istrue_a4_b8_x0 : BITVECTOR(1);
istrue_a4_b8_x1 : BITVECTOR(1);
istrue_a4_b8_x2 : BITVECTOR(1);
istrue_a4_b8_x3 : BITVECTOR(1);
istrue_a4_b8_x4 : BITVECTOR(1);
istrue_a4_b8_x5 : BITVECTOR(1);
istrue_a4_b8_x6 : BITVECTOR(1);
istrue_a4_b8_x7 : BITVECTOR(1);
istrue_a4_b8_x8 : BITVECTOR(1);
istrue_a4_b8_x9 : BITVECTOR(1);
istrue_a4_b8_x10 : BITVECTOR(1);
istrue_a4_b8_x11 : BITVECTOR(1);
istrue_a4_b8_x12 : BITVECTOR(1);
istrue_a4_b8_x13 : BITVECTOR(1);
istrue_a4_b8_x14 : BITVECTOR(1);
istrue_a4_b8_x15 : BITVECTOR(1);
ddt_a4_b9 : BITVECTOR(5);
istrue_a4_b9_x0 : BITVECTOR(1);
istrue_a4_b9_x1 : BITVECTOR(1);
istrue_a4_b9_x2 : BITVECTOR(1);
istrue_a4_b9_x3 : BITVECTOR(1);
istrue_a4_b9_x4 : BITVECTOR(1);
istrue_a4_b9_x5 : BITVECTOR(1);
istrue_a4_b9_x6 : BITVECTOR(1);
istrue_a4_b9_x7 : BITVECTOR(1);
istrue_a4_b9_x8 : BITVECTOR(1);
istrue_a4_b9_x9 : BITVECTOR(1);
istrue_a4_b9_x10 : BITVECTOR(1);
istrue_a4_b9_x11 : BITVECTOR(1);
istrue_a4_b9_x12 : BITVECTOR(1);
istrue_a4_b9_x13 : BITVECTOR(1);
istrue_a4_b9_x14 : BITVECTOR(1);
istrue_a4_b9_x15 : BITVECTOR(1);
ddt_a4_b10 : BITVECTOR(5);
istrue_a4_b10_x0 : BITVECTOR(1);
istrue_a4_b10_x1 : BITVECTOR(1);
istrue_a4_b10_x2 : BITVECTOR(1);
istrue_a4_b10_x3 : BITVECTOR(1);
istrue_a4_b10_x4 : BITVECTOR(1);
istrue_a4_b10_x5 : BITVECTOR(1);
istrue_a4_b10_x6 : BITVECTOR(1);
istrue_a4_b10_x7 : BITVECTOR(1);
istrue_a4_b10_x8 : BITVECTOR(1);
istrue_a4_b10_x9 : BITVECTOR(1);
istrue_a4_b10_x10 : BITVECTOR(1);
istrue_a4_b10_x11 : BITVECTOR(1);
istrue_a4_b10_x12 : BITVECTOR(1);
istrue_a4_b10_x13 : BITVECTOR(1);
istrue_a4_b10_x14 : BITVECTOR(1);
istrue_a4_b10_x15 : BITVECTOR(1);
ddt_a4_b11 : BITVECTOR(5);
istrue_a4_b11_x0 : BITVECTOR(1);
istrue_a4_b11_x1 : BITVECTOR(1);
istrue_a4_b11_x2 : BITVECTOR(1);
istrue_a4_b11_x3 : BITVECTOR(1);
istrue_a4_b11_x4 : BITVECTOR(1);
istrue_a4_b11_x5 : BITVECTOR(1);
istrue_a4_b11_x6 : BITVECTOR(1);
istrue_a4_b11_x7 : BITVECTOR(1);
istrue_a4_b11_x8 : BITVECTOR(1);
istrue_a4_b11_x9 : BITVECTOR(1);
istrue_a4_b11_x10 : BITVECTOR(1);
istrue_a4_b11_x11 : BITVECTOR(1);
istrue_a4_b11_x12 : BITVECTOR(1);
istrue_a4_b11_x13 : BITVECTOR(1);
istrue_a4_b11_x14 : BITVECTOR(1);
istrue_a4_b11_x15 : BITVECTOR(1);
ddt_a4_b12 : BITVECTOR(5);
istrue_a4_b12_x0 : BITVECTOR(1);
istrue_a4_b12_x1 : BITVECTOR(1);
istrue_a4_b12_x2 : BITVECTOR(1);
istrue_a4_b12_x3 : BITVECTOR(1);
istrue_a4_b12_x4 : BITVECTOR(1);
istrue_a4_b12_x5 : BITVECTOR(1);
istrue_a4_b12_x6 : BITVECTOR(1);
istrue_a4_b12_x7 : BITVECTOR(1);
istrue_a4_b12_x8 : BITVECTOR(1);
istrue_a4_b12_x9 : BITVECTOR(1);
istrue_a4_b12_x10 : BITVECTOR(1);
istrue_a4_b12_x11 : BITVECTOR(1);
istrue_a4_b12_x12 : BITVECTOR(1);
istrue_a4_b12_x13 : BITVECTOR(1);
istrue_a4_b12_x14 : BITVECTOR(1);
istrue_a4_b12_x15 : BITVECTOR(1);
ddt_a4_b13 : BITVECTOR(5);
istrue_a4_b13_x0 : BITVECTOR(1);
istrue_a4_b13_x1 : BITVECTOR(1);
istrue_a4_b13_x2 : BITVECTOR(1);
istrue_a4_b13_x3 : BITVECTOR(1);
istrue_a4_b13_x4 : BITVECTOR(1);
istrue_a4_b13_x5 : BITVECTOR(1);
istrue_a4_b13_x6 : BITVECTOR(1);
istrue_a4_b13_x7 : BITVECTOR(1);
istrue_a4_b13_x8 : BITVECTOR(1);
istrue_a4_b13_x9 : BITVECTOR(1);
istrue_a4_b13_x10 : BITVECTOR(1);
istrue_a4_b13_x11 : BITVECTOR(1);
istrue_a4_b13_x12 : BITVECTOR(1);
istrue_a4_b13_x13 : BITVECTOR(1);
istrue_a4_b13_x14 : BITVECTOR(1);
istrue_a4_b13_x15 : BITVECTOR(1);
ddt_a4_b14 : BITVECTOR(5);
istrue_a4_b14_x0 : BITVECTOR(1);
istrue_a4_b14_x1 : BITVECTOR(1);
istrue_a4_b14_x2 : BITVECTOR(1);
istrue_a4_b14_x3 : BITVECTOR(1);
istrue_a4_b14_x4 : BITVECTOR(1);
istrue_a4_b14_x5 : BITVECTOR(1);
istrue_a4_b14_x6 : BITVECTOR(1);
istrue_a4_b14_x7 : BITVECTOR(1);
istrue_a4_b14_x8 : BITVECTOR(1);
istrue_a4_b14_x9 : BITVECTOR(1);
istrue_a4_b14_x10 : BITVECTOR(1);
istrue_a4_b14_x11 : BITVECTOR(1);
istrue_a4_b14_x12 : BITVECTOR(1);
istrue_a4_b14_x13 : BITVECTOR(1);
istrue_a4_b14_x14 : BITVECTOR(1);
istrue_a4_b14_x15 : BITVECTOR(1);
ddt_a4_b15 : BITVECTOR(5);
istrue_a4_b15_x0 : BITVECTOR(1);
istrue_a4_b15_x1 : BITVECTOR(1);
istrue_a4_b15_x2 : BITVECTOR(1);
istrue_a4_b15_x3 : BITVECTOR(1);
istrue_a4_b15_x4 : BITVECTOR(1);
istrue_a4_b15_x5 : BITVECTOR(1);
istrue_a4_b15_x6 : BITVECTOR(1);
istrue_a4_b15_x7 : BITVECTOR(1);
istrue_a4_b15_x8 : BITVECTOR(1);
istrue_a4_b15_x9 : BITVECTOR(1);
istrue_a4_b15_x10 : BITVECTOR(1);
istrue_a4_b15_x11 : BITVECTOR(1);
istrue_a4_b15_x12 : BITVECTOR(1);
istrue_a4_b15_x13 : BITVECTOR(1);
istrue_a4_b15_x14 : BITVECTOR(1);
istrue_a4_b15_x15 : BITVECTOR(1);
ddt_a5_b0 : BITVECTOR(5);
istrue_a5_b0_x0 : BITVECTOR(1);
istrue_a5_b0_x1 : BITVECTOR(1);
istrue_a5_b0_x2 : BITVECTOR(1);
istrue_a5_b0_x3 : BITVECTOR(1);
istrue_a5_b0_x4 : BITVECTOR(1);
istrue_a5_b0_x5 : BITVECTOR(1);
istrue_a5_b0_x6 : BITVECTOR(1);
istrue_a5_b0_x7 : BITVECTOR(1);
istrue_a5_b0_x8 : BITVECTOR(1);
istrue_a5_b0_x9 : BITVECTOR(1);
istrue_a5_b0_x10 : BITVECTOR(1);
istrue_a5_b0_x11 : BITVECTOR(1);
istrue_a5_b0_x12 : BITVECTOR(1);
istrue_a5_b0_x13 : BITVECTOR(1);
istrue_a5_b0_x14 : BITVECTOR(1);
istrue_a5_b0_x15 : BITVECTOR(1);
ddt_a5_b1 : BITVECTOR(5);
istrue_a5_b1_x0 : BITVECTOR(1);
istrue_a5_b1_x1 : BITVECTOR(1);
istrue_a5_b1_x2 : BITVECTOR(1);
istrue_a5_b1_x3 : BITVECTOR(1);
istrue_a5_b1_x4 : BITVECTOR(1);
istrue_a5_b1_x5 : BITVECTOR(1);
istrue_a5_b1_x6 : BITVECTOR(1);
istrue_a5_b1_x7 : BITVECTOR(1);
istrue_a5_b1_x8 : BITVECTOR(1);
istrue_a5_b1_x9 : BITVECTOR(1);
istrue_a5_b1_x10 : BITVECTOR(1);
istrue_a5_b1_x11 : BITVECTOR(1);
istrue_a5_b1_x12 : BITVECTOR(1);
istrue_a5_b1_x13 : BITVECTOR(1);
istrue_a5_b1_x14 : BITVECTOR(1);
istrue_a5_b1_x15 : BITVECTOR(1);
ddt_a5_b2 : BITVECTOR(5);
istrue_a5_b2_x0 : BITVECTOR(1);
istrue_a5_b2_x1 : BITVECTOR(1);
istrue_a5_b2_x2 : BITVECTOR(1);
istrue_a5_b2_x3 : BITVECTOR(1);
istrue_a5_b2_x4 : BITVECTOR(1);
istrue_a5_b2_x5 : BITVECTOR(1);
istrue_a5_b2_x6 : BITVECTOR(1);
istrue_a5_b2_x7 : BITVECTOR(1);
istrue_a5_b2_x8 : BITVECTOR(1);
istrue_a5_b2_x9 : BITVECTOR(1);
istrue_a5_b2_x10 : BITVECTOR(1);
istrue_a5_b2_x11 : BITVECTOR(1);
istrue_a5_b2_x12 : BITVECTOR(1);
istrue_a5_b2_x13 : BITVECTOR(1);
istrue_a5_b2_x14 : BITVECTOR(1);
istrue_a5_b2_x15 : BITVECTOR(1);
ddt_a5_b3 : BITVECTOR(5);
istrue_a5_b3_x0 : BITVECTOR(1);
istrue_a5_b3_x1 : BITVECTOR(1);
istrue_a5_b3_x2 : BITVECTOR(1);
istrue_a5_b3_x3 : BITVECTOR(1);
istrue_a5_b3_x4 : BITVECTOR(1);
istrue_a5_b3_x5 : BITVECTOR(1);
istrue_a5_b3_x6 : BITVECTOR(1);
istrue_a5_b3_x7 : BITVECTOR(1);
istrue_a5_b3_x8 : BITVECTOR(1);
istrue_a5_b3_x9 : BITVECTOR(1);
istrue_a5_b3_x10 : BITVECTOR(1);
istrue_a5_b3_x11 : BITVECTOR(1);
istrue_a5_b3_x12 : BITVECTOR(1);
istrue_a5_b3_x13 : BITVECTOR(1);
istrue_a5_b3_x14 : BITVECTOR(1);
istrue_a5_b3_x15 : BITVECTOR(1);
ddt_a5_b4 : BITVECTOR(5);
istrue_a5_b4_x0 : BITVECTOR(1);
istrue_a5_b4_x1 : BITVECTOR(1);
istrue_a5_b4_x2 : BITVECTOR(1);
istrue_a5_b4_x3 : BITVECTOR(1);
istrue_a5_b4_x4 : BITVECTOR(1);
istrue_a5_b4_x5 : BITVECTOR(1);
istrue_a5_b4_x6 : BITVECTOR(1);
istrue_a5_b4_x7 : BITVECTOR(1);
istrue_a5_b4_x8 : BITVECTOR(1);
istrue_a5_b4_x9 : BITVECTOR(1);
istrue_a5_b4_x10 : BITVECTOR(1);
istrue_a5_b4_x11 : BITVECTOR(1);
istrue_a5_b4_x12 : BITVECTOR(1);
istrue_a5_b4_x13 : BITVECTOR(1);
istrue_a5_b4_x14 : BITVECTOR(1);
istrue_a5_b4_x15 : BITVECTOR(1);
ddt_a5_b5 : BITVECTOR(5);
istrue_a5_b5_x0 : BITVECTOR(1);
istrue_a5_b5_x1 : BITVECTOR(1);
istrue_a5_b5_x2 : BITVECTOR(1);
istrue_a5_b5_x3 : BITVECTOR(1);
istrue_a5_b5_x4 : BITVECTOR(1);
istrue_a5_b5_x5 : BITVECTOR(1);
istrue_a5_b5_x6 : BITVECTOR(1);
istrue_a5_b5_x7 : BITVECTOR(1);
istrue_a5_b5_x8 : BITVECTOR(1);
istrue_a5_b5_x9 : BITVECTOR(1);
istrue_a5_b5_x10 : BITVECTOR(1);
istrue_a5_b5_x11 : BITVECTOR(1);
istrue_a5_b5_x12 : BITVECTOR(1);
istrue_a5_b5_x13 : BITVECTOR(1);
istrue_a5_b5_x14 : BITVECTOR(1);
istrue_a5_b5_x15 : BITVECTOR(1);
ddt_a5_b6 : BITVECTOR(5);
istrue_a5_b6_x0 : BITVECTOR(1);
istrue_a5_b6_x1 : BITVECTOR(1);
istrue_a5_b6_x2 : BITVECTOR(1);
istrue_a5_b6_x3 : BITVECTOR(1);
istrue_a5_b6_x4 : BITVECTOR(1);
istrue_a5_b6_x5 : BITVECTOR(1);
istrue_a5_b6_x6 : BITVECTOR(1);
istrue_a5_b6_x7 : BITVECTOR(1);
istrue_a5_b6_x8 : BITVECTOR(1);
istrue_a5_b6_x9 : BITVECTOR(1);
istrue_a5_b6_x10 : BITVECTOR(1);
istrue_a5_b6_x11 : BITVECTOR(1);
istrue_a5_b6_x12 : BITVECTOR(1);
istrue_a5_b6_x13 : BITVECTOR(1);
istrue_a5_b6_x14 : BITVECTOR(1);
istrue_a5_b6_x15 : BITVECTOR(1);
ddt_a5_b7 : BITVECTOR(5);
istrue_a5_b7_x0 : BITVECTOR(1);
istrue_a5_b7_x1 : BITVECTOR(1);
istrue_a5_b7_x2 : BITVECTOR(1);
istrue_a5_b7_x3 : BITVECTOR(1);
istrue_a5_b7_x4 : BITVECTOR(1);
istrue_a5_b7_x5 : BITVECTOR(1);
istrue_a5_b7_x6 : BITVECTOR(1);
istrue_a5_b7_x7 : BITVECTOR(1);
istrue_a5_b7_x8 : BITVECTOR(1);
istrue_a5_b7_x9 : BITVECTOR(1);
istrue_a5_b7_x10 : BITVECTOR(1);
istrue_a5_b7_x11 : BITVECTOR(1);
istrue_a5_b7_x12 : BITVECTOR(1);
istrue_a5_b7_x13 : BITVECTOR(1);
istrue_a5_b7_x14 : BITVECTOR(1);
istrue_a5_b7_x15 : BITVECTOR(1);
ddt_a5_b8 : BITVECTOR(5);
istrue_a5_b8_x0 : BITVECTOR(1);
istrue_a5_b8_x1 : BITVECTOR(1);
istrue_a5_b8_x2 : BITVECTOR(1);
istrue_a5_b8_x3 : BITVECTOR(1);
istrue_a5_b8_x4 : BITVECTOR(1);
istrue_a5_b8_x5 : BITVECTOR(1);
istrue_a5_b8_x6 : BITVECTOR(1);
istrue_a5_b8_x7 : BITVECTOR(1);
istrue_a5_b8_x8 : BITVECTOR(1);
istrue_a5_b8_x9 : BITVECTOR(1);
istrue_a5_b8_x10 : BITVECTOR(1);
istrue_a5_b8_x11 : BITVECTOR(1);
istrue_a5_b8_x12 : BITVECTOR(1);
istrue_a5_b8_x13 : BITVECTOR(1);
istrue_a5_b8_x14 : BITVECTOR(1);
istrue_a5_b8_x15 : BITVECTOR(1);
ddt_a5_b9 : BITVECTOR(5);
istrue_a5_b9_x0 : BITVECTOR(1);
istrue_a5_b9_x1 : BITVECTOR(1);
istrue_a5_b9_x2 : BITVECTOR(1);
istrue_a5_b9_x3 : BITVECTOR(1);
istrue_a5_b9_x4 : BITVECTOR(1);
istrue_a5_b9_x5 : BITVECTOR(1);
istrue_a5_b9_x6 : BITVECTOR(1);
istrue_a5_b9_x7 : BITVECTOR(1);
istrue_a5_b9_x8 : BITVECTOR(1);
istrue_a5_b9_x9 : BITVECTOR(1);
istrue_a5_b9_x10 : BITVECTOR(1);
istrue_a5_b9_x11 : BITVECTOR(1);
istrue_a5_b9_x12 : BITVECTOR(1);
istrue_a5_b9_x13 : BITVECTOR(1);
istrue_a5_b9_x14 : BITVECTOR(1);
istrue_a5_b9_x15 : BITVECTOR(1);
ddt_a5_b10 : BITVECTOR(5);
istrue_a5_b10_x0 : BITVECTOR(1);
istrue_a5_b10_x1 : BITVECTOR(1);
istrue_a5_b10_x2 : BITVECTOR(1);
istrue_a5_b10_x3 : BITVECTOR(1);
istrue_a5_b10_x4 : BITVECTOR(1);
istrue_a5_b10_x5 : BITVECTOR(1);
istrue_a5_b10_x6 : BITVECTOR(1);
istrue_a5_b10_x7 : BITVECTOR(1);
istrue_a5_b10_x8 : BITVECTOR(1);
istrue_a5_b10_x9 : BITVECTOR(1);
istrue_a5_b10_x10 : BITVECTOR(1);
istrue_a5_b10_x11 : BITVECTOR(1);
istrue_a5_b10_x12 : BITVECTOR(1);
istrue_a5_b10_x13 : BITVECTOR(1);
istrue_a5_b10_x14 : BITVECTOR(1);
istrue_a5_b10_x15 : BITVECTOR(1);
ddt_a5_b11 : BITVECTOR(5);
istrue_a5_b11_x0 : BITVECTOR(1);
istrue_a5_b11_x1 : BITVECTOR(1);
istrue_a5_b11_x2 : BITVECTOR(1);
istrue_a5_b11_x3 : BITVECTOR(1);
istrue_a5_b11_x4 : BITVECTOR(1);
istrue_a5_b11_x5 : BITVECTOR(1);
istrue_a5_b11_x6 : BITVECTOR(1);
istrue_a5_b11_x7 : BITVECTOR(1);
istrue_a5_b11_x8 : BITVECTOR(1);
istrue_a5_b11_x9 : BITVECTOR(1);
istrue_a5_b11_x10 : BITVECTOR(1);
istrue_a5_b11_x11 : BITVECTOR(1);
istrue_a5_b11_x12 : BITVECTOR(1);
istrue_a5_b11_x13 : BITVECTOR(1);
istrue_a5_b11_x14 : BITVECTOR(1);
istrue_a5_b11_x15 : BITVECTOR(1);
ddt_a5_b12 : BITVECTOR(5);
istrue_a5_b12_x0 : BITVECTOR(1);
istrue_a5_b12_x1 : BITVECTOR(1);
istrue_a5_b12_x2 : BITVECTOR(1);
istrue_a5_b12_x3 : BITVECTOR(1);
istrue_a5_b12_x4 : BITVECTOR(1);
istrue_a5_b12_x5 : BITVECTOR(1);
istrue_a5_b12_x6 : BITVECTOR(1);
istrue_a5_b12_x7 : BITVECTOR(1);
istrue_a5_b12_x8 : BITVECTOR(1);
istrue_a5_b12_x9 : BITVECTOR(1);
istrue_a5_b12_x10 : BITVECTOR(1);
istrue_a5_b12_x11 : BITVECTOR(1);
istrue_a5_b12_x12 : BITVECTOR(1);
istrue_a5_b12_x13 : BITVECTOR(1);
istrue_a5_b12_x14 : BITVECTOR(1);
istrue_a5_b12_x15 : BITVECTOR(1);
ddt_a5_b13 : BITVECTOR(5);
istrue_a5_b13_x0 : BITVECTOR(1);
istrue_a5_b13_x1 : BITVECTOR(1);
istrue_a5_b13_x2 : BITVECTOR(1);
istrue_a5_b13_x3 : BITVECTOR(1);
istrue_a5_b13_x4 : BITVECTOR(1);
istrue_a5_b13_x5 : BITVECTOR(1);
istrue_a5_b13_x6 : BITVECTOR(1);
istrue_a5_b13_x7 : BITVECTOR(1);
istrue_a5_b13_x8 : BITVECTOR(1);
istrue_a5_b13_x9 : BITVECTOR(1);
istrue_a5_b13_x10 : BITVECTOR(1);
istrue_a5_b13_x11 : BITVECTOR(1);
istrue_a5_b13_x12 : BITVECTOR(1);
istrue_a5_b13_x13 : BITVECTOR(1);
istrue_a5_b13_x14 : BITVECTOR(1);
istrue_a5_b13_x15 : BITVECTOR(1);
ddt_a5_b14 : BITVECTOR(5);
istrue_a5_b14_x0 : BITVECTOR(1);
istrue_a5_b14_x1 : BITVECTOR(1);
istrue_a5_b14_x2 : BITVECTOR(1);
istrue_a5_b14_x3 : BITVECTOR(1);
istrue_a5_b14_x4 : BITVECTOR(1);
istrue_a5_b14_x5 : BITVECTOR(1);
istrue_a5_b14_x6 : BITVECTOR(1);
istrue_a5_b14_x7 : BITVECTOR(1);
istrue_a5_b14_x8 : BITVECTOR(1);
istrue_a5_b14_x9 : BITVECTOR(1);
istrue_a5_b14_x10 : BITVECTOR(1);
istrue_a5_b14_x11 : BITVECTOR(1);
istrue_a5_b14_x12 : BITVECTOR(1);
istrue_a5_b14_x13 : BITVECTOR(1);
istrue_a5_b14_x14 : BITVECTOR(1);
istrue_a5_b14_x15 : BITVECTOR(1);
ddt_a5_b15 : BITVECTOR(5);
istrue_a5_b15_x0 : BITVECTOR(1);
istrue_a5_b15_x1 : BITVECTOR(1);
istrue_a5_b15_x2 : BITVECTOR(1);
istrue_a5_b15_x3 : BITVECTOR(1);
istrue_a5_b15_x4 : BITVECTOR(1);
istrue_a5_b15_x5 : BITVECTOR(1);
istrue_a5_b15_x6 : BITVECTOR(1);
istrue_a5_b15_x7 : BITVECTOR(1);
istrue_a5_b15_x8 : BITVECTOR(1);
istrue_a5_b15_x9 : BITVECTOR(1);
istrue_a5_b15_x10 : BITVECTOR(1);
istrue_a5_b15_x11 : BITVECTOR(1);
istrue_a5_b15_x12 : BITVECTOR(1);
istrue_a5_b15_x13 : BITVECTOR(1);
istrue_a5_b15_x14 : BITVECTOR(1);
istrue_a5_b15_x15 : BITVECTOR(1);
ddt_a6_b0 : BITVECTOR(5);
istrue_a6_b0_x0 : BITVECTOR(1);
istrue_a6_b0_x1 : BITVECTOR(1);
istrue_a6_b0_x2 : BITVECTOR(1);
istrue_a6_b0_x3 : BITVECTOR(1);
istrue_a6_b0_x4 : BITVECTOR(1);
istrue_a6_b0_x5 : BITVECTOR(1);
istrue_a6_b0_x6 : BITVECTOR(1);
istrue_a6_b0_x7 : BITVECTOR(1);
istrue_a6_b0_x8 : BITVECTOR(1);
istrue_a6_b0_x9 : BITVECTOR(1);
istrue_a6_b0_x10 : BITVECTOR(1);
istrue_a6_b0_x11 : BITVECTOR(1);
istrue_a6_b0_x12 : BITVECTOR(1);
istrue_a6_b0_x13 : BITVECTOR(1);
istrue_a6_b0_x14 : BITVECTOR(1);
istrue_a6_b0_x15 : BITVECTOR(1);
ddt_a6_b1 : BITVECTOR(5);
istrue_a6_b1_x0 : BITVECTOR(1);
istrue_a6_b1_x1 : BITVECTOR(1);
istrue_a6_b1_x2 : BITVECTOR(1);
istrue_a6_b1_x3 : BITVECTOR(1);
istrue_a6_b1_x4 : BITVECTOR(1);
istrue_a6_b1_x5 : BITVECTOR(1);
istrue_a6_b1_x6 : BITVECTOR(1);
istrue_a6_b1_x7 : BITVECTOR(1);
istrue_a6_b1_x8 : BITVECTOR(1);
istrue_a6_b1_x9 : BITVECTOR(1);
istrue_a6_b1_x10 : BITVECTOR(1);
istrue_a6_b1_x11 : BITVECTOR(1);
istrue_a6_b1_x12 : BITVECTOR(1);
istrue_a6_b1_x13 : BITVECTOR(1);
istrue_a6_b1_x14 : BITVECTOR(1);
istrue_a6_b1_x15 : BITVECTOR(1);
ddt_a6_b2 : BITVECTOR(5);
istrue_a6_b2_x0 : BITVECTOR(1);
istrue_a6_b2_x1 : BITVECTOR(1);
istrue_a6_b2_x2 : BITVECTOR(1);
istrue_a6_b2_x3 : BITVECTOR(1);
istrue_a6_b2_x4 : BITVECTOR(1);
istrue_a6_b2_x5 : BITVECTOR(1);
istrue_a6_b2_x6 : BITVECTOR(1);
istrue_a6_b2_x7 : BITVECTOR(1);
istrue_a6_b2_x8 : BITVECTOR(1);
istrue_a6_b2_x9 : BITVECTOR(1);
istrue_a6_b2_x10 : BITVECTOR(1);
istrue_a6_b2_x11 : BITVECTOR(1);
istrue_a6_b2_x12 : BITVECTOR(1);
istrue_a6_b2_x13 : BITVECTOR(1);
istrue_a6_b2_x14 : BITVECTOR(1);
istrue_a6_b2_x15 : BITVECTOR(1);
ddt_a6_b3 : BITVECTOR(5);
istrue_a6_b3_x0 : BITVECTOR(1);
istrue_a6_b3_x1 : BITVECTOR(1);
istrue_a6_b3_x2 : BITVECTOR(1);
istrue_a6_b3_x3 : BITVECTOR(1);
istrue_a6_b3_x4 : BITVECTOR(1);
istrue_a6_b3_x5 : BITVECTOR(1);
istrue_a6_b3_x6 : BITVECTOR(1);
istrue_a6_b3_x7 : BITVECTOR(1);
istrue_a6_b3_x8 : BITVECTOR(1);
istrue_a6_b3_x9 : BITVECTOR(1);
istrue_a6_b3_x10 : BITVECTOR(1);
istrue_a6_b3_x11 : BITVECTOR(1);
istrue_a6_b3_x12 : BITVECTOR(1);
istrue_a6_b3_x13 : BITVECTOR(1);
istrue_a6_b3_x14 : BITVECTOR(1);
istrue_a6_b3_x15 : BITVECTOR(1);
ddt_a6_b4 : BITVECTOR(5);
istrue_a6_b4_x0 : BITVECTOR(1);
istrue_a6_b4_x1 : BITVECTOR(1);
istrue_a6_b4_x2 : BITVECTOR(1);
istrue_a6_b4_x3 : BITVECTOR(1);
istrue_a6_b4_x4 : BITVECTOR(1);
istrue_a6_b4_x5 : BITVECTOR(1);
istrue_a6_b4_x6 : BITVECTOR(1);
istrue_a6_b4_x7 : BITVECTOR(1);
istrue_a6_b4_x8 : BITVECTOR(1);
istrue_a6_b4_x9 : BITVECTOR(1);
istrue_a6_b4_x10 : BITVECTOR(1);
istrue_a6_b4_x11 : BITVECTOR(1);
istrue_a6_b4_x12 : BITVECTOR(1);
istrue_a6_b4_x13 : BITVECTOR(1);
istrue_a6_b4_x14 : BITVECTOR(1);
istrue_a6_b4_x15 : BITVECTOR(1);
ddt_a6_b5 : BITVECTOR(5);
istrue_a6_b5_x0 : BITVECTOR(1);
istrue_a6_b5_x1 : BITVECTOR(1);
istrue_a6_b5_x2 : BITVECTOR(1);
istrue_a6_b5_x3 : BITVECTOR(1);
istrue_a6_b5_x4 : BITVECTOR(1);
istrue_a6_b5_x5 : BITVECTOR(1);
istrue_a6_b5_x6 : BITVECTOR(1);
istrue_a6_b5_x7 : BITVECTOR(1);
istrue_a6_b5_x8 : BITVECTOR(1);
istrue_a6_b5_x9 : BITVECTOR(1);
istrue_a6_b5_x10 : BITVECTOR(1);
istrue_a6_b5_x11 : BITVECTOR(1);
istrue_a6_b5_x12 : BITVECTOR(1);
istrue_a6_b5_x13 : BITVECTOR(1);
istrue_a6_b5_x14 : BITVECTOR(1);
istrue_a6_b5_x15 : BITVECTOR(1);
ddt_a6_b6 : BITVECTOR(5);
istrue_a6_b6_x0 : BITVECTOR(1);
istrue_a6_b6_x1 : BITVECTOR(1);
istrue_a6_b6_x2 : BITVECTOR(1);
istrue_a6_b6_x3 : BITVECTOR(1);
istrue_a6_b6_x4 : BITVECTOR(1);
istrue_a6_b6_x5 : BITVECTOR(1);
istrue_a6_b6_x6 : BITVECTOR(1);
istrue_a6_b6_x7 : BITVECTOR(1);
istrue_a6_b6_x8 : BITVECTOR(1);
istrue_a6_b6_x9 : BITVECTOR(1);
istrue_a6_b6_x10 : BITVECTOR(1);
istrue_a6_b6_x11 : BITVECTOR(1);
istrue_a6_b6_x12 : BITVECTOR(1);
istrue_a6_b6_x13 : BITVECTOR(1);
istrue_a6_b6_x14 : BITVECTOR(1);
istrue_a6_b6_x15 : BITVECTOR(1);
ddt_a6_b7 : BITVECTOR(5);
istrue_a6_b7_x0 : BITVECTOR(1);
istrue_a6_b7_x1 : BITVECTOR(1);
istrue_a6_b7_x2 : BITVECTOR(1);
istrue_a6_b7_x3 : BITVECTOR(1);
istrue_a6_b7_x4 : BITVECTOR(1);
istrue_a6_b7_x5 : BITVECTOR(1);
istrue_a6_b7_x6 : BITVECTOR(1);
istrue_a6_b7_x7 : BITVECTOR(1);
istrue_a6_b7_x8 : BITVECTOR(1);
istrue_a6_b7_x9 : BITVECTOR(1);
istrue_a6_b7_x10 : BITVECTOR(1);
istrue_a6_b7_x11 : BITVECTOR(1);
istrue_a6_b7_x12 : BITVECTOR(1);
istrue_a6_b7_x13 : BITVECTOR(1);
istrue_a6_b7_x14 : BITVECTOR(1);
istrue_a6_b7_x15 : BITVECTOR(1);
ddt_a6_b8 : BITVECTOR(5);
istrue_a6_b8_x0 : BITVECTOR(1);
istrue_a6_b8_x1 : BITVECTOR(1);
istrue_a6_b8_x2 : BITVECTOR(1);
istrue_a6_b8_x3 : BITVECTOR(1);
istrue_a6_b8_x4 : BITVECTOR(1);
istrue_a6_b8_x5 : BITVECTOR(1);
istrue_a6_b8_x6 : BITVECTOR(1);
istrue_a6_b8_x7 : BITVECTOR(1);
istrue_a6_b8_x8 : BITVECTOR(1);
istrue_a6_b8_x9 : BITVECTOR(1);
istrue_a6_b8_x10 : BITVECTOR(1);
istrue_a6_b8_x11 : BITVECTOR(1);
istrue_a6_b8_x12 : BITVECTOR(1);
istrue_a6_b8_x13 : BITVECTOR(1);
istrue_a6_b8_x14 : BITVECTOR(1);
istrue_a6_b8_x15 : BITVECTOR(1);
ddt_a6_b9 : BITVECTOR(5);
istrue_a6_b9_x0 : BITVECTOR(1);
istrue_a6_b9_x1 : BITVECTOR(1);
istrue_a6_b9_x2 : BITVECTOR(1);
istrue_a6_b9_x3 : BITVECTOR(1);
istrue_a6_b9_x4 : BITVECTOR(1);
istrue_a6_b9_x5 : BITVECTOR(1);
istrue_a6_b9_x6 : BITVECTOR(1);
istrue_a6_b9_x7 : BITVECTOR(1);
istrue_a6_b9_x8 : BITVECTOR(1);
istrue_a6_b9_x9 : BITVECTOR(1);
istrue_a6_b9_x10 : BITVECTOR(1);
istrue_a6_b9_x11 : BITVECTOR(1);
istrue_a6_b9_x12 : BITVECTOR(1);
istrue_a6_b9_x13 : BITVECTOR(1);
istrue_a6_b9_x14 : BITVECTOR(1);
istrue_a6_b9_x15 : BITVECTOR(1);
ddt_a6_b10 : BITVECTOR(5);
istrue_a6_b10_x0 : BITVECTOR(1);
istrue_a6_b10_x1 : BITVECTOR(1);
istrue_a6_b10_x2 : BITVECTOR(1);
istrue_a6_b10_x3 : BITVECTOR(1);
istrue_a6_b10_x4 : BITVECTOR(1);
istrue_a6_b10_x5 : BITVECTOR(1);
istrue_a6_b10_x6 : BITVECTOR(1);
istrue_a6_b10_x7 : BITVECTOR(1);
istrue_a6_b10_x8 : BITVECTOR(1);
istrue_a6_b10_x9 : BITVECTOR(1);
istrue_a6_b10_x10 : BITVECTOR(1);
istrue_a6_b10_x11 : BITVECTOR(1);
istrue_a6_b10_x12 : BITVECTOR(1);
istrue_a6_b10_x13 : BITVECTOR(1);
istrue_a6_b10_x14 : BITVECTOR(1);
istrue_a6_b10_x15 : BITVECTOR(1);
ddt_a6_b11 : BITVECTOR(5);
istrue_a6_b11_x0 : BITVECTOR(1);
istrue_a6_b11_x1 : BITVECTOR(1);
istrue_a6_b11_x2 : BITVECTOR(1);
istrue_a6_b11_x3 : BITVECTOR(1);
istrue_a6_b11_x4 : BITVECTOR(1);
istrue_a6_b11_x5 : BITVECTOR(1);
istrue_a6_b11_x6 : BITVECTOR(1);
istrue_a6_b11_x7 : BITVECTOR(1);
istrue_a6_b11_x8 : BITVECTOR(1);
istrue_a6_b11_x9 : BITVECTOR(1);
istrue_a6_b11_x10 : BITVECTOR(1);
istrue_a6_b11_x11 : BITVECTOR(1);
istrue_a6_b11_x12 : BITVECTOR(1);
istrue_a6_b11_x13 : BITVECTOR(1);
istrue_a6_b11_x14 : BITVECTOR(1);
istrue_a6_b11_x15 : BITVECTOR(1);
ddt_a6_b12 : BITVECTOR(5);
istrue_a6_b12_x0 : BITVECTOR(1);
istrue_a6_b12_x1 : BITVECTOR(1);
istrue_a6_b12_x2 : BITVECTOR(1);
istrue_a6_b12_x3 : BITVECTOR(1);
istrue_a6_b12_x4 : BITVECTOR(1);
istrue_a6_b12_x5 : BITVECTOR(1);
istrue_a6_b12_x6 : BITVECTOR(1);
istrue_a6_b12_x7 : BITVECTOR(1);
istrue_a6_b12_x8 : BITVECTOR(1);
istrue_a6_b12_x9 : BITVECTOR(1);
istrue_a6_b12_x10 : BITVECTOR(1);
istrue_a6_b12_x11 : BITVECTOR(1);
istrue_a6_b12_x12 : BITVECTOR(1);
istrue_a6_b12_x13 : BITVECTOR(1);
istrue_a6_b12_x14 : BITVECTOR(1);
istrue_a6_b12_x15 : BITVECTOR(1);
ddt_a6_b13 : BITVECTOR(5);
istrue_a6_b13_x0 : BITVECTOR(1);
istrue_a6_b13_x1 : BITVECTOR(1);
istrue_a6_b13_x2 : BITVECTOR(1);
istrue_a6_b13_x3 : BITVECTOR(1);
istrue_a6_b13_x4 : BITVECTOR(1);
istrue_a6_b13_x5 : BITVECTOR(1);
istrue_a6_b13_x6 : BITVECTOR(1);
istrue_a6_b13_x7 : BITVECTOR(1);
istrue_a6_b13_x8 : BITVECTOR(1);
istrue_a6_b13_x9 : BITVECTOR(1);
istrue_a6_b13_x10 : BITVECTOR(1);
istrue_a6_b13_x11 : BITVECTOR(1);
istrue_a6_b13_x12 : BITVECTOR(1);
istrue_a6_b13_x13 : BITVECTOR(1);
istrue_a6_b13_x14 : BITVECTOR(1);
istrue_a6_b13_x15 : BITVECTOR(1);
ddt_a6_b14 : BITVECTOR(5);
istrue_a6_b14_x0 : BITVECTOR(1);
istrue_a6_b14_x1 : BITVECTOR(1);
istrue_a6_b14_x2 : BITVECTOR(1);
istrue_a6_b14_x3 : BITVECTOR(1);
istrue_a6_b14_x4 : BITVECTOR(1);
istrue_a6_b14_x5 : BITVECTOR(1);
istrue_a6_b14_x6 : BITVECTOR(1);
istrue_a6_b14_x7 : BITVECTOR(1);
istrue_a6_b14_x8 : BITVECTOR(1);
istrue_a6_b14_x9 : BITVECTOR(1);
istrue_a6_b14_x10 : BITVECTOR(1);
istrue_a6_b14_x11 : BITVECTOR(1);
istrue_a6_b14_x12 : BITVECTOR(1);
istrue_a6_b14_x13 : BITVECTOR(1);
istrue_a6_b14_x14 : BITVECTOR(1);
istrue_a6_b14_x15 : BITVECTOR(1);
ddt_a6_b15 : BITVECTOR(5);
istrue_a6_b15_x0 : BITVECTOR(1);
istrue_a6_b15_x1 : BITVECTOR(1);
istrue_a6_b15_x2 : BITVECTOR(1);
istrue_a6_b15_x3 : BITVECTOR(1);
istrue_a6_b15_x4 : BITVECTOR(1);
istrue_a6_b15_x5 : BITVECTOR(1);
istrue_a6_b15_x6 : BITVECTOR(1);
istrue_a6_b15_x7 : BITVECTOR(1);
istrue_a6_b15_x8 : BITVECTOR(1);
istrue_a6_b15_x9 : BITVECTOR(1);
istrue_a6_b15_x10 : BITVECTOR(1);
istrue_a6_b15_x11 : BITVECTOR(1);
istrue_a6_b15_x12 : BITVECTOR(1);
istrue_a6_b15_x13 : BITVECTOR(1);
istrue_a6_b15_x14 : BITVECTOR(1);
istrue_a6_b15_x15 : BITVECTOR(1);
ddt_a7_b0 : BITVECTOR(5);
istrue_a7_b0_x0 : BITVECTOR(1);
istrue_a7_b0_x1 : BITVECTOR(1);
istrue_a7_b0_x2 : BITVECTOR(1);
istrue_a7_b0_x3 : BITVECTOR(1);
istrue_a7_b0_x4 : BITVECTOR(1);
istrue_a7_b0_x5 : BITVECTOR(1);
istrue_a7_b0_x6 : BITVECTOR(1);
istrue_a7_b0_x7 : BITVECTOR(1);
istrue_a7_b0_x8 : BITVECTOR(1);
istrue_a7_b0_x9 : BITVECTOR(1);
istrue_a7_b0_x10 : BITVECTOR(1);
istrue_a7_b0_x11 : BITVECTOR(1);
istrue_a7_b0_x12 : BITVECTOR(1);
istrue_a7_b0_x13 : BITVECTOR(1);
istrue_a7_b0_x14 : BITVECTOR(1);
istrue_a7_b0_x15 : BITVECTOR(1);
ddt_a7_b1 : BITVECTOR(5);
istrue_a7_b1_x0 : BITVECTOR(1);
istrue_a7_b1_x1 : BITVECTOR(1);
istrue_a7_b1_x2 : BITVECTOR(1);
istrue_a7_b1_x3 : BITVECTOR(1);
istrue_a7_b1_x4 : BITVECTOR(1);
istrue_a7_b1_x5 : BITVECTOR(1);
istrue_a7_b1_x6 : BITVECTOR(1);
istrue_a7_b1_x7 : BITVECTOR(1);
istrue_a7_b1_x8 : BITVECTOR(1);
istrue_a7_b1_x9 : BITVECTOR(1);
istrue_a7_b1_x10 : BITVECTOR(1);
istrue_a7_b1_x11 : BITVECTOR(1);
istrue_a7_b1_x12 : BITVECTOR(1);
istrue_a7_b1_x13 : BITVECTOR(1);
istrue_a7_b1_x14 : BITVECTOR(1);
istrue_a7_b1_x15 : BITVECTOR(1);
ddt_a7_b2 : BITVECTOR(5);
istrue_a7_b2_x0 : BITVECTOR(1);
istrue_a7_b2_x1 : BITVECTOR(1);
istrue_a7_b2_x2 : BITVECTOR(1);
istrue_a7_b2_x3 : BITVECTOR(1);
istrue_a7_b2_x4 : BITVECTOR(1);
istrue_a7_b2_x5 : BITVECTOR(1);
istrue_a7_b2_x6 : BITVECTOR(1);
istrue_a7_b2_x7 : BITVECTOR(1);
istrue_a7_b2_x8 : BITVECTOR(1);
istrue_a7_b2_x9 : BITVECTOR(1);
istrue_a7_b2_x10 : BITVECTOR(1);
istrue_a7_b2_x11 : BITVECTOR(1);
istrue_a7_b2_x12 : BITVECTOR(1);
istrue_a7_b2_x13 : BITVECTOR(1);
istrue_a7_b2_x14 : BITVECTOR(1);
istrue_a7_b2_x15 : BITVECTOR(1);
ddt_a7_b3 : BITVECTOR(5);
istrue_a7_b3_x0 : BITVECTOR(1);
istrue_a7_b3_x1 : BITVECTOR(1);
istrue_a7_b3_x2 : BITVECTOR(1);
istrue_a7_b3_x3 : BITVECTOR(1);
istrue_a7_b3_x4 : BITVECTOR(1);
istrue_a7_b3_x5 : BITVECTOR(1);
istrue_a7_b3_x6 : BITVECTOR(1);
istrue_a7_b3_x7 : BITVECTOR(1);
istrue_a7_b3_x8 : BITVECTOR(1);
istrue_a7_b3_x9 : BITVECTOR(1);
istrue_a7_b3_x10 : BITVECTOR(1);
istrue_a7_b3_x11 : BITVECTOR(1);
istrue_a7_b3_x12 : BITVECTOR(1);
istrue_a7_b3_x13 : BITVECTOR(1);
istrue_a7_b3_x14 : BITVECTOR(1);
istrue_a7_b3_x15 : BITVECTOR(1);
ddt_a7_b4 : BITVECTOR(5);
istrue_a7_b4_x0 : BITVECTOR(1);
istrue_a7_b4_x1 : BITVECTOR(1);
istrue_a7_b4_x2 : BITVECTOR(1);
istrue_a7_b4_x3 : BITVECTOR(1);
istrue_a7_b4_x4 : BITVECTOR(1);
istrue_a7_b4_x5 : BITVECTOR(1);
istrue_a7_b4_x6 : BITVECTOR(1);
istrue_a7_b4_x7 : BITVECTOR(1);
istrue_a7_b4_x8 : BITVECTOR(1);
istrue_a7_b4_x9 : BITVECTOR(1);
istrue_a7_b4_x10 : BITVECTOR(1);
istrue_a7_b4_x11 : BITVECTOR(1);
istrue_a7_b4_x12 : BITVECTOR(1);
istrue_a7_b4_x13 : BITVECTOR(1);
istrue_a7_b4_x14 : BITVECTOR(1);
istrue_a7_b4_x15 : BITVECTOR(1);
ddt_a7_b5 : BITVECTOR(5);
istrue_a7_b5_x0 : BITVECTOR(1);
istrue_a7_b5_x1 : BITVECTOR(1);
istrue_a7_b5_x2 : BITVECTOR(1);
istrue_a7_b5_x3 : BITVECTOR(1);
istrue_a7_b5_x4 : BITVECTOR(1);
istrue_a7_b5_x5 : BITVECTOR(1);
istrue_a7_b5_x6 : BITVECTOR(1);
istrue_a7_b5_x7 : BITVECTOR(1);
istrue_a7_b5_x8 : BITVECTOR(1);
istrue_a7_b5_x9 : BITVECTOR(1);
istrue_a7_b5_x10 : BITVECTOR(1);
istrue_a7_b5_x11 : BITVECTOR(1);
istrue_a7_b5_x12 : BITVECTOR(1);
istrue_a7_b5_x13 : BITVECTOR(1);
istrue_a7_b5_x14 : BITVECTOR(1);
istrue_a7_b5_x15 : BITVECTOR(1);
ddt_a7_b6 : BITVECTOR(5);
istrue_a7_b6_x0 : BITVECTOR(1);
istrue_a7_b6_x1 : BITVECTOR(1);
istrue_a7_b6_x2 : BITVECTOR(1);
istrue_a7_b6_x3 : BITVECTOR(1);
istrue_a7_b6_x4 : BITVECTOR(1);
istrue_a7_b6_x5 : BITVECTOR(1);
istrue_a7_b6_x6 : BITVECTOR(1);
istrue_a7_b6_x7 : BITVECTOR(1);
istrue_a7_b6_x8 : BITVECTOR(1);
istrue_a7_b6_x9 : BITVECTOR(1);
istrue_a7_b6_x10 : BITVECTOR(1);
istrue_a7_b6_x11 : BITVECTOR(1);
istrue_a7_b6_x12 : BITVECTOR(1);
istrue_a7_b6_x13 : BITVECTOR(1);
istrue_a7_b6_x14 : BITVECTOR(1);
istrue_a7_b6_x15 : BITVECTOR(1);
ddt_a7_b7 : BITVECTOR(5);
istrue_a7_b7_x0 : BITVECTOR(1);
istrue_a7_b7_x1 : BITVECTOR(1);
istrue_a7_b7_x2 : BITVECTOR(1);
istrue_a7_b7_x3 : BITVECTOR(1);
istrue_a7_b7_x4 : BITVECTOR(1);
istrue_a7_b7_x5 : BITVECTOR(1);
istrue_a7_b7_x6 : BITVECTOR(1);
istrue_a7_b7_x7 : BITVECTOR(1);
istrue_a7_b7_x8 : BITVECTOR(1);
istrue_a7_b7_x9 : BITVECTOR(1);
istrue_a7_b7_x10 : BITVECTOR(1);
istrue_a7_b7_x11 : BITVECTOR(1);
istrue_a7_b7_x12 : BITVECTOR(1);
istrue_a7_b7_x13 : BITVECTOR(1);
istrue_a7_b7_x14 : BITVECTOR(1);
istrue_a7_b7_x15 : BITVECTOR(1);
ddt_a7_b8 : BITVECTOR(5);
istrue_a7_b8_x0 : BITVECTOR(1);
istrue_a7_b8_x1 : BITVECTOR(1);
istrue_a7_b8_x2 : BITVECTOR(1);
istrue_a7_b8_x3 : BITVECTOR(1);
istrue_a7_b8_x4 : BITVECTOR(1);
istrue_a7_b8_x5 : BITVECTOR(1);
istrue_a7_b8_x6 : BITVECTOR(1);
istrue_a7_b8_x7 : BITVECTOR(1);
istrue_a7_b8_x8 : BITVECTOR(1);
istrue_a7_b8_x9 : BITVECTOR(1);
istrue_a7_b8_x10 : BITVECTOR(1);
istrue_a7_b8_x11 : BITVECTOR(1);
istrue_a7_b8_x12 : BITVECTOR(1);
istrue_a7_b8_x13 : BITVECTOR(1);
istrue_a7_b8_x14 : BITVECTOR(1);
istrue_a7_b8_x15 : BITVECTOR(1);
ddt_a7_b9 : BITVECTOR(5);
istrue_a7_b9_x0 : BITVECTOR(1);
istrue_a7_b9_x1 : BITVECTOR(1);
istrue_a7_b9_x2 : BITVECTOR(1);
istrue_a7_b9_x3 : BITVECTOR(1);
istrue_a7_b9_x4 : BITVECTOR(1);
istrue_a7_b9_x5 : BITVECTOR(1);
istrue_a7_b9_x6 : BITVECTOR(1);
istrue_a7_b9_x7 : BITVECTOR(1);
istrue_a7_b9_x8 : BITVECTOR(1);
istrue_a7_b9_x9 : BITVECTOR(1);
istrue_a7_b9_x10 : BITVECTOR(1);
istrue_a7_b9_x11 : BITVECTOR(1);
istrue_a7_b9_x12 : BITVECTOR(1);
istrue_a7_b9_x13 : BITVECTOR(1);
istrue_a7_b9_x14 : BITVECTOR(1);
istrue_a7_b9_x15 : BITVECTOR(1);
ddt_a7_b10 : BITVECTOR(5);
istrue_a7_b10_x0 : BITVECTOR(1);
istrue_a7_b10_x1 : BITVECTOR(1);
istrue_a7_b10_x2 : BITVECTOR(1);
istrue_a7_b10_x3 : BITVECTOR(1);
istrue_a7_b10_x4 : BITVECTOR(1);
istrue_a7_b10_x5 : BITVECTOR(1);
istrue_a7_b10_x6 : BITVECTOR(1);
istrue_a7_b10_x7 : BITVECTOR(1);
istrue_a7_b10_x8 : BITVECTOR(1);
istrue_a7_b10_x9 : BITVECTOR(1);
istrue_a7_b10_x10 : BITVECTOR(1);
istrue_a7_b10_x11 : BITVECTOR(1);
istrue_a7_b10_x12 : BITVECTOR(1);
istrue_a7_b10_x13 : BITVECTOR(1);
istrue_a7_b10_x14 : BITVECTOR(1);
istrue_a7_b10_x15 : BITVECTOR(1);
ddt_a7_b11 : BITVECTOR(5);
istrue_a7_b11_x0 : BITVECTOR(1);
istrue_a7_b11_x1 : BITVECTOR(1);
istrue_a7_b11_x2 : BITVECTOR(1);
istrue_a7_b11_x3 : BITVECTOR(1);
istrue_a7_b11_x4 : BITVECTOR(1);
istrue_a7_b11_x5 : BITVECTOR(1);
istrue_a7_b11_x6 : BITVECTOR(1);
istrue_a7_b11_x7 : BITVECTOR(1);
istrue_a7_b11_x8 : BITVECTOR(1);
istrue_a7_b11_x9 : BITVECTOR(1);
istrue_a7_b11_x10 : BITVECTOR(1);
istrue_a7_b11_x11 : BITVECTOR(1);
istrue_a7_b11_x12 : BITVECTOR(1);
istrue_a7_b11_x13 : BITVECTOR(1);
istrue_a7_b11_x14 : BITVECTOR(1);
istrue_a7_b11_x15 : BITVECTOR(1);
ddt_a7_b12 : BITVECTOR(5);
istrue_a7_b12_x0 : BITVECTOR(1);
istrue_a7_b12_x1 : BITVECTOR(1);
istrue_a7_b12_x2 : BITVECTOR(1);
istrue_a7_b12_x3 : BITVECTOR(1);
istrue_a7_b12_x4 : BITVECTOR(1);
istrue_a7_b12_x5 : BITVECTOR(1);
istrue_a7_b12_x6 : BITVECTOR(1);
istrue_a7_b12_x7 : BITVECTOR(1);
istrue_a7_b12_x8 : BITVECTOR(1);
istrue_a7_b12_x9 : BITVECTOR(1);
istrue_a7_b12_x10 : BITVECTOR(1);
istrue_a7_b12_x11 : BITVECTOR(1);
istrue_a7_b12_x12 : BITVECTOR(1);
istrue_a7_b12_x13 : BITVECTOR(1);
istrue_a7_b12_x14 : BITVECTOR(1);
istrue_a7_b12_x15 : BITVECTOR(1);
ddt_a7_b13 : BITVECTOR(5);
istrue_a7_b13_x0 : BITVECTOR(1);
istrue_a7_b13_x1 : BITVECTOR(1);
istrue_a7_b13_x2 : BITVECTOR(1);
istrue_a7_b13_x3 : BITVECTOR(1);
istrue_a7_b13_x4 : BITVECTOR(1);
istrue_a7_b13_x5 : BITVECTOR(1);
istrue_a7_b13_x6 : BITVECTOR(1);
istrue_a7_b13_x7 : BITVECTOR(1);
istrue_a7_b13_x8 : BITVECTOR(1);
istrue_a7_b13_x9 : BITVECTOR(1);
istrue_a7_b13_x10 : BITVECTOR(1);
istrue_a7_b13_x11 : BITVECTOR(1);
istrue_a7_b13_x12 : BITVECTOR(1);
istrue_a7_b13_x13 : BITVECTOR(1);
istrue_a7_b13_x14 : BITVECTOR(1);
istrue_a7_b13_x15 : BITVECTOR(1);
ddt_a7_b14 : BITVECTOR(5);
istrue_a7_b14_x0 : BITVECTOR(1);
istrue_a7_b14_x1 : BITVECTOR(1);
istrue_a7_b14_x2 : BITVECTOR(1);
istrue_a7_b14_x3 : BITVECTOR(1);
istrue_a7_b14_x4 : BITVECTOR(1);
istrue_a7_b14_x5 : BITVECTOR(1);
istrue_a7_b14_x6 : BITVECTOR(1);
istrue_a7_b14_x7 : BITVECTOR(1);
istrue_a7_b14_x8 : BITVECTOR(1);
istrue_a7_b14_x9 : BITVECTOR(1);
istrue_a7_b14_x10 : BITVECTOR(1);
istrue_a7_b14_x11 : BITVECTOR(1);
istrue_a7_b14_x12 : BITVECTOR(1);
istrue_a7_b14_x13 : BITVECTOR(1);
istrue_a7_b14_x14 : BITVECTOR(1);
istrue_a7_b14_x15 : BITVECTOR(1);
ddt_a7_b15 : BITVECTOR(5);
istrue_a7_b15_x0 : BITVECTOR(1);
istrue_a7_b15_x1 : BITVECTOR(1);
istrue_a7_b15_x2 : BITVECTOR(1);
istrue_a7_b15_x3 : BITVECTOR(1);
istrue_a7_b15_x4 : BITVECTOR(1);
istrue_a7_b15_x5 : BITVECTOR(1);
istrue_a7_b15_x6 : BITVECTOR(1);
istrue_a7_b15_x7 : BITVECTOR(1);
istrue_a7_b15_x8 : BITVECTOR(1);
istrue_a7_b15_x9 : BITVECTOR(1);
istrue_a7_b15_x10 : BITVECTOR(1);
istrue_a7_b15_x11 : BITVECTOR(1);
istrue_a7_b15_x12 : BITVECTOR(1);
istrue_a7_b15_x13 : BITVECTOR(1);
istrue_a7_b15_x14 : BITVECTOR(1);
istrue_a7_b15_x15 : BITVECTOR(1);
ddt_a8_b0 : BITVECTOR(5);
istrue_a8_b0_x0 : BITVECTOR(1);
istrue_a8_b0_x1 : BITVECTOR(1);
istrue_a8_b0_x2 : BITVECTOR(1);
istrue_a8_b0_x3 : BITVECTOR(1);
istrue_a8_b0_x4 : BITVECTOR(1);
istrue_a8_b0_x5 : BITVECTOR(1);
istrue_a8_b0_x6 : BITVECTOR(1);
istrue_a8_b0_x7 : BITVECTOR(1);
istrue_a8_b0_x8 : BITVECTOR(1);
istrue_a8_b0_x9 : BITVECTOR(1);
istrue_a8_b0_x10 : BITVECTOR(1);
istrue_a8_b0_x11 : BITVECTOR(1);
istrue_a8_b0_x12 : BITVECTOR(1);
istrue_a8_b0_x13 : BITVECTOR(1);
istrue_a8_b0_x14 : BITVECTOR(1);
istrue_a8_b0_x15 : BITVECTOR(1);
ddt_a8_b1 : BITVECTOR(5);
istrue_a8_b1_x0 : BITVECTOR(1);
istrue_a8_b1_x1 : BITVECTOR(1);
istrue_a8_b1_x2 : BITVECTOR(1);
istrue_a8_b1_x3 : BITVECTOR(1);
istrue_a8_b1_x4 : BITVECTOR(1);
istrue_a8_b1_x5 : BITVECTOR(1);
istrue_a8_b1_x6 : BITVECTOR(1);
istrue_a8_b1_x7 : BITVECTOR(1);
istrue_a8_b1_x8 : BITVECTOR(1);
istrue_a8_b1_x9 : BITVECTOR(1);
istrue_a8_b1_x10 : BITVECTOR(1);
istrue_a8_b1_x11 : BITVECTOR(1);
istrue_a8_b1_x12 : BITVECTOR(1);
istrue_a8_b1_x13 : BITVECTOR(1);
istrue_a8_b1_x14 : BITVECTOR(1);
istrue_a8_b1_x15 : BITVECTOR(1);
ddt_a8_b2 : BITVECTOR(5);
istrue_a8_b2_x0 : BITVECTOR(1);
istrue_a8_b2_x1 : BITVECTOR(1);
istrue_a8_b2_x2 : BITVECTOR(1);
istrue_a8_b2_x3 : BITVECTOR(1);
istrue_a8_b2_x4 : BITVECTOR(1);
istrue_a8_b2_x5 : BITVECTOR(1);
istrue_a8_b2_x6 : BITVECTOR(1);
istrue_a8_b2_x7 : BITVECTOR(1);
istrue_a8_b2_x8 : BITVECTOR(1);
istrue_a8_b2_x9 : BITVECTOR(1);
istrue_a8_b2_x10 : BITVECTOR(1);
istrue_a8_b2_x11 : BITVECTOR(1);
istrue_a8_b2_x12 : BITVECTOR(1);
istrue_a8_b2_x13 : BITVECTOR(1);
istrue_a8_b2_x14 : BITVECTOR(1);
istrue_a8_b2_x15 : BITVECTOR(1);
ddt_a8_b3 : BITVECTOR(5);
istrue_a8_b3_x0 : BITVECTOR(1);
istrue_a8_b3_x1 : BITVECTOR(1);
istrue_a8_b3_x2 : BITVECTOR(1);
istrue_a8_b3_x3 : BITVECTOR(1);
istrue_a8_b3_x4 : BITVECTOR(1);
istrue_a8_b3_x5 : BITVECTOR(1);
istrue_a8_b3_x6 : BITVECTOR(1);
istrue_a8_b3_x7 : BITVECTOR(1);
istrue_a8_b3_x8 : BITVECTOR(1);
istrue_a8_b3_x9 : BITVECTOR(1);
istrue_a8_b3_x10 : BITVECTOR(1);
istrue_a8_b3_x11 : BITVECTOR(1);
istrue_a8_b3_x12 : BITVECTOR(1);
istrue_a8_b3_x13 : BITVECTOR(1);
istrue_a8_b3_x14 : BITVECTOR(1);
istrue_a8_b3_x15 : BITVECTOR(1);
ddt_a8_b4 : BITVECTOR(5);
istrue_a8_b4_x0 : BITVECTOR(1);
istrue_a8_b4_x1 : BITVECTOR(1);
istrue_a8_b4_x2 : BITVECTOR(1);
istrue_a8_b4_x3 : BITVECTOR(1);
istrue_a8_b4_x4 : BITVECTOR(1);
istrue_a8_b4_x5 : BITVECTOR(1);
istrue_a8_b4_x6 : BITVECTOR(1);
istrue_a8_b4_x7 : BITVECTOR(1);
istrue_a8_b4_x8 : BITVECTOR(1);
istrue_a8_b4_x9 : BITVECTOR(1);
istrue_a8_b4_x10 : BITVECTOR(1);
istrue_a8_b4_x11 : BITVECTOR(1);
istrue_a8_b4_x12 : BITVECTOR(1);
istrue_a8_b4_x13 : BITVECTOR(1);
istrue_a8_b4_x14 : BITVECTOR(1);
istrue_a8_b4_x15 : BITVECTOR(1);
ddt_a8_b5 : BITVECTOR(5);
istrue_a8_b5_x0 : BITVECTOR(1);
istrue_a8_b5_x1 : BITVECTOR(1);
istrue_a8_b5_x2 : BITVECTOR(1);
istrue_a8_b5_x3 : BITVECTOR(1);
istrue_a8_b5_x4 : BITVECTOR(1);
istrue_a8_b5_x5 : BITVECTOR(1);
istrue_a8_b5_x6 : BITVECTOR(1);
istrue_a8_b5_x7 : BITVECTOR(1);
istrue_a8_b5_x8 : BITVECTOR(1);
istrue_a8_b5_x9 : BITVECTOR(1);
istrue_a8_b5_x10 : BITVECTOR(1);
istrue_a8_b5_x11 : BITVECTOR(1);
istrue_a8_b5_x12 : BITVECTOR(1);
istrue_a8_b5_x13 : BITVECTOR(1);
istrue_a8_b5_x14 : BITVECTOR(1);
istrue_a8_b5_x15 : BITVECTOR(1);
ddt_a8_b6 : BITVECTOR(5);
istrue_a8_b6_x0 : BITVECTOR(1);
istrue_a8_b6_x1 : BITVECTOR(1);
istrue_a8_b6_x2 : BITVECTOR(1);
istrue_a8_b6_x3 : BITVECTOR(1);
istrue_a8_b6_x4 : BITVECTOR(1);
istrue_a8_b6_x5 : BITVECTOR(1);
istrue_a8_b6_x6 : BITVECTOR(1);
istrue_a8_b6_x7 : BITVECTOR(1);
istrue_a8_b6_x8 : BITVECTOR(1);
istrue_a8_b6_x9 : BITVECTOR(1);
istrue_a8_b6_x10 : BITVECTOR(1);
istrue_a8_b6_x11 : BITVECTOR(1);
istrue_a8_b6_x12 : BITVECTOR(1);
istrue_a8_b6_x13 : BITVECTOR(1);
istrue_a8_b6_x14 : BITVECTOR(1);
istrue_a8_b6_x15 : BITVECTOR(1);
ddt_a8_b7 : BITVECTOR(5);
istrue_a8_b7_x0 : BITVECTOR(1);
istrue_a8_b7_x1 : BITVECTOR(1);
istrue_a8_b7_x2 : BITVECTOR(1);
istrue_a8_b7_x3 : BITVECTOR(1);
istrue_a8_b7_x4 : BITVECTOR(1);
istrue_a8_b7_x5 : BITVECTOR(1);
istrue_a8_b7_x6 : BITVECTOR(1);
istrue_a8_b7_x7 : BITVECTOR(1);
istrue_a8_b7_x8 : BITVECTOR(1);
istrue_a8_b7_x9 : BITVECTOR(1);
istrue_a8_b7_x10 : BITVECTOR(1);
istrue_a8_b7_x11 : BITVECTOR(1);
istrue_a8_b7_x12 : BITVECTOR(1);
istrue_a8_b7_x13 : BITVECTOR(1);
istrue_a8_b7_x14 : BITVECTOR(1);
istrue_a8_b7_x15 : BITVECTOR(1);
ddt_a8_b8 : BITVECTOR(5);
istrue_a8_b8_x0 : BITVECTOR(1);
istrue_a8_b8_x1 : BITVECTOR(1);
istrue_a8_b8_x2 : BITVECTOR(1);
istrue_a8_b8_x3 : BITVECTOR(1);
istrue_a8_b8_x4 : BITVECTOR(1);
istrue_a8_b8_x5 : BITVECTOR(1);
istrue_a8_b8_x6 : BITVECTOR(1);
istrue_a8_b8_x7 : BITVECTOR(1);
istrue_a8_b8_x8 : BITVECTOR(1);
istrue_a8_b8_x9 : BITVECTOR(1);
istrue_a8_b8_x10 : BITVECTOR(1);
istrue_a8_b8_x11 : BITVECTOR(1);
istrue_a8_b8_x12 : BITVECTOR(1);
istrue_a8_b8_x13 : BITVECTOR(1);
istrue_a8_b8_x14 : BITVECTOR(1);
istrue_a8_b8_x15 : BITVECTOR(1);
ddt_a8_b9 : BITVECTOR(5);
istrue_a8_b9_x0 : BITVECTOR(1);
istrue_a8_b9_x1 : BITVECTOR(1);
istrue_a8_b9_x2 : BITVECTOR(1);
istrue_a8_b9_x3 : BITVECTOR(1);
istrue_a8_b9_x4 : BITVECTOR(1);
istrue_a8_b9_x5 : BITVECTOR(1);
istrue_a8_b9_x6 : BITVECTOR(1);
istrue_a8_b9_x7 : BITVECTOR(1);
istrue_a8_b9_x8 : BITVECTOR(1);
istrue_a8_b9_x9 : BITVECTOR(1);
istrue_a8_b9_x10 : BITVECTOR(1);
istrue_a8_b9_x11 : BITVECTOR(1);
istrue_a8_b9_x12 : BITVECTOR(1);
istrue_a8_b9_x13 : BITVECTOR(1);
istrue_a8_b9_x14 : BITVECTOR(1);
istrue_a8_b9_x15 : BITVECTOR(1);
ddt_a8_b10 : BITVECTOR(5);
istrue_a8_b10_x0 : BITVECTOR(1);
istrue_a8_b10_x1 : BITVECTOR(1);
istrue_a8_b10_x2 : BITVECTOR(1);
istrue_a8_b10_x3 : BITVECTOR(1);
istrue_a8_b10_x4 : BITVECTOR(1);
istrue_a8_b10_x5 : BITVECTOR(1);
istrue_a8_b10_x6 : BITVECTOR(1);
istrue_a8_b10_x7 : BITVECTOR(1);
istrue_a8_b10_x8 : BITVECTOR(1);
istrue_a8_b10_x9 : BITVECTOR(1);
istrue_a8_b10_x10 : BITVECTOR(1);
istrue_a8_b10_x11 : BITVECTOR(1);
istrue_a8_b10_x12 : BITVECTOR(1);
istrue_a8_b10_x13 : BITVECTOR(1);
istrue_a8_b10_x14 : BITVECTOR(1);
istrue_a8_b10_x15 : BITVECTOR(1);
ddt_a8_b11 : BITVECTOR(5);
istrue_a8_b11_x0 : BITVECTOR(1);
istrue_a8_b11_x1 : BITVECTOR(1);
istrue_a8_b11_x2 : BITVECTOR(1);
istrue_a8_b11_x3 : BITVECTOR(1);
istrue_a8_b11_x4 : BITVECTOR(1);
istrue_a8_b11_x5 : BITVECTOR(1);
istrue_a8_b11_x6 : BITVECTOR(1);
istrue_a8_b11_x7 : BITVECTOR(1);
istrue_a8_b11_x8 : BITVECTOR(1);
istrue_a8_b11_x9 : BITVECTOR(1);
istrue_a8_b11_x10 : BITVECTOR(1);
istrue_a8_b11_x11 : BITVECTOR(1);
istrue_a8_b11_x12 : BITVECTOR(1);
istrue_a8_b11_x13 : BITVECTOR(1);
istrue_a8_b11_x14 : BITVECTOR(1);
istrue_a8_b11_x15 : BITVECTOR(1);
ddt_a8_b12 : BITVECTOR(5);
istrue_a8_b12_x0 : BITVECTOR(1);
istrue_a8_b12_x1 : BITVECTOR(1);
istrue_a8_b12_x2 : BITVECTOR(1);
istrue_a8_b12_x3 : BITVECTOR(1);
istrue_a8_b12_x4 : BITVECTOR(1);
istrue_a8_b12_x5 : BITVECTOR(1);
istrue_a8_b12_x6 : BITVECTOR(1);
istrue_a8_b12_x7 : BITVECTOR(1);
istrue_a8_b12_x8 : BITVECTOR(1);
istrue_a8_b12_x9 : BITVECTOR(1);
istrue_a8_b12_x10 : BITVECTOR(1);
istrue_a8_b12_x11 : BITVECTOR(1);
istrue_a8_b12_x12 : BITVECTOR(1);
istrue_a8_b12_x13 : BITVECTOR(1);
istrue_a8_b12_x14 : BITVECTOR(1);
istrue_a8_b12_x15 : BITVECTOR(1);
ddt_a8_b13 : BITVECTOR(5);
istrue_a8_b13_x0 : BITVECTOR(1);
istrue_a8_b13_x1 : BITVECTOR(1);
istrue_a8_b13_x2 : BITVECTOR(1);
istrue_a8_b13_x3 : BITVECTOR(1);
istrue_a8_b13_x4 : BITVECTOR(1);
istrue_a8_b13_x5 : BITVECTOR(1);
istrue_a8_b13_x6 : BITVECTOR(1);
istrue_a8_b13_x7 : BITVECTOR(1);
istrue_a8_b13_x8 : BITVECTOR(1);
istrue_a8_b13_x9 : BITVECTOR(1);
istrue_a8_b13_x10 : BITVECTOR(1);
istrue_a8_b13_x11 : BITVECTOR(1);
istrue_a8_b13_x12 : BITVECTOR(1);
istrue_a8_b13_x13 : BITVECTOR(1);
istrue_a8_b13_x14 : BITVECTOR(1);
istrue_a8_b13_x15 : BITVECTOR(1);
ddt_a8_b14 : BITVECTOR(5);
istrue_a8_b14_x0 : BITVECTOR(1);
istrue_a8_b14_x1 : BITVECTOR(1);
istrue_a8_b14_x2 : BITVECTOR(1);
istrue_a8_b14_x3 : BITVECTOR(1);
istrue_a8_b14_x4 : BITVECTOR(1);
istrue_a8_b14_x5 : BITVECTOR(1);
istrue_a8_b14_x6 : BITVECTOR(1);
istrue_a8_b14_x7 : BITVECTOR(1);
istrue_a8_b14_x8 : BITVECTOR(1);
istrue_a8_b14_x9 : BITVECTOR(1);
istrue_a8_b14_x10 : BITVECTOR(1);
istrue_a8_b14_x11 : BITVECTOR(1);
istrue_a8_b14_x12 : BITVECTOR(1);
istrue_a8_b14_x13 : BITVECTOR(1);
istrue_a8_b14_x14 : BITVECTOR(1);
istrue_a8_b14_x15 : BITVECTOR(1);
ddt_a8_b15 : BITVECTOR(5);
istrue_a8_b15_x0 : BITVECTOR(1);
istrue_a8_b15_x1 : BITVECTOR(1);
istrue_a8_b15_x2 : BITVECTOR(1);
istrue_a8_b15_x3 : BITVECTOR(1);
istrue_a8_b15_x4 : BITVECTOR(1);
istrue_a8_b15_x5 : BITVECTOR(1);
istrue_a8_b15_x6 : BITVECTOR(1);
istrue_a8_b15_x7 : BITVECTOR(1);
istrue_a8_b15_x8 : BITVECTOR(1);
istrue_a8_b15_x9 : BITVECTOR(1);
istrue_a8_b15_x10 : BITVECTOR(1);
istrue_a8_b15_x11 : BITVECTOR(1);
istrue_a8_b15_x12 : BITVECTOR(1);
istrue_a8_b15_x13 : BITVECTOR(1);
istrue_a8_b15_x14 : BITVECTOR(1);
istrue_a8_b15_x15 : BITVECTOR(1);
ddt_a9_b0 : BITVECTOR(5);
istrue_a9_b0_x0 : BITVECTOR(1);
istrue_a9_b0_x1 : BITVECTOR(1);
istrue_a9_b0_x2 : BITVECTOR(1);
istrue_a9_b0_x3 : BITVECTOR(1);
istrue_a9_b0_x4 : BITVECTOR(1);
istrue_a9_b0_x5 : BITVECTOR(1);
istrue_a9_b0_x6 : BITVECTOR(1);
istrue_a9_b0_x7 : BITVECTOR(1);
istrue_a9_b0_x8 : BITVECTOR(1);
istrue_a9_b0_x9 : BITVECTOR(1);
istrue_a9_b0_x10 : BITVECTOR(1);
istrue_a9_b0_x11 : BITVECTOR(1);
istrue_a9_b0_x12 : BITVECTOR(1);
istrue_a9_b0_x13 : BITVECTOR(1);
istrue_a9_b0_x14 : BITVECTOR(1);
istrue_a9_b0_x15 : BITVECTOR(1);
ddt_a9_b1 : BITVECTOR(5);
istrue_a9_b1_x0 : BITVECTOR(1);
istrue_a9_b1_x1 : BITVECTOR(1);
istrue_a9_b1_x2 : BITVECTOR(1);
istrue_a9_b1_x3 : BITVECTOR(1);
istrue_a9_b1_x4 : BITVECTOR(1);
istrue_a9_b1_x5 : BITVECTOR(1);
istrue_a9_b1_x6 : BITVECTOR(1);
istrue_a9_b1_x7 : BITVECTOR(1);
istrue_a9_b1_x8 : BITVECTOR(1);
istrue_a9_b1_x9 : BITVECTOR(1);
istrue_a9_b1_x10 : BITVECTOR(1);
istrue_a9_b1_x11 : BITVECTOR(1);
istrue_a9_b1_x12 : BITVECTOR(1);
istrue_a9_b1_x13 : BITVECTOR(1);
istrue_a9_b1_x14 : BITVECTOR(1);
istrue_a9_b1_x15 : BITVECTOR(1);
ddt_a9_b2 : BITVECTOR(5);
istrue_a9_b2_x0 : BITVECTOR(1);
istrue_a9_b2_x1 : BITVECTOR(1);
istrue_a9_b2_x2 : BITVECTOR(1);
istrue_a9_b2_x3 : BITVECTOR(1);
istrue_a9_b2_x4 : BITVECTOR(1);
istrue_a9_b2_x5 : BITVECTOR(1);
istrue_a9_b2_x6 : BITVECTOR(1);
istrue_a9_b2_x7 : BITVECTOR(1);
istrue_a9_b2_x8 : BITVECTOR(1);
istrue_a9_b2_x9 : BITVECTOR(1);
istrue_a9_b2_x10 : BITVECTOR(1);
istrue_a9_b2_x11 : BITVECTOR(1);
istrue_a9_b2_x12 : BITVECTOR(1);
istrue_a9_b2_x13 : BITVECTOR(1);
istrue_a9_b2_x14 : BITVECTOR(1);
istrue_a9_b2_x15 : BITVECTOR(1);
ddt_a9_b3 : BITVECTOR(5);
istrue_a9_b3_x0 : BITVECTOR(1);
istrue_a9_b3_x1 : BITVECTOR(1);
istrue_a9_b3_x2 : BITVECTOR(1);
istrue_a9_b3_x3 : BITVECTOR(1);
istrue_a9_b3_x4 : BITVECTOR(1);
istrue_a9_b3_x5 : BITVECTOR(1);
istrue_a9_b3_x6 : BITVECTOR(1);
istrue_a9_b3_x7 : BITVECTOR(1);
istrue_a9_b3_x8 : BITVECTOR(1);
istrue_a9_b3_x9 : BITVECTOR(1);
istrue_a9_b3_x10 : BITVECTOR(1);
istrue_a9_b3_x11 : BITVECTOR(1);
istrue_a9_b3_x12 : BITVECTOR(1);
istrue_a9_b3_x13 : BITVECTOR(1);
istrue_a9_b3_x14 : BITVECTOR(1);
istrue_a9_b3_x15 : BITVECTOR(1);
ddt_a9_b4 : BITVECTOR(5);
istrue_a9_b4_x0 : BITVECTOR(1);
istrue_a9_b4_x1 : BITVECTOR(1);
istrue_a9_b4_x2 : BITVECTOR(1);
istrue_a9_b4_x3 : BITVECTOR(1);
istrue_a9_b4_x4 : BITVECTOR(1);
istrue_a9_b4_x5 : BITVECTOR(1);
istrue_a9_b4_x6 : BITVECTOR(1);
istrue_a9_b4_x7 : BITVECTOR(1);
istrue_a9_b4_x8 : BITVECTOR(1);
istrue_a9_b4_x9 : BITVECTOR(1);
istrue_a9_b4_x10 : BITVECTOR(1);
istrue_a9_b4_x11 : BITVECTOR(1);
istrue_a9_b4_x12 : BITVECTOR(1);
istrue_a9_b4_x13 : BITVECTOR(1);
istrue_a9_b4_x14 : BITVECTOR(1);
istrue_a9_b4_x15 : BITVECTOR(1);
ddt_a9_b5 : BITVECTOR(5);
istrue_a9_b5_x0 : BITVECTOR(1);
istrue_a9_b5_x1 : BITVECTOR(1);
istrue_a9_b5_x2 : BITVECTOR(1);
istrue_a9_b5_x3 : BITVECTOR(1);
istrue_a9_b5_x4 : BITVECTOR(1);
istrue_a9_b5_x5 : BITVECTOR(1);
istrue_a9_b5_x6 : BITVECTOR(1);
istrue_a9_b5_x7 : BITVECTOR(1);
istrue_a9_b5_x8 : BITVECTOR(1);
istrue_a9_b5_x9 : BITVECTOR(1);
istrue_a9_b5_x10 : BITVECTOR(1);
istrue_a9_b5_x11 : BITVECTOR(1);
istrue_a9_b5_x12 : BITVECTOR(1);
istrue_a9_b5_x13 : BITVECTOR(1);
istrue_a9_b5_x14 : BITVECTOR(1);
istrue_a9_b5_x15 : BITVECTOR(1);
ddt_a9_b6 : BITVECTOR(5);
istrue_a9_b6_x0 : BITVECTOR(1);
istrue_a9_b6_x1 : BITVECTOR(1);
istrue_a9_b6_x2 : BITVECTOR(1);
istrue_a9_b6_x3 : BITVECTOR(1);
istrue_a9_b6_x4 : BITVECTOR(1);
istrue_a9_b6_x5 : BITVECTOR(1);
istrue_a9_b6_x6 : BITVECTOR(1);
istrue_a9_b6_x7 : BITVECTOR(1);
istrue_a9_b6_x8 : BITVECTOR(1);
istrue_a9_b6_x9 : BITVECTOR(1);
istrue_a9_b6_x10 : BITVECTOR(1);
istrue_a9_b6_x11 : BITVECTOR(1);
istrue_a9_b6_x12 : BITVECTOR(1);
istrue_a9_b6_x13 : BITVECTOR(1);
istrue_a9_b6_x14 : BITVECTOR(1);
istrue_a9_b6_x15 : BITVECTOR(1);
ddt_a9_b7 : BITVECTOR(5);
istrue_a9_b7_x0 : BITVECTOR(1);
istrue_a9_b7_x1 : BITVECTOR(1);
istrue_a9_b7_x2 : BITVECTOR(1);
istrue_a9_b7_x3 : BITVECTOR(1);
istrue_a9_b7_x4 : BITVECTOR(1);
istrue_a9_b7_x5 : BITVECTOR(1);
istrue_a9_b7_x6 : BITVECTOR(1);
istrue_a9_b7_x7 : BITVECTOR(1);
istrue_a9_b7_x8 : BITVECTOR(1);
istrue_a9_b7_x9 : BITVECTOR(1);
istrue_a9_b7_x10 : BITVECTOR(1);
istrue_a9_b7_x11 : BITVECTOR(1);
istrue_a9_b7_x12 : BITVECTOR(1);
istrue_a9_b7_x13 : BITVECTOR(1);
istrue_a9_b7_x14 : BITVECTOR(1);
istrue_a9_b7_x15 : BITVECTOR(1);
ddt_a9_b8 : BITVECTOR(5);
istrue_a9_b8_x0 : BITVECTOR(1);
istrue_a9_b8_x1 : BITVECTOR(1);
istrue_a9_b8_x2 : BITVECTOR(1);
istrue_a9_b8_x3 : BITVECTOR(1);
istrue_a9_b8_x4 : BITVECTOR(1);
istrue_a9_b8_x5 : BITVECTOR(1);
istrue_a9_b8_x6 : BITVECTOR(1);
istrue_a9_b8_x7 : BITVECTOR(1);
istrue_a9_b8_x8 : BITVECTOR(1);
istrue_a9_b8_x9 : BITVECTOR(1);
istrue_a9_b8_x10 : BITVECTOR(1);
istrue_a9_b8_x11 : BITVECTOR(1);
istrue_a9_b8_x12 : BITVECTOR(1);
istrue_a9_b8_x13 : BITVECTOR(1);
istrue_a9_b8_x14 : BITVECTOR(1);
istrue_a9_b8_x15 : BITVECTOR(1);
ddt_a9_b9 : BITVECTOR(5);
istrue_a9_b9_x0 : BITVECTOR(1);
istrue_a9_b9_x1 : BITVECTOR(1);
istrue_a9_b9_x2 : BITVECTOR(1);
istrue_a9_b9_x3 : BITVECTOR(1);
istrue_a9_b9_x4 : BITVECTOR(1);
istrue_a9_b9_x5 : BITVECTOR(1);
istrue_a9_b9_x6 : BITVECTOR(1);
istrue_a9_b9_x7 : BITVECTOR(1);
istrue_a9_b9_x8 : BITVECTOR(1);
istrue_a9_b9_x9 : BITVECTOR(1);
istrue_a9_b9_x10 : BITVECTOR(1);
istrue_a9_b9_x11 : BITVECTOR(1);
istrue_a9_b9_x12 : BITVECTOR(1);
istrue_a9_b9_x13 : BITVECTOR(1);
istrue_a9_b9_x14 : BITVECTOR(1);
istrue_a9_b9_x15 : BITVECTOR(1);
ddt_a9_b10 : BITVECTOR(5);
istrue_a9_b10_x0 : BITVECTOR(1);
istrue_a9_b10_x1 : BITVECTOR(1);
istrue_a9_b10_x2 : BITVECTOR(1);
istrue_a9_b10_x3 : BITVECTOR(1);
istrue_a9_b10_x4 : BITVECTOR(1);
istrue_a9_b10_x5 : BITVECTOR(1);
istrue_a9_b10_x6 : BITVECTOR(1);
istrue_a9_b10_x7 : BITVECTOR(1);
istrue_a9_b10_x8 : BITVECTOR(1);
istrue_a9_b10_x9 : BITVECTOR(1);
istrue_a9_b10_x10 : BITVECTOR(1);
istrue_a9_b10_x11 : BITVECTOR(1);
istrue_a9_b10_x12 : BITVECTOR(1);
istrue_a9_b10_x13 : BITVECTOR(1);
istrue_a9_b10_x14 : BITVECTOR(1);
istrue_a9_b10_x15 : BITVECTOR(1);
ddt_a9_b11 : BITVECTOR(5);
istrue_a9_b11_x0 : BITVECTOR(1);
istrue_a9_b11_x1 : BITVECTOR(1);
istrue_a9_b11_x2 : BITVECTOR(1);
istrue_a9_b11_x3 : BITVECTOR(1);
istrue_a9_b11_x4 : BITVECTOR(1);
istrue_a9_b11_x5 : BITVECTOR(1);
istrue_a9_b11_x6 : BITVECTOR(1);
istrue_a9_b11_x7 : BITVECTOR(1);
istrue_a9_b11_x8 : BITVECTOR(1);
istrue_a9_b11_x9 : BITVECTOR(1);
istrue_a9_b11_x10 : BITVECTOR(1);
istrue_a9_b11_x11 : BITVECTOR(1);
istrue_a9_b11_x12 : BITVECTOR(1);
istrue_a9_b11_x13 : BITVECTOR(1);
istrue_a9_b11_x14 : BITVECTOR(1);
istrue_a9_b11_x15 : BITVECTOR(1);
ddt_a9_b12 : BITVECTOR(5);
istrue_a9_b12_x0 : BITVECTOR(1);
istrue_a9_b12_x1 : BITVECTOR(1);
istrue_a9_b12_x2 : BITVECTOR(1);
istrue_a9_b12_x3 : BITVECTOR(1);
istrue_a9_b12_x4 : BITVECTOR(1);
istrue_a9_b12_x5 : BITVECTOR(1);
istrue_a9_b12_x6 : BITVECTOR(1);
istrue_a9_b12_x7 : BITVECTOR(1);
istrue_a9_b12_x8 : BITVECTOR(1);
istrue_a9_b12_x9 : BITVECTOR(1);
istrue_a9_b12_x10 : BITVECTOR(1);
istrue_a9_b12_x11 : BITVECTOR(1);
istrue_a9_b12_x12 : BITVECTOR(1);
istrue_a9_b12_x13 : BITVECTOR(1);
istrue_a9_b12_x14 : BITVECTOR(1);
istrue_a9_b12_x15 : BITVECTOR(1);
ddt_a9_b13 : BITVECTOR(5);
istrue_a9_b13_x0 : BITVECTOR(1);
istrue_a9_b13_x1 : BITVECTOR(1);
istrue_a9_b13_x2 : BITVECTOR(1);
istrue_a9_b13_x3 : BITVECTOR(1);
istrue_a9_b13_x4 : BITVECTOR(1);
istrue_a9_b13_x5 : BITVECTOR(1);
istrue_a9_b13_x6 : BITVECTOR(1);
istrue_a9_b13_x7 : BITVECTOR(1);
istrue_a9_b13_x8 : BITVECTOR(1);
istrue_a9_b13_x9 : BITVECTOR(1);
istrue_a9_b13_x10 : BITVECTOR(1);
istrue_a9_b13_x11 : BITVECTOR(1);
istrue_a9_b13_x12 : BITVECTOR(1);
istrue_a9_b13_x13 : BITVECTOR(1);
istrue_a9_b13_x14 : BITVECTOR(1);
istrue_a9_b13_x15 : BITVECTOR(1);
ddt_a9_b14 : BITVECTOR(5);
istrue_a9_b14_x0 : BITVECTOR(1);
istrue_a9_b14_x1 : BITVECTOR(1);
istrue_a9_b14_x2 : BITVECTOR(1);
istrue_a9_b14_x3 : BITVECTOR(1);
istrue_a9_b14_x4 : BITVECTOR(1);
istrue_a9_b14_x5 : BITVECTOR(1);
istrue_a9_b14_x6 : BITVECTOR(1);
istrue_a9_b14_x7 : BITVECTOR(1);
istrue_a9_b14_x8 : BITVECTOR(1);
istrue_a9_b14_x9 : BITVECTOR(1);
istrue_a9_b14_x10 : BITVECTOR(1);
istrue_a9_b14_x11 : BITVECTOR(1);
istrue_a9_b14_x12 : BITVECTOR(1);
istrue_a9_b14_x13 : BITVECTOR(1);
istrue_a9_b14_x14 : BITVECTOR(1);
istrue_a9_b14_x15 : BITVECTOR(1);
ddt_a9_b15 : BITVECTOR(5);
istrue_a9_b15_x0 : BITVECTOR(1);
istrue_a9_b15_x1 : BITVECTOR(1);
istrue_a9_b15_x2 : BITVECTOR(1);
istrue_a9_b15_x3 : BITVECTOR(1);
istrue_a9_b15_x4 : BITVECTOR(1);
istrue_a9_b15_x5 : BITVECTOR(1);
istrue_a9_b15_x6 : BITVECTOR(1);
istrue_a9_b15_x7 : BITVECTOR(1);
istrue_a9_b15_x8 : BITVECTOR(1);
istrue_a9_b15_x9 : BITVECTOR(1);
istrue_a9_b15_x10 : BITVECTOR(1);
istrue_a9_b15_x11 : BITVECTOR(1);
istrue_a9_b15_x12 : BITVECTOR(1);
istrue_a9_b15_x13 : BITVECTOR(1);
istrue_a9_b15_x14 : BITVECTOR(1);
istrue_a9_b15_x15 : BITVECTOR(1);
ddt_a10_b0 : BITVECTOR(5);
istrue_a10_b0_x0 : BITVECTOR(1);
istrue_a10_b0_x1 : BITVECTOR(1);
istrue_a10_b0_x2 : BITVECTOR(1);
istrue_a10_b0_x3 : BITVECTOR(1);
istrue_a10_b0_x4 : BITVECTOR(1);
istrue_a10_b0_x5 : BITVECTOR(1);
istrue_a10_b0_x6 : BITVECTOR(1);
istrue_a10_b0_x7 : BITVECTOR(1);
istrue_a10_b0_x8 : BITVECTOR(1);
istrue_a10_b0_x9 : BITVECTOR(1);
istrue_a10_b0_x10 : BITVECTOR(1);
istrue_a10_b0_x11 : BITVECTOR(1);
istrue_a10_b0_x12 : BITVECTOR(1);
istrue_a10_b0_x13 : BITVECTOR(1);
istrue_a10_b0_x14 : BITVECTOR(1);
istrue_a10_b0_x15 : BITVECTOR(1);
ddt_a10_b1 : BITVECTOR(5);
istrue_a10_b1_x0 : BITVECTOR(1);
istrue_a10_b1_x1 : BITVECTOR(1);
istrue_a10_b1_x2 : BITVECTOR(1);
istrue_a10_b1_x3 : BITVECTOR(1);
istrue_a10_b1_x4 : BITVECTOR(1);
istrue_a10_b1_x5 : BITVECTOR(1);
istrue_a10_b1_x6 : BITVECTOR(1);
istrue_a10_b1_x7 : BITVECTOR(1);
istrue_a10_b1_x8 : BITVECTOR(1);
istrue_a10_b1_x9 : BITVECTOR(1);
istrue_a10_b1_x10 : BITVECTOR(1);
istrue_a10_b1_x11 : BITVECTOR(1);
istrue_a10_b1_x12 : BITVECTOR(1);
istrue_a10_b1_x13 : BITVECTOR(1);
istrue_a10_b1_x14 : BITVECTOR(1);
istrue_a10_b1_x15 : BITVECTOR(1);
ddt_a10_b2 : BITVECTOR(5);
istrue_a10_b2_x0 : BITVECTOR(1);
istrue_a10_b2_x1 : BITVECTOR(1);
istrue_a10_b2_x2 : BITVECTOR(1);
istrue_a10_b2_x3 : BITVECTOR(1);
istrue_a10_b2_x4 : BITVECTOR(1);
istrue_a10_b2_x5 : BITVECTOR(1);
istrue_a10_b2_x6 : BITVECTOR(1);
istrue_a10_b2_x7 : BITVECTOR(1);
istrue_a10_b2_x8 : BITVECTOR(1);
istrue_a10_b2_x9 : BITVECTOR(1);
istrue_a10_b2_x10 : BITVECTOR(1);
istrue_a10_b2_x11 : BITVECTOR(1);
istrue_a10_b2_x12 : BITVECTOR(1);
istrue_a10_b2_x13 : BITVECTOR(1);
istrue_a10_b2_x14 : BITVECTOR(1);
istrue_a10_b2_x15 : BITVECTOR(1);
ddt_a10_b3 : BITVECTOR(5);
istrue_a10_b3_x0 : BITVECTOR(1);
istrue_a10_b3_x1 : BITVECTOR(1);
istrue_a10_b3_x2 : BITVECTOR(1);
istrue_a10_b3_x3 : BITVECTOR(1);
istrue_a10_b3_x4 : BITVECTOR(1);
istrue_a10_b3_x5 : BITVECTOR(1);
istrue_a10_b3_x6 : BITVECTOR(1);
istrue_a10_b3_x7 : BITVECTOR(1);
istrue_a10_b3_x8 : BITVECTOR(1);
istrue_a10_b3_x9 : BITVECTOR(1);
istrue_a10_b3_x10 : BITVECTOR(1);
istrue_a10_b3_x11 : BITVECTOR(1);
istrue_a10_b3_x12 : BITVECTOR(1);
istrue_a10_b3_x13 : BITVECTOR(1);
istrue_a10_b3_x14 : BITVECTOR(1);
istrue_a10_b3_x15 : BITVECTOR(1);
ddt_a10_b4 : BITVECTOR(5);
istrue_a10_b4_x0 : BITVECTOR(1);
istrue_a10_b4_x1 : BITVECTOR(1);
istrue_a10_b4_x2 : BITVECTOR(1);
istrue_a10_b4_x3 : BITVECTOR(1);
istrue_a10_b4_x4 : BITVECTOR(1);
istrue_a10_b4_x5 : BITVECTOR(1);
istrue_a10_b4_x6 : BITVECTOR(1);
istrue_a10_b4_x7 : BITVECTOR(1);
istrue_a10_b4_x8 : BITVECTOR(1);
istrue_a10_b4_x9 : BITVECTOR(1);
istrue_a10_b4_x10 : BITVECTOR(1);
istrue_a10_b4_x11 : BITVECTOR(1);
istrue_a10_b4_x12 : BITVECTOR(1);
istrue_a10_b4_x13 : BITVECTOR(1);
istrue_a10_b4_x14 : BITVECTOR(1);
istrue_a10_b4_x15 : BITVECTOR(1);
ddt_a10_b5 : BITVECTOR(5);
istrue_a10_b5_x0 : BITVECTOR(1);
istrue_a10_b5_x1 : BITVECTOR(1);
istrue_a10_b5_x2 : BITVECTOR(1);
istrue_a10_b5_x3 : BITVECTOR(1);
istrue_a10_b5_x4 : BITVECTOR(1);
istrue_a10_b5_x5 : BITVECTOR(1);
istrue_a10_b5_x6 : BITVECTOR(1);
istrue_a10_b5_x7 : BITVECTOR(1);
istrue_a10_b5_x8 : BITVECTOR(1);
istrue_a10_b5_x9 : BITVECTOR(1);
istrue_a10_b5_x10 : BITVECTOR(1);
istrue_a10_b5_x11 : BITVECTOR(1);
istrue_a10_b5_x12 : BITVECTOR(1);
istrue_a10_b5_x13 : BITVECTOR(1);
istrue_a10_b5_x14 : BITVECTOR(1);
istrue_a10_b5_x15 : BITVECTOR(1);
ddt_a10_b6 : BITVECTOR(5);
istrue_a10_b6_x0 : BITVECTOR(1);
istrue_a10_b6_x1 : BITVECTOR(1);
istrue_a10_b6_x2 : BITVECTOR(1);
istrue_a10_b6_x3 : BITVECTOR(1);
istrue_a10_b6_x4 : BITVECTOR(1);
istrue_a10_b6_x5 : BITVECTOR(1);
istrue_a10_b6_x6 : BITVECTOR(1);
istrue_a10_b6_x7 : BITVECTOR(1);
istrue_a10_b6_x8 : BITVECTOR(1);
istrue_a10_b6_x9 : BITVECTOR(1);
istrue_a10_b6_x10 : BITVECTOR(1);
istrue_a10_b6_x11 : BITVECTOR(1);
istrue_a10_b6_x12 : BITVECTOR(1);
istrue_a10_b6_x13 : BITVECTOR(1);
istrue_a10_b6_x14 : BITVECTOR(1);
istrue_a10_b6_x15 : BITVECTOR(1);
ddt_a10_b7 : BITVECTOR(5);
istrue_a10_b7_x0 : BITVECTOR(1);
istrue_a10_b7_x1 : BITVECTOR(1);
istrue_a10_b7_x2 : BITVECTOR(1);
istrue_a10_b7_x3 : BITVECTOR(1);
istrue_a10_b7_x4 : BITVECTOR(1);
istrue_a10_b7_x5 : BITVECTOR(1);
istrue_a10_b7_x6 : BITVECTOR(1);
istrue_a10_b7_x7 : BITVECTOR(1);
istrue_a10_b7_x8 : BITVECTOR(1);
istrue_a10_b7_x9 : BITVECTOR(1);
istrue_a10_b7_x10 : BITVECTOR(1);
istrue_a10_b7_x11 : BITVECTOR(1);
istrue_a10_b7_x12 : BITVECTOR(1);
istrue_a10_b7_x13 : BITVECTOR(1);
istrue_a10_b7_x14 : BITVECTOR(1);
istrue_a10_b7_x15 : BITVECTOR(1);
ddt_a10_b8 : BITVECTOR(5);
istrue_a10_b8_x0 : BITVECTOR(1);
istrue_a10_b8_x1 : BITVECTOR(1);
istrue_a10_b8_x2 : BITVECTOR(1);
istrue_a10_b8_x3 : BITVECTOR(1);
istrue_a10_b8_x4 : BITVECTOR(1);
istrue_a10_b8_x5 : BITVECTOR(1);
istrue_a10_b8_x6 : BITVECTOR(1);
istrue_a10_b8_x7 : BITVECTOR(1);
istrue_a10_b8_x8 : BITVECTOR(1);
istrue_a10_b8_x9 : BITVECTOR(1);
istrue_a10_b8_x10 : BITVECTOR(1);
istrue_a10_b8_x11 : BITVECTOR(1);
istrue_a10_b8_x12 : BITVECTOR(1);
istrue_a10_b8_x13 : BITVECTOR(1);
istrue_a10_b8_x14 : BITVECTOR(1);
istrue_a10_b8_x15 : BITVECTOR(1);
ddt_a10_b9 : BITVECTOR(5);
istrue_a10_b9_x0 : BITVECTOR(1);
istrue_a10_b9_x1 : BITVECTOR(1);
istrue_a10_b9_x2 : BITVECTOR(1);
istrue_a10_b9_x3 : BITVECTOR(1);
istrue_a10_b9_x4 : BITVECTOR(1);
istrue_a10_b9_x5 : BITVECTOR(1);
istrue_a10_b9_x6 : BITVECTOR(1);
istrue_a10_b9_x7 : BITVECTOR(1);
istrue_a10_b9_x8 : BITVECTOR(1);
istrue_a10_b9_x9 : BITVECTOR(1);
istrue_a10_b9_x10 : BITVECTOR(1);
istrue_a10_b9_x11 : BITVECTOR(1);
istrue_a10_b9_x12 : BITVECTOR(1);
istrue_a10_b9_x13 : BITVECTOR(1);
istrue_a10_b9_x14 : BITVECTOR(1);
istrue_a10_b9_x15 : BITVECTOR(1);
ddt_a10_b10 : BITVECTOR(5);
istrue_a10_b10_x0 : BITVECTOR(1);
istrue_a10_b10_x1 : BITVECTOR(1);
istrue_a10_b10_x2 : BITVECTOR(1);
istrue_a10_b10_x3 : BITVECTOR(1);
istrue_a10_b10_x4 : BITVECTOR(1);
istrue_a10_b10_x5 : BITVECTOR(1);
istrue_a10_b10_x6 : BITVECTOR(1);
istrue_a10_b10_x7 : BITVECTOR(1);
istrue_a10_b10_x8 : BITVECTOR(1);
istrue_a10_b10_x9 : BITVECTOR(1);
istrue_a10_b10_x10 : BITVECTOR(1);
istrue_a10_b10_x11 : BITVECTOR(1);
istrue_a10_b10_x12 : BITVECTOR(1);
istrue_a10_b10_x13 : BITVECTOR(1);
istrue_a10_b10_x14 : BITVECTOR(1);
istrue_a10_b10_x15 : BITVECTOR(1);
ddt_a10_b11 : BITVECTOR(5);
istrue_a10_b11_x0 : BITVECTOR(1);
istrue_a10_b11_x1 : BITVECTOR(1);
istrue_a10_b11_x2 : BITVECTOR(1);
istrue_a10_b11_x3 : BITVECTOR(1);
istrue_a10_b11_x4 : BITVECTOR(1);
istrue_a10_b11_x5 : BITVECTOR(1);
istrue_a10_b11_x6 : BITVECTOR(1);
istrue_a10_b11_x7 : BITVECTOR(1);
istrue_a10_b11_x8 : BITVECTOR(1);
istrue_a10_b11_x9 : BITVECTOR(1);
istrue_a10_b11_x10 : BITVECTOR(1);
istrue_a10_b11_x11 : BITVECTOR(1);
istrue_a10_b11_x12 : BITVECTOR(1);
istrue_a10_b11_x13 : BITVECTOR(1);
istrue_a10_b11_x14 : BITVECTOR(1);
istrue_a10_b11_x15 : BITVECTOR(1);
ddt_a10_b12 : BITVECTOR(5);
istrue_a10_b12_x0 : BITVECTOR(1);
istrue_a10_b12_x1 : BITVECTOR(1);
istrue_a10_b12_x2 : BITVECTOR(1);
istrue_a10_b12_x3 : BITVECTOR(1);
istrue_a10_b12_x4 : BITVECTOR(1);
istrue_a10_b12_x5 : BITVECTOR(1);
istrue_a10_b12_x6 : BITVECTOR(1);
istrue_a10_b12_x7 : BITVECTOR(1);
istrue_a10_b12_x8 : BITVECTOR(1);
istrue_a10_b12_x9 : BITVECTOR(1);
istrue_a10_b12_x10 : BITVECTOR(1);
istrue_a10_b12_x11 : BITVECTOR(1);
istrue_a10_b12_x12 : BITVECTOR(1);
istrue_a10_b12_x13 : BITVECTOR(1);
istrue_a10_b12_x14 : BITVECTOR(1);
istrue_a10_b12_x15 : BITVECTOR(1);
ddt_a10_b13 : BITVECTOR(5);
istrue_a10_b13_x0 : BITVECTOR(1);
istrue_a10_b13_x1 : BITVECTOR(1);
istrue_a10_b13_x2 : BITVECTOR(1);
istrue_a10_b13_x3 : BITVECTOR(1);
istrue_a10_b13_x4 : BITVECTOR(1);
istrue_a10_b13_x5 : BITVECTOR(1);
istrue_a10_b13_x6 : BITVECTOR(1);
istrue_a10_b13_x7 : BITVECTOR(1);
istrue_a10_b13_x8 : BITVECTOR(1);
istrue_a10_b13_x9 : BITVECTOR(1);
istrue_a10_b13_x10 : BITVECTOR(1);
istrue_a10_b13_x11 : BITVECTOR(1);
istrue_a10_b13_x12 : BITVECTOR(1);
istrue_a10_b13_x13 : BITVECTOR(1);
istrue_a10_b13_x14 : BITVECTOR(1);
istrue_a10_b13_x15 : BITVECTOR(1);
ddt_a10_b14 : BITVECTOR(5);
istrue_a10_b14_x0 : BITVECTOR(1);
istrue_a10_b14_x1 : BITVECTOR(1);
istrue_a10_b14_x2 : BITVECTOR(1);
istrue_a10_b14_x3 : BITVECTOR(1);
istrue_a10_b14_x4 : BITVECTOR(1);
istrue_a10_b14_x5 : BITVECTOR(1);
istrue_a10_b14_x6 : BITVECTOR(1);
istrue_a10_b14_x7 : BITVECTOR(1);
istrue_a10_b14_x8 : BITVECTOR(1);
istrue_a10_b14_x9 : BITVECTOR(1);
istrue_a10_b14_x10 : BITVECTOR(1);
istrue_a10_b14_x11 : BITVECTOR(1);
istrue_a10_b14_x12 : BITVECTOR(1);
istrue_a10_b14_x13 : BITVECTOR(1);
istrue_a10_b14_x14 : BITVECTOR(1);
istrue_a10_b14_x15 : BITVECTOR(1);
ddt_a10_b15 : BITVECTOR(5);
istrue_a10_b15_x0 : BITVECTOR(1);
istrue_a10_b15_x1 : BITVECTOR(1);
istrue_a10_b15_x2 : BITVECTOR(1);
istrue_a10_b15_x3 : BITVECTOR(1);
istrue_a10_b15_x4 : BITVECTOR(1);
istrue_a10_b15_x5 : BITVECTOR(1);
istrue_a10_b15_x6 : BITVECTOR(1);
istrue_a10_b15_x7 : BITVECTOR(1);
istrue_a10_b15_x8 : BITVECTOR(1);
istrue_a10_b15_x9 : BITVECTOR(1);
istrue_a10_b15_x10 : BITVECTOR(1);
istrue_a10_b15_x11 : BITVECTOR(1);
istrue_a10_b15_x12 : BITVECTOR(1);
istrue_a10_b15_x13 : BITVECTOR(1);
istrue_a10_b15_x14 : BITVECTOR(1);
istrue_a10_b15_x15 : BITVECTOR(1);
ddt_a11_b0 : BITVECTOR(5);
istrue_a11_b0_x0 : BITVECTOR(1);
istrue_a11_b0_x1 : BITVECTOR(1);
istrue_a11_b0_x2 : BITVECTOR(1);
istrue_a11_b0_x3 : BITVECTOR(1);
istrue_a11_b0_x4 : BITVECTOR(1);
istrue_a11_b0_x5 : BITVECTOR(1);
istrue_a11_b0_x6 : BITVECTOR(1);
istrue_a11_b0_x7 : BITVECTOR(1);
istrue_a11_b0_x8 : BITVECTOR(1);
istrue_a11_b0_x9 : BITVECTOR(1);
istrue_a11_b0_x10 : BITVECTOR(1);
istrue_a11_b0_x11 : BITVECTOR(1);
istrue_a11_b0_x12 : BITVECTOR(1);
istrue_a11_b0_x13 : BITVECTOR(1);
istrue_a11_b0_x14 : BITVECTOR(1);
istrue_a11_b0_x15 : BITVECTOR(1);
ddt_a11_b1 : BITVECTOR(5);
istrue_a11_b1_x0 : BITVECTOR(1);
istrue_a11_b1_x1 : BITVECTOR(1);
istrue_a11_b1_x2 : BITVECTOR(1);
istrue_a11_b1_x3 : BITVECTOR(1);
istrue_a11_b1_x4 : BITVECTOR(1);
istrue_a11_b1_x5 : BITVECTOR(1);
istrue_a11_b1_x6 : BITVECTOR(1);
istrue_a11_b1_x7 : BITVECTOR(1);
istrue_a11_b1_x8 : BITVECTOR(1);
istrue_a11_b1_x9 : BITVECTOR(1);
istrue_a11_b1_x10 : BITVECTOR(1);
istrue_a11_b1_x11 : BITVECTOR(1);
istrue_a11_b1_x12 : BITVECTOR(1);
istrue_a11_b1_x13 : BITVECTOR(1);
istrue_a11_b1_x14 : BITVECTOR(1);
istrue_a11_b1_x15 : BITVECTOR(1);
ddt_a11_b2 : BITVECTOR(5);
istrue_a11_b2_x0 : BITVECTOR(1);
istrue_a11_b2_x1 : BITVECTOR(1);
istrue_a11_b2_x2 : BITVECTOR(1);
istrue_a11_b2_x3 : BITVECTOR(1);
istrue_a11_b2_x4 : BITVECTOR(1);
istrue_a11_b2_x5 : BITVECTOR(1);
istrue_a11_b2_x6 : BITVECTOR(1);
istrue_a11_b2_x7 : BITVECTOR(1);
istrue_a11_b2_x8 : BITVECTOR(1);
istrue_a11_b2_x9 : BITVECTOR(1);
istrue_a11_b2_x10 : BITVECTOR(1);
istrue_a11_b2_x11 : BITVECTOR(1);
istrue_a11_b2_x12 : BITVECTOR(1);
istrue_a11_b2_x13 : BITVECTOR(1);
istrue_a11_b2_x14 : BITVECTOR(1);
istrue_a11_b2_x15 : BITVECTOR(1);
ddt_a11_b3 : BITVECTOR(5);
istrue_a11_b3_x0 : BITVECTOR(1);
istrue_a11_b3_x1 : BITVECTOR(1);
istrue_a11_b3_x2 : BITVECTOR(1);
istrue_a11_b3_x3 : BITVECTOR(1);
istrue_a11_b3_x4 : BITVECTOR(1);
istrue_a11_b3_x5 : BITVECTOR(1);
istrue_a11_b3_x6 : BITVECTOR(1);
istrue_a11_b3_x7 : BITVECTOR(1);
istrue_a11_b3_x8 : BITVECTOR(1);
istrue_a11_b3_x9 : BITVECTOR(1);
istrue_a11_b3_x10 : BITVECTOR(1);
istrue_a11_b3_x11 : BITVECTOR(1);
istrue_a11_b3_x12 : BITVECTOR(1);
istrue_a11_b3_x13 : BITVECTOR(1);
istrue_a11_b3_x14 : BITVECTOR(1);
istrue_a11_b3_x15 : BITVECTOR(1);
ddt_a11_b4 : BITVECTOR(5);
istrue_a11_b4_x0 : BITVECTOR(1);
istrue_a11_b4_x1 : BITVECTOR(1);
istrue_a11_b4_x2 : BITVECTOR(1);
istrue_a11_b4_x3 : BITVECTOR(1);
istrue_a11_b4_x4 : BITVECTOR(1);
istrue_a11_b4_x5 : BITVECTOR(1);
istrue_a11_b4_x6 : BITVECTOR(1);
istrue_a11_b4_x7 : BITVECTOR(1);
istrue_a11_b4_x8 : BITVECTOR(1);
istrue_a11_b4_x9 : BITVECTOR(1);
istrue_a11_b4_x10 : BITVECTOR(1);
istrue_a11_b4_x11 : BITVECTOR(1);
istrue_a11_b4_x12 : BITVECTOR(1);
istrue_a11_b4_x13 : BITVECTOR(1);
istrue_a11_b4_x14 : BITVECTOR(1);
istrue_a11_b4_x15 : BITVECTOR(1);
ddt_a11_b5 : BITVECTOR(5);
istrue_a11_b5_x0 : BITVECTOR(1);
istrue_a11_b5_x1 : BITVECTOR(1);
istrue_a11_b5_x2 : BITVECTOR(1);
istrue_a11_b5_x3 : BITVECTOR(1);
istrue_a11_b5_x4 : BITVECTOR(1);
istrue_a11_b5_x5 : BITVECTOR(1);
istrue_a11_b5_x6 : BITVECTOR(1);
istrue_a11_b5_x7 : BITVECTOR(1);
istrue_a11_b5_x8 : BITVECTOR(1);
istrue_a11_b5_x9 : BITVECTOR(1);
istrue_a11_b5_x10 : BITVECTOR(1);
istrue_a11_b5_x11 : BITVECTOR(1);
istrue_a11_b5_x12 : BITVECTOR(1);
istrue_a11_b5_x13 : BITVECTOR(1);
istrue_a11_b5_x14 : BITVECTOR(1);
istrue_a11_b5_x15 : BITVECTOR(1);
ddt_a11_b6 : BITVECTOR(5);
istrue_a11_b6_x0 : BITVECTOR(1);
istrue_a11_b6_x1 : BITVECTOR(1);
istrue_a11_b6_x2 : BITVECTOR(1);
istrue_a11_b6_x3 : BITVECTOR(1);
istrue_a11_b6_x4 : BITVECTOR(1);
istrue_a11_b6_x5 : BITVECTOR(1);
istrue_a11_b6_x6 : BITVECTOR(1);
istrue_a11_b6_x7 : BITVECTOR(1);
istrue_a11_b6_x8 : BITVECTOR(1);
istrue_a11_b6_x9 : BITVECTOR(1);
istrue_a11_b6_x10 : BITVECTOR(1);
istrue_a11_b6_x11 : BITVECTOR(1);
istrue_a11_b6_x12 : BITVECTOR(1);
istrue_a11_b6_x13 : BITVECTOR(1);
istrue_a11_b6_x14 : BITVECTOR(1);
istrue_a11_b6_x15 : BITVECTOR(1);
ddt_a11_b7 : BITVECTOR(5);
istrue_a11_b7_x0 : BITVECTOR(1);
istrue_a11_b7_x1 : BITVECTOR(1);
istrue_a11_b7_x2 : BITVECTOR(1);
istrue_a11_b7_x3 : BITVECTOR(1);
istrue_a11_b7_x4 : BITVECTOR(1);
istrue_a11_b7_x5 : BITVECTOR(1);
istrue_a11_b7_x6 : BITVECTOR(1);
istrue_a11_b7_x7 : BITVECTOR(1);
istrue_a11_b7_x8 : BITVECTOR(1);
istrue_a11_b7_x9 : BITVECTOR(1);
istrue_a11_b7_x10 : BITVECTOR(1);
istrue_a11_b7_x11 : BITVECTOR(1);
istrue_a11_b7_x12 : BITVECTOR(1);
istrue_a11_b7_x13 : BITVECTOR(1);
istrue_a11_b7_x14 : BITVECTOR(1);
istrue_a11_b7_x15 : BITVECTOR(1);
ddt_a11_b8 : BITVECTOR(5);
istrue_a11_b8_x0 : BITVECTOR(1);
istrue_a11_b8_x1 : BITVECTOR(1);
istrue_a11_b8_x2 : BITVECTOR(1);
istrue_a11_b8_x3 : BITVECTOR(1);
istrue_a11_b8_x4 : BITVECTOR(1);
istrue_a11_b8_x5 : BITVECTOR(1);
istrue_a11_b8_x6 : BITVECTOR(1);
istrue_a11_b8_x7 : BITVECTOR(1);
istrue_a11_b8_x8 : BITVECTOR(1);
istrue_a11_b8_x9 : BITVECTOR(1);
istrue_a11_b8_x10 : BITVECTOR(1);
istrue_a11_b8_x11 : BITVECTOR(1);
istrue_a11_b8_x12 : BITVECTOR(1);
istrue_a11_b8_x13 : BITVECTOR(1);
istrue_a11_b8_x14 : BITVECTOR(1);
istrue_a11_b8_x15 : BITVECTOR(1);
ddt_a11_b9 : BITVECTOR(5);
istrue_a11_b9_x0 : BITVECTOR(1);
istrue_a11_b9_x1 : BITVECTOR(1);
istrue_a11_b9_x2 : BITVECTOR(1);
istrue_a11_b9_x3 : BITVECTOR(1);
istrue_a11_b9_x4 : BITVECTOR(1);
istrue_a11_b9_x5 : BITVECTOR(1);
istrue_a11_b9_x6 : BITVECTOR(1);
istrue_a11_b9_x7 : BITVECTOR(1);
istrue_a11_b9_x8 : BITVECTOR(1);
istrue_a11_b9_x9 : BITVECTOR(1);
istrue_a11_b9_x10 : BITVECTOR(1);
istrue_a11_b9_x11 : BITVECTOR(1);
istrue_a11_b9_x12 : BITVECTOR(1);
istrue_a11_b9_x13 : BITVECTOR(1);
istrue_a11_b9_x14 : BITVECTOR(1);
istrue_a11_b9_x15 : BITVECTOR(1);
ddt_a11_b10 : BITVECTOR(5);
istrue_a11_b10_x0 : BITVECTOR(1);
istrue_a11_b10_x1 : BITVECTOR(1);
istrue_a11_b10_x2 : BITVECTOR(1);
istrue_a11_b10_x3 : BITVECTOR(1);
istrue_a11_b10_x4 : BITVECTOR(1);
istrue_a11_b10_x5 : BITVECTOR(1);
istrue_a11_b10_x6 : BITVECTOR(1);
istrue_a11_b10_x7 : BITVECTOR(1);
istrue_a11_b10_x8 : BITVECTOR(1);
istrue_a11_b10_x9 : BITVECTOR(1);
istrue_a11_b10_x10 : BITVECTOR(1);
istrue_a11_b10_x11 : BITVECTOR(1);
istrue_a11_b10_x12 : BITVECTOR(1);
istrue_a11_b10_x13 : BITVECTOR(1);
istrue_a11_b10_x14 : BITVECTOR(1);
istrue_a11_b10_x15 : BITVECTOR(1);
ddt_a11_b11 : BITVECTOR(5);
istrue_a11_b11_x0 : BITVECTOR(1);
istrue_a11_b11_x1 : BITVECTOR(1);
istrue_a11_b11_x2 : BITVECTOR(1);
istrue_a11_b11_x3 : BITVECTOR(1);
istrue_a11_b11_x4 : BITVECTOR(1);
istrue_a11_b11_x5 : BITVECTOR(1);
istrue_a11_b11_x6 : BITVECTOR(1);
istrue_a11_b11_x7 : BITVECTOR(1);
istrue_a11_b11_x8 : BITVECTOR(1);
istrue_a11_b11_x9 : BITVECTOR(1);
istrue_a11_b11_x10 : BITVECTOR(1);
istrue_a11_b11_x11 : BITVECTOR(1);
istrue_a11_b11_x12 : BITVECTOR(1);
istrue_a11_b11_x13 : BITVECTOR(1);
istrue_a11_b11_x14 : BITVECTOR(1);
istrue_a11_b11_x15 : BITVECTOR(1);
ddt_a11_b12 : BITVECTOR(5);
istrue_a11_b12_x0 : BITVECTOR(1);
istrue_a11_b12_x1 : BITVECTOR(1);
istrue_a11_b12_x2 : BITVECTOR(1);
istrue_a11_b12_x3 : BITVECTOR(1);
istrue_a11_b12_x4 : BITVECTOR(1);
istrue_a11_b12_x5 : BITVECTOR(1);
istrue_a11_b12_x6 : BITVECTOR(1);
istrue_a11_b12_x7 : BITVECTOR(1);
istrue_a11_b12_x8 : BITVECTOR(1);
istrue_a11_b12_x9 : BITVECTOR(1);
istrue_a11_b12_x10 : BITVECTOR(1);
istrue_a11_b12_x11 : BITVECTOR(1);
istrue_a11_b12_x12 : BITVECTOR(1);
istrue_a11_b12_x13 : BITVECTOR(1);
istrue_a11_b12_x14 : BITVECTOR(1);
istrue_a11_b12_x15 : BITVECTOR(1);
ddt_a11_b13 : BITVECTOR(5);
istrue_a11_b13_x0 : BITVECTOR(1);
istrue_a11_b13_x1 : BITVECTOR(1);
istrue_a11_b13_x2 : BITVECTOR(1);
istrue_a11_b13_x3 : BITVECTOR(1);
istrue_a11_b13_x4 : BITVECTOR(1);
istrue_a11_b13_x5 : BITVECTOR(1);
istrue_a11_b13_x6 : BITVECTOR(1);
istrue_a11_b13_x7 : BITVECTOR(1);
istrue_a11_b13_x8 : BITVECTOR(1);
istrue_a11_b13_x9 : BITVECTOR(1);
istrue_a11_b13_x10 : BITVECTOR(1);
istrue_a11_b13_x11 : BITVECTOR(1);
istrue_a11_b13_x12 : BITVECTOR(1);
istrue_a11_b13_x13 : BITVECTOR(1);
istrue_a11_b13_x14 : BITVECTOR(1);
istrue_a11_b13_x15 : BITVECTOR(1);
ddt_a11_b14 : BITVECTOR(5);
istrue_a11_b14_x0 : BITVECTOR(1);
istrue_a11_b14_x1 : BITVECTOR(1);
istrue_a11_b14_x2 : BITVECTOR(1);
istrue_a11_b14_x3 : BITVECTOR(1);
istrue_a11_b14_x4 : BITVECTOR(1);
istrue_a11_b14_x5 : BITVECTOR(1);
istrue_a11_b14_x6 : BITVECTOR(1);
istrue_a11_b14_x7 : BITVECTOR(1);
istrue_a11_b14_x8 : BITVECTOR(1);
istrue_a11_b14_x9 : BITVECTOR(1);
istrue_a11_b14_x10 : BITVECTOR(1);
istrue_a11_b14_x11 : BITVECTOR(1);
istrue_a11_b14_x12 : BITVECTOR(1);
istrue_a11_b14_x13 : BITVECTOR(1);
istrue_a11_b14_x14 : BITVECTOR(1);
istrue_a11_b14_x15 : BITVECTOR(1);
ddt_a11_b15 : BITVECTOR(5);
istrue_a11_b15_x0 : BITVECTOR(1);
istrue_a11_b15_x1 : BITVECTOR(1);
istrue_a11_b15_x2 : BITVECTOR(1);
istrue_a11_b15_x3 : BITVECTOR(1);
istrue_a11_b15_x4 : BITVECTOR(1);
istrue_a11_b15_x5 : BITVECTOR(1);
istrue_a11_b15_x6 : BITVECTOR(1);
istrue_a11_b15_x7 : BITVECTOR(1);
istrue_a11_b15_x8 : BITVECTOR(1);
istrue_a11_b15_x9 : BITVECTOR(1);
istrue_a11_b15_x10 : BITVECTOR(1);
istrue_a11_b15_x11 : BITVECTOR(1);
istrue_a11_b15_x12 : BITVECTOR(1);
istrue_a11_b15_x13 : BITVECTOR(1);
istrue_a11_b15_x14 : BITVECTOR(1);
istrue_a11_b15_x15 : BITVECTOR(1);
ddt_a12_b0 : BITVECTOR(5);
istrue_a12_b0_x0 : BITVECTOR(1);
istrue_a12_b0_x1 : BITVECTOR(1);
istrue_a12_b0_x2 : BITVECTOR(1);
istrue_a12_b0_x3 : BITVECTOR(1);
istrue_a12_b0_x4 : BITVECTOR(1);
istrue_a12_b0_x5 : BITVECTOR(1);
istrue_a12_b0_x6 : BITVECTOR(1);
istrue_a12_b0_x7 : BITVECTOR(1);
istrue_a12_b0_x8 : BITVECTOR(1);
istrue_a12_b0_x9 : BITVECTOR(1);
istrue_a12_b0_x10 : BITVECTOR(1);
istrue_a12_b0_x11 : BITVECTOR(1);
istrue_a12_b0_x12 : BITVECTOR(1);
istrue_a12_b0_x13 : BITVECTOR(1);
istrue_a12_b0_x14 : BITVECTOR(1);
istrue_a12_b0_x15 : BITVECTOR(1);
ddt_a12_b1 : BITVECTOR(5);
istrue_a12_b1_x0 : BITVECTOR(1);
istrue_a12_b1_x1 : BITVECTOR(1);
istrue_a12_b1_x2 : BITVECTOR(1);
istrue_a12_b1_x3 : BITVECTOR(1);
istrue_a12_b1_x4 : BITVECTOR(1);
istrue_a12_b1_x5 : BITVECTOR(1);
istrue_a12_b1_x6 : BITVECTOR(1);
istrue_a12_b1_x7 : BITVECTOR(1);
istrue_a12_b1_x8 : BITVECTOR(1);
istrue_a12_b1_x9 : BITVECTOR(1);
istrue_a12_b1_x10 : BITVECTOR(1);
istrue_a12_b1_x11 : BITVECTOR(1);
istrue_a12_b1_x12 : BITVECTOR(1);
istrue_a12_b1_x13 : BITVECTOR(1);
istrue_a12_b1_x14 : BITVECTOR(1);
istrue_a12_b1_x15 : BITVECTOR(1);
ddt_a12_b2 : BITVECTOR(5);
istrue_a12_b2_x0 : BITVECTOR(1);
istrue_a12_b2_x1 : BITVECTOR(1);
istrue_a12_b2_x2 : BITVECTOR(1);
istrue_a12_b2_x3 : BITVECTOR(1);
istrue_a12_b2_x4 : BITVECTOR(1);
istrue_a12_b2_x5 : BITVECTOR(1);
istrue_a12_b2_x6 : BITVECTOR(1);
istrue_a12_b2_x7 : BITVECTOR(1);
istrue_a12_b2_x8 : BITVECTOR(1);
istrue_a12_b2_x9 : BITVECTOR(1);
istrue_a12_b2_x10 : BITVECTOR(1);
istrue_a12_b2_x11 : BITVECTOR(1);
istrue_a12_b2_x12 : BITVECTOR(1);
istrue_a12_b2_x13 : BITVECTOR(1);
istrue_a12_b2_x14 : BITVECTOR(1);
istrue_a12_b2_x15 : BITVECTOR(1);
ddt_a12_b3 : BITVECTOR(5);
istrue_a12_b3_x0 : BITVECTOR(1);
istrue_a12_b3_x1 : BITVECTOR(1);
istrue_a12_b3_x2 : BITVECTOR(1);
istrue_a12_b3_x3 : BITVECTOR(1);
istrue_a12_b3_x4 : BITVECTOR(1);
istrue_a12_b3_x5 : BITVECTOR(1);
istrue_a12_b3_x6 : BITVECTOR(1);
istrue_a12_b3_x7 : BITVECTOR(1);
istrue_a12_b3_x8 : BITVECTOR(1);
istrue_a12_b3_x9 : BITVECTOR(1);
istrue_a12_b3_x10 : BITVECTOR(1);
istrue_a12_b3_x11 : BITVECTOR(1);
istrue_a12_b3_x12 : BITVECTOR(1);
istrue_a12_b3_x13 : BITVECTOR(1);
istrue_a12_b3_x14 : BITVECTOR(1);
istrue_a12_b3_x15 : BITVECTOR(1);
ddt_a12_b4 : BITVECTOR(5);
istrue_a12_b4_x0 : BITVECTOR(1);
istrue_a12_b4_x1 : BITVECTOR(1);
istrue_a12_b4_x2 : BITVECTOR(1);
istrue_a12_b4_x3 : BITVECTOR(1);
istrue_a12_b4_x4 : BITVECTOR(1);
istrue_a12_b4_x5 : BITVECTOR(1);
istrue_a12_b4_x6 : BITVECTOR(1);
istrue_a12_b4_x7 : BITVECTOR(1);
istrue_a12_b4_x8 : BITVECTOR(1);
istrue_a12_b4_x9 : BITVECTOR(1);
istrue_a12_b4_x10 : BITVECTOR(1);
istrue_a12_b4_x11 : BITVECTOR(1);
istrue_a12_b4_x12 : BITVECTOR(1);
istrue_a12_b4_x13 : BITVECTOR(1);
istrue_a12_b4_x14 : BITVECTOR(1);
istrue_a12_b4_x15 : BITVECTOR(1);
ddt_a12_b5 : BITVECTOR(5);
istrue_a12_b5_x0 : BITVECTOR(1);
istrue_a12_b5_x1 : BITVECTOR(1);
istrue_a12_b5_x2 : BITVECTOR(1);
istrue_a12_b5_x3 : BITVECTOR(1);
istrue_a12_b5_x4 : BITVECTOR(1);
istrue_a12_b5_x5 : BITVECTOR(1);
istrue_a12_b5_x6 : BITVECTOR(1);
istrue_a12_b5_x7 : BITVECTOR(1);
istrue_a12_b5_x8 : BITVECTOR(1);
istrue_a12_b5_x9 : BITVECTOR(1);
istrue_a12_b5_x10 : BITVECTOR(1);
istrue_a12_b5_x11 : BITVECTOR(1);
istrue_a12_b5_x12 : BITVECTOR(1);
istrue_a12_b5_x13 : BITVECTOR(1);
istrue_a12_b5_x14 : BITVECTOR(1);
istrue_a12_b5_x15 : BITVECTOR(1);
ddt_a12_b6 : BITVECTOR(5);
istrue_a12_b6_x0 : BITVECTOR(1);
istrue_a12_b6_x1 : BITVECTOR(1);
istrue_a12_b6_x2 : BITVECTOR(1);
istrue_a12_b6_x3 : BITVECTOR(1);
istrue_a12_b6_x4 : BITVECTOR(1);
istrue_a12_b6_x5 : BITVECTOR(1);
istrue_a12_b6_x6 : BITVECTOR(1);
istrue_a12_b6_x7 : BITVECTOR(1);
istrue_a12_b6_x8 : BITVECTOR(1);
istrue_a12_b6_x9 : BITVECTOR(1);
istrue_a12_b6_x10 : BITVECTOR(1);
istrue_a12_b6_x11 : BITVECTOR(1);
istrue_a12_b6_x12 : BITVECTOR(1);
istrue_a12_b6_x13 : BITVECTOR(1);
istrue_a12_b6_x14 : BITVECTOR(1);
istrue_a12_b6_x15 : BITVECTOR(1);
ddt_a12_b7 : BITVECTOR(5);
istrue_a12_b7_x0 : BITVECTOR(1);
istrue_a12_b7_x1 : BITVECTOR(1);
istrue_a12_b7_x2 : BITVECTOR(1);
istrue_a12_b7_x3 : BITVECTOR(1);
istrue_a12_b7_x4 : BITVECTOR(1);
istrue_a12_b7_x5 : BITVECTOR(1);
istrue_a12_b7_x6 : BITVECTOR(1);
istrue_a12_b7_x7 : BITVECTOR(1);
istrue_a12_b7_x8 : BITVECTOR(1);
istrue_a12_b7_x9 : BITVECTOR(1);
istrue_a12_b7_x10 : BITVECTOR(1);
istrue_a12_b7_x11 : BITVECTOR(1);
istrue_a12_b7_x12 : BITVECTOR(1);
istrue_a12_b7_x13 : BITVECTOR(1);
istrue_a12_b7_x14 : BITVECTOR(1);
istrue_a12_b7_x15 : BITVECTOR(1);
ddt_a12_b8 : BITVECTOR(5);
istrue_a12_b8_x0 : BITVECTOR(1);
istrue_a12_b8_x1 : BITVECTOR(1);
istrue_a12_b8_x2 : BITVECTOR(1);
istrue_a12_b8_x3 : BITVECTOR(1);
istrue_a12_b8_x4 : BITVECTOR(1);
istrue_a12_b8_x5 : BITVECTOR(1);
istrue_a12_b8_x6 : BITVECTOR(1);
istrue_a12_b8_x7 : BITVECTOR(1);
istrue_a12_b8_x8 : BITVECTOR(1);
istrue_a12_b8_x9 : BITVECTOR(1);
istrue_a12_b8_x10 : BITVECTOR(1);
istrue_a12_b8_x11 : BITVECTOR(1);
istrue_a12_b8_x12 : BITVECTOR(1);
istrue_a12_b8_x13 : BITVECTOR(1);
istrue_a12_b8_x14 : BITVECTOR(1);
istrue_a12_b8_x15 : BITVECTOR(1);
ddt_a12_b9 : BITVECTOR(5);
istrue_a12_b9_x0 : BITVECTOR(1);
istrue_a12_b9_x1 : BITVECTOR(1);
istrue_a12_b9_x2 : BITVECTOR(1);
istrue_a12_b9_x3 : BITVECTOR(1);
istrue_a12_b9_x4 : BITVECTOR(1);
istrue_a12_b9_x5 : BITVECTOR(1);
istrue_a12_b9_x6 : BITVECTOR(1);
istrue_a12_b9_x7 : BITVECTOR(1);
istrue_a12_b9_x8 : BITVECTOR(1);
istrue_a12_b9_x9 : BITVECTOR(1);
istrue_a12_b9_x10 : BITVECTOR(1);
istrue_a12_b9_x11 : BITVECTOR(1);
istrue_a12_b9_x12 : BITVECTOR(1);
istrue_a12_b9_x13 : BITVECTOR(1);
istrue_a12_b9_x14 : BITVECTOR(1);
istrue_a12_b9_x15 : BITVECTOR(1);
ddt_a12_b10 : BITVECTOR(5);
istrue_a12_b10_x0 : BITVECTOR(1);
istrue_a12_b10_x1 : BITVECTOR(1);
istrue_a12_b10_x2 : BITVECTOR(1);
istrue_a12_b10_x3 : BITVECTOR(1);
istrue_a12_b10_x4 : BITVECTOR(1);
istrue_a12_b10_x5 : BITVECTOR(1);
istrue_a12_b10_x6 : BITVECTOR(1);
istrue_a12_b10_x7 : BITVECTOR(1);
istrue_a12_b10_x8 : BITVECTOR(1);
istrue_a12_b10_x9 : BITVECTOR(1);
istrue_a12_b10_x10 : BITVECTOR(1);
istrue_a12_b10_x11 : BITVECTOR(1);
istrue_a12_b10_x12 : BITVECTOR(1);
istrue_a12_b10_x13 : BITVECTOR(1);
istrue_a12_b10_x14 : BITVECTOR(1);
istrue_a12_b10_x15 : BITVECTOR(1);
ddt_a12_b11 : BITVECTOR(5);
istrue_a12_b11_x0 : BITVECTOR(1);
istrue_a12_b11_x1 : BITVECTOR(1);
istrue_a12_b11_x2 : BITVECTOR(1);
istrue_a12_b11_x3 : BITVECTOR(1);
istrue_a12_b11_x4 : BITVECTOR(1);
istrue_a12_b11_x5 : BITVECTOR(1);
istrue_a12_b11_x6 : BITVECTOR(1);
istrue_a12_b11_x7 : BITVECTOR(1);
istrue_a12_b11_x8 : BITVECTOR(1);
istrue_a12_b11_x9 : BITVECTOR(1);
istrue_a12_b11_x10 : BITVECTOR(1);
istrue_a12_b11_x11 : BITVECTOR(1);
istrue_a12_b11_x12 : BITVECTOR(1);
istrue_a12_b11_x13 : BITVECTOR(1);
istrue_a12_b11_x14 : BITVECTOR(1);
istrue_a12_b11_x15 : BITVECTOR(1);
ddt_a12_b12 : BITVECTOR(5);
istrue_a12_b12_x0 : BITVECTOR(1);
istrue_a12_b12_x1 : BITVECTOR(1);
istrue_a12_b12_x2 : BITVECTOR(1);
istrue_a12_b12_x3 : BITVECTOR(1);
istrue_a12_b12_x4 : BITVECTOR(1);
istrue_a12_b12_x5 : BITVECTOR(1);
istrue_a12_b12_x6 : BITVECTOR(1);
istrue_a12_b12_x7 : BITVECTOR(1);
istrue_a12_b12_x8 : BITVECTOR(1);
istrue_a12_b12_x9 : BITVECTOR(1);
istrue_a12_b12_x10 : BITVECTOR(1);
istrue_a12_b12_x11 : BITVECTOR(1);
istrue_a12_b12_x12 : BITVECTOR(1);
istrue_a12_b12_x13 : BITVECTOR(1);
istrue_a12_b12_x14 : BITVECTOR(1);
istrue_a12_b12_x15 : BITVECTOR(1);
ddt_a12_b13 : BITVECTOR(5);
istrue_a12_b13_x0 : BITVECTOR(1);
istrue_a12_b13_x1 : BITVECTOR(1);
istrue_a12_b13_x2 : BITVECTOR(1);
istrue_a12_b13_x3 : BITVECTOR(1);
istrue_a12_b13_x4 : BITVECTOR(1);
istrue_a12_b13_x5 : BITVECTOR(1);
istrue_a12_b13_x6 : BITVECTOR(1);
istrue_a12_b13_x7 : BITVECTOR(1);
istrue_a12_b13_x8 : BITVECTOR(1);
istrue_a12_b13_x9 : BITVECTOR(1);
istrue_a12_b13_x10 : BITVECTOR(1);
istrue_a12_b13_x11 : BITVECTOR(1);
istrue_a12_b13_x12 : BITVECTOR(1);
istrue_a12_b13_x13 : BITVECTOR(1);
istrue_a12_b13_x14 : BITVECTOR(1);
istrue_a12_b13_x15 : BITVECTOR(1);
ddt_a12_b14 : BITVECTOR(5);
istrue_a12_b14_x0 : BITVECTOR(1);
istrue_a12_b14_x1 : BITVECTOR(1);
istrue_a12_b14_x2 : BITVECTOR(1);
istrue_a12_b14_x3 : BITVECTOR(1);
istrue_a12_b14_x4 : BITVECTOR(1);
istrue_a12_b14_x5 : BITVECTOR(1);
istrue_a12_b14_x6 : BITVECTOR(1);
istrue_a12_b14_x7 : BITVECTOR(1);
istrue_a12_b14_x8 : BITVECTOR(1);
istrue_a12_b14_x9 : BITVECTOR(1);
istrue_a12_b14_x10 : BITVECTOR(1);
istrue_a12_b14_x11 : BITVECTOR(1);
istrue_a12_b14_x12 : BITVECTOR(1);
istrue_a12_b14_x13 : BITVECTOR(1);
istrue_a12_b14_x14 : BITVECTOR(1);
istrue_a12_b14_x15 : BITVECTOR(1);
ddt_a12_b15 : BITVECTOR(5);
istrue_a12_b15_x0 : BITVECTOR(1);
istrue_a12_b15_x1 : BITVECTOR(1);
istrue_a12_b15_x2 : BITVECTOR(1);
istrue_a12_b15_x3 : BITVECTOR(1);
istrue_a12_b15_x4 : BITVECTOR(1);
istrue_a12_b15_x5 : BITVECTOR(1);
istrue_a12_b15_x6 : BITVECTOR(1);
istrue_a12_b15_x7 : BITVECTOR(1);
istrue_a12_b15_x8 : BITVECTOR(1);
istrue_a12_b15_x9 : BITVECTOR(1);
istrue_a12_b15_x10 : BITVECTOR(1);
istrue_a12_b15_x11 : BITVECTOR(1);
istrue_a12_b15_x12 : BITVECTOR(1);
istrue_a12_b15_x13 : BITVECTOR(1);
istrue_a12_b15_x14 : BITVECTOR(1);
istrue_a12_b15_x15 : BITVECTOR(1);
ddt_a13_b0 : BITVECTOR(5);
istrue_a13_b0_x0 : BITVECTOR(1);
istrue_a13_b0_x1 : BITVECTOR(1);
istrue_a13_b0_x2 : BITVECTOR(1);
istrue_a13_b0_x3 : BITVECTOR(1);
istrue_a13_b0_x4 : BITVECTOR(1);
istrue_a13_b0_x5 : BITVECTOR(1);
istrue_a13_b0_x6 : BITVECTOR(1);
istrue_a13_b0_x7 : BITVECTOR(1);
istrue_a13_b0_x8 : BITVECTOR(1);
istrue_a13_b0_x9 : BITVECTOR(1);
istrue_a13_b0_x10 : BITVECTOR(1);
istrue_a13_b0_x11 : BITVECTOR(1);
istrue_a13_b0_x12 : BITVECTOR(1);
istrue_a13_b0_x13 : BITVECTOR(1);
istrue_a13_b0_x14 : BITVECTOR(1);
istrue_a13_b0_x15 : BITVECTOR(1);
ddt_a13_b1 : BITVECTOR(5);
istrue_a13_b1_x0 : BITVECTOR(1);
istrue_a13_b1_x1 : BITVECTOR(1);
istrue_a13_b1_x2 : BITVECTOR(1);
istrue_a13_b1_x3 : BITVECTOR(1);
istrue_a13_b1_x4 : BITVECTOR(1);
istrue_a13_b1_x5 : BITVECTOR(1);
istrue_a13_b1_x6 : BITVECTOR(1);
istrue_a13_b1_x7 : BITVECTOR(1);
istrue_a13_b1_x8 : BITVECTOR(1);
istrue_a13_b1_x9 : BITVECTOR(1);
istrue_a13_b1_x10 : BITVECTOR(1);
istrue_a13_b1_x11 : BITVECTOR(1);
istrue_a13_b1_x12 : BITVECTOR(1);
istrue_a13_b1_x13 : BITVECTOR(1);
istrue_a13_b1_x14 : BITVECTOR(1);
istrue_a13_b1_x15 : BITVECTOR(1);
ddt_a13_b2 : BITVECTOR(5);
istrue_a13_b2_x0 : BITVECTOR(1);
istrue_a13_b2_x1 : BITVECTOR(1);
istrue_a13_b2_x2 : BITVECTOR(1);
istrue_a13_b2_x3 : BITVECTOR(1);
istrue_a13_b2_x4 : BITVECTOR(1);
istrue_a13_b2_x5 : BITVECTOR(1);
istrue_a13_b2_x6 : BITVECTOR(1);
istrue_a13_b2_x7 : BITVECTOR(1);
istrue_a13_b2_x8 : BITVECTOR(1);
istrue_a13_b2_x9 : BITVECTOR(1);
istrue_a13_b2_x10 : BITVECTOR(1);
istrue_a13_b2_x11 : BITVECTOR(1);
istrue_a13_b2_x12 : BITVECTOR(1);
istrue_a13_b2_x13 : BITVECTOR(1);
istrue_a13_b2_x14 : BITVECTOR(1);
istrue_a13_b2_x15 : BITVECTOR(1);
ddt_a13_b3 : BITVECTOR(5);
istrue_a13_b3_x0 : BITVECTOR(1);
istrue_a13_b3_x1 : BITVECTOR(1);
istrue_a13_b3_x2 : BITVECTOR(1);
istrue_a13_b3_x3 : BITVECTOR(1);
istrue_a13_b3_x4 : BITVECTOR(1);
istrue_a13_b3_x5 : BITVECTOR(1);
istrue_a13_b3_x6 : BITVECTOR(1);
istrue_a13_b3_x7 : BITVECTOR(1);
istrue_a13_b3_x8 : BITVECTOR(1);
istrue_a13_b3_x9 : BITVECTOR(1);
istrue_a13_b3_x10 : BITVECTOR(1);
istrue_a13_b3_x11 : BITVECTOR(1);
istrue_a13_b3_x12 : BITVECTOR(1);
istrue_a13_b3_x13 : BITVECTOR(1);
istrue_a13_b3_x14 : BITVECTOR(1);
istrue_a13_b3_x15 : BITVECTOR(1);
ddt_a13_b4 : BITVECTOR(5);
istrue_a13_b4_x0 : BITVECTOR(1);
istrue_a13_b4_x1 : BITVECTOR(1);
istrue_a13_b4_x2 : BITVECTOR(1);
istrue_a13_b4_x3 : BITVECTOR(1);
istrue_a13_b4_x4 : BITVECTOR(1);
istrue_a13_b4_x5 : BITVECTOR(1);
istrue_a13_b4_x6 : BITVECTOR(1);
istrue_a13_b4_x7 : BITVECTOR(1);
istrue_a13_b4_x8 : BITVECTOR(1);
istrue_a13_b4_x9 : BITVECTOR(1);
istrue_a13_b4_x10 : BITVECTOR(1);
istrue_a13_b4_x11 : BITVECTOR(1);
istrue_a13_b4_x12 : BITVECTOR(1);
istrue_a13_b4_x13 : BITVECTOR(1);
istrue_a13_b4_x14 : BITVECTOR(1);
istrue_a13_b4_x15 : BITVECTOR(1);
ddt_a13_b5 : BITVECTOR(5);
istrue_a13_b5_x0 : BITVECTOR(1);
istrue_a13_b5_x1 : BITVECTOR(1);
istrue_a13_b5_x2 : BITVECTOR(1);
istrue_a13_b5_x3 : BITVECTOR(1);
istrue_a13_b5_x4 : BITVECTOR(1);
istrue_a13_b5_x5 : BITVECTOR(1);
istrue_a13_b5_x6 : BITVECTOR(1);
istrue_a13_b5_x7 : BITVECTOR(1);
istrue_a13_b5_x8 : BITVECTOR(1);
istrue_a13_b5_x9 : BITVECTOR(1);
istrue_a13_b5_x10 : BITVECTOR(1);
istrue_a13_b5_x11 : BITVECTOR(1);
istrue_a13_b5_x12 : BITVECTOR(1);
istrue_a13_b5_x13 : BITVECTOR(1);
istrue_a13_b5_x14 : BITVECTOR(1);
istrue_a13_b5_x15 : BITVECTOR(1);
ddt_a13_b6 : BITVECTOR(5);
istrue_a13_b6_x0 : BITVECTOR(1);
istrue_a13_b6_x1 : BITVECTOR(1);
istrue_a13_b6_x2 : BITVECTOR(1);
istrue_a13_b6_x3 : BITVECTOR(1);
istrue_a13_b6_x4 : BITVECTOR(1);
istrue_a13_b6_x5 : BITVECTOR(1);
istrue_a13_b6_x6 : BITVECTOR(1);
istrue_a13_b6_x7 : BITVECTOR(1);
istrue_a13_b6_x8 : BITVECTOR(1);
istrue_a13_b6_x9 : BITVECTOR(1);
istrue_a13_b6_x10 : BITVECTOR(1);
istrue_a13_b6_x11 : BITVECTOR(1);
istrue_a13_b6_x12 : BITVECTOR(1);
istrue_a13_b6_x13 : BITVECTOR(1);
istrue_a13_b6_x14 : BITVECTOR(1);
istrue_a13_b6_x15 : BITVECTOR(1);
ddt_a13_b7 : BITVECTOR(5);
istrue_a13_b7_x0 : BITVECTOR(1);
istrue_a13_b7_x1 : BITVECTOR(1);
istrue_a13_b7_x2 : BITVECTOR(1);
istrue_a13_b7_x3 : BITVECTOR(1);
istrue_a13_b7_x4 : BITVECTOR(1);
istrue_a13_b7_x5 : BITVECTOR(1);
istrue_a13_b7_x6 : BITVECTOR(1);
istrue_a13_b7_x7 : BITVECTOR(1);
istrue_a13_b7_x8 : BITVECTOR(1);
istrue_a13_b7_x9 : BITVECTOR(1);
istrue_a13_b7_x10 : BITVECTOR(1);
istrue_a13_b7_x11 : BITVECTOR(1);
istrue_a13_b7_x12 : BITVECTOR(1);
istrue_a13_b7_x13 : BITVECTOR(1);
istrue_a13_b7_x14 : BITVECTOR(1);
istrue_a13_b7_x15 : BITVECTOR(1);
ddt_a13_b8 : BITVECTOR(5);
istrue_a13_b8_x0 : BITVECTOR(1);
istrue_a13_b8_x1 : BITVECTOR(1);
istrue_a13_b8_x2 : BITVECTOR(1);
istrue_a13_b8_x3 : BITVECTOR(1);
istrue_a13_b8_x4 : BITVECTOR(1);
istrue_a13_b8_x5 : BITVECTOR(1);
istrue_a13_b8_x6 : BITVECTOR(1);
istrue_a13_b8_x7 : BITVECTOR(1);
istrue_a13_b8_x8 : BITVECTOR(1);
istrue_a13_b8_x9 : BITVECTOR(1);
istrue_a13_b8_x10 : BITVECTOR(1);
istrue_a13_b8_x11 : BITVECTOR(1);
istrue_a13_b8_x12 : BITVECTOR(1);
istrue_a13_b8_x13 : BITVECTOR(1);
istrue_a13_b8_x14 : BITVECTOR(1);
istrue_a13_b8_x15 : BITVECTOR(1);
ddt_a13_b9 : BITVECTOR(5);
istrue_a13_b9_x0 : BITVECTOR(1);
istrue_a13_b9_x1 : BITVECTOR(1);
istrue_a13_b9_x2 : BITVECTOR(1);
istrue_a13_b9_x3 : BITVECTOR(1);
istrue_a13_b9_x4 : BITVECTOR(1);
istrue_a13_b9_x5 : BITVECTOR(1);
istrue_a13_b9_x6 : BITVECTOR(1);
istrue_a13_b9_x7 : BITVECTOR(1);
istrue_a13_b9_x8 : BITVECTOR(1);
istrue_a13_b9_x9 : BITVECTOR(1);
istrue_a13_b9_x10 : BITVECTOR(1);
istrue_a13_b9_x11 : BITVECTOR(1);
istrue_a13_b9_x12 : BITVECTOR(1);
istrue_a13_b9_x13 : BITVECTOR(1);
istrue_a13_b9_x14 : BITVECTOR(1);
istrue_a13_b9_x15 : BITVECTOR(1);
ddt_a13_b10 : BITVECTOR(5);
istrue_a13_b10_x0 : BITVECTOR(1);
istrue_a13_b10_x1 : BITVECTOR(1);
istrue_a13_b10_x2 : BITVECTOR(1);
istrue_a13_b10_x3 : BITVECTOR(1);
istrue_a13_b10_x4 : BITVECTOR(1);
istrue_a13_b10_x5 : BITVECTOR(1);
istrue_a13_b10_x6 : BITVECTOR(1);
istrue_a13_b10_x7 : BITVECTOR(1);
istrue_a13_b10_x8 : BITVECTOR(1);
istrue_a13_b10_x9 : BITVECTOR(1);
istrue_a13_b10_x10 : BITVECTOR(1);
istrue_a13_b10_x11 : BITVECTOR(1);
istrue_a13_b10_x12 : BITVECTOR(1);
istrue_a13_b10_x13 : BITVECTOR(1);
istrue_a13_b10_x14 : BITVECTOR(1);
istrue_a13_b10_x15 : BITVECTOR(1);
ddt_a13_b11 : BITVECTOR(5);
istrue_a13_b11_x0 : BITVECTOR(1);
istrue_a13_b11_x1 : BITVECTOR(1);
istrue_a13_b11_x2 : BITVECTOR(1);
istrue_a13_b11_x3 : BITVECTOR(1);
istrue_a13_b11_x4 : BITVECTOR(1);
istrue_a13_b11_x5 : BITVECTOR(1);
istrue_a13_b11_x6 : BITVECTOR(1);
istrue_a13_b11_x7 : BITVECTOR(1);
istrue_a13_b11_x8 : BITVECTOR(1);
istrue_a13_b11_x9 : BITVECTOR(1);
istrue_a13_b11_x10 : BITVECTOR(1);
istrue_a13_b11_x11 : BITVECTOR(1);
istrue_a13_b11_x12 : BITVECTOR(1);
istrue_a13_b11_x13 : BITVECTOR(1);
istrue_a13_b11_x14 : BITVECTOR(1);
istrue_a13_b11_x15 : BITVECTOR(1);
ddt_a13_b12 : BITVECTOR(5);
istrue_a13_b12_x0 : BITVECTOR(1);
istrue_a13_b12_x1 : BITVECTOR(1);
istrue_a13_b12_x2 : BITVECTOR(1);
istrue_a13_b12_x3 : BITVECTOR(1);
istrue_a13_b12_x4 : BITVECTOR(1);
istrue_a13_b12_x5 : BITVECTOR(1);
istrue_a13_b12_x6 : BITVECTOR(1);
istrue_a13_b12_x7 : BITVECTOR(1);
istrue_a13_b12_x8 : BITVECTOR(1);
istrue_a13_b12_x9 : BITVECTOR(1);
istrue_a13_b12_x10 : BITVECTOR(1);
istrue_a13_b12_x11 : BITVECTOR(1);
istrue_a13_b12_x12 : BITVECTOR(1);
istrue_a13_b12_x13 : BITVECTOR(1);
istrue_a13_b12_x14 : BITVECTOR(1);
istrue_a13_b12_x15 : BITVECTOR(1);
ddt_a13_b13 : BITVECTOR(5);
istrue_a13_b13_x0 : BITVECTOR(1);
istrue_a13_b13_x1 : BITVECTOR(1);
istrue_a13_b13_x2 : BITVECTOR(1);
istrue_a13_b13_x3 : BITVECTOR(1);
istrue_a13_b13_x4 : BITVECTOR(1);
istrue_a13_b13_x5 : BITVECTOR(1);
istrue_a13_b13_x6 : BITVECTOR(1);
istrue_a13_b13_x7 : BITVECTOR(1);
istrue_a13_b13_x8 : BITVECTOR(1);
istrue_a13_b13_x9 : BITVECTOR(1);
istrue_a13_b13_x10 : BITVECTOR(1);
istrue_a13_b13_x11 : BITVECTOR(1);
istrue_a13_b13_x12 : BITVECTOR(1);
istrue_a13_b13_x13 : BITVECTOR(1);
istrue_a13_b13_x14 : BITVECTOR(1);
istrue_a13_b13_x15 : BITVECTOR(1);
ddt_a13_b14 : BITVECTOR(5);
istrue_a13_b14_x0 : BITVECTOR(1);
istrue_a13_b14_x1 : BITVECTOR(1);
istrue_a13_b14_x2 : BITVECTOR(1);
istrue_a13_b14_x3 : BITVECTOR(1);
istrue_a13_b14_x4 : BITVECTOR(1);
istrue_a13_b14_x5 : BITVECTOR(1);
istrue_a13_b14_x6 : BITVECTOR(1);
istrue_a13_b14_x7 : BITVECTOR(1);
istrue_a13_b14_x8 : BITVECTOR(1);
istrue_a13_b14_x9 : BITVECTOR(1);
istrue_a13_b14_x10 : BITVECTOR(1);
istrue_a13_b14_x11 : BITVECTOR(1);
istrue_a13_b14_x12 : BITVECTOR(1);
istrue_a13_b14_x13 : BITVECTOR(1);
istrue_a13_b14_x14 : BITVECTOR(1);
istrue_a13_b14_x15 : BITVECTOR(1);
ddt_a13_b15 : BITVECTOR(5);
istrue_a13_b15_x0 : BITVECTOR(1);
istrue_a13_b15_x1 : BITVECTOR(1);
istrue_a13_b15_x2 : BITVECTOR(1);
istrue_a13_b15_x3 : BITVECTOR(1);
istrue_a13_b15_x4 : BITVECTOR(1);
istrue_a13_b15_x5 : BITVECTOR(1);
istrue_a13_b15_x6 : BITVECTOR(1);
istrue_a13_b15_x7 : BITVECTOR(1);
istrue_a13_b15_x8 : BITVECTOR(1);
istrue_a13_b15_x9 : BITVECTOR(1);
istrue_a13_b15_x10 : BITVECTOR(1);
istrue_a13_b15_x11 : BITVECTOR(1);
istrue_a13_b15_x12 : BITVECTOR(1);
istrue_a13_b15_x13 : BITVECTOR(1);
istrue_a13_b15_x14 : BITVECTOR(1);
istrue_a13_b15_x15 : BITVECTOR(1);
ddt_a14_b0 : BITVECTOR(5);
istrue_a14_b0_x0 : BITVECTOR(1);
istrue_a14_b0_x1 : BITVECTOR(1);
istrue_a14_b0_x2 : BITVECTOR(1);
istrue_a14_b0_x3 : BITVECTOR(1);
istrue_a14_b0_x4 : BITVECTOR(1);
istrue_a14_b0_x5 : BITVECTOR(1);
istrue_a14_b0_x6 : BITVECTOR(1);
istrue_a14_b0_x7 : BITVECTOR(1);
istrue_a14_b0_x8 : BITVECTOR(1);
istrue_a14_b0_x9 : BITVECTOR(1);
istrue_a14_b0_x10 : BITVECTOR(1);
istrue_a14_b0_x11 : BITVECTOR(1);
istrue_a14_b0_x12 : BITVECTOR(1);
istrue_a14_b0_x13 : BITVECTOR(1);
istrue_a14_b0_x14 : BITVECTOR(1);
istrue_a14_b0_x15 : BITVECTOR(1);
ddt_a14_b1 : BITVECTOR(5);
istrue_a14_b1_x0 : BITVECTOR(1);
istrue_a14_b1_x1 : BITVECTOR(1);
istrue_a14_b1_x2 : BITVECTOR(1);
istrue_a14_b1_x3 : BITVECTOR(1);
istrue_a14_b1_x4 : BITVECTOR(1);
istrue_a14_b1_x5 : BITVECTOR(1);
istrue_a14_b1_x6 : BITVECTOR(1);
istrue_a14_b1_x7 : BITVECTOR(1);
istrue_a14_b1_x8 : BITVECTOR(1);
istrue_a14_b1_x9 : BITVECTOR(1);
istrue_a14_b1_x10 : BITVECTOR(1);
istrue_a14_b1_x11 : BITVECTOR(1);
istrue_a14_b1_x12 : BITVECTOR(1);
istrue_a14_b1_x13 : BITVECTOR(1);
istrue_a14_b1_x14 : BITVECTOR(1);
istrue_a14_b1_x15 : BITVECTOR(1);
ddt_a14_b2 : BITVECTOR(5);
istrue_a14_b2_x0 : BITVECTOR(1);
istrue_a14_b2_x1 : BITVECTOR(1);
istrue_a14_b2_x2 : BITVECTOR(1);
istrue_a14_b2_x3 : BITVECTOR(1);
istrue_a14_b2_x4 : BITVECTOR(1);
istrue_a14_b2_x5 : BITVECTOR(1);
istrue_a14_b2_x6 : BITVECTOR(1);
istrue_a14_b2_x7 : BITVECTOR(1);
istrue_a14_b2_x8 : BITVECTOR(1);
istrue_a14_b2_x9 : BITVECTOR(1);
istrue_a14_b2_x10 : BITVECTOR(1);
istrue_a14_b2_x11 : BITVECTOR(1);
istrue_a14_b2_x12 : BITVECTOR(1);
istrue_a14_b2_x13 : BITVECTOR(1);
istrue_a14_b2_x14 : BITVECTOR(1);
istrue_a14_b2_x15 : BITVECTOR(1);
ddt_a14_b3 : BITVECTOR(5);
istrue_a14_b3_x0 : BITVECTOR(1);
istrue_a14_b3_x1 : BITVECTOR(1);
istrue_a14_b3_x2 : BITVECTOR(1);
istrue_a14_b3_x3 : BITVECTOR(1);
istrue_a14_b3_x4 : BITVECTOR(1);
istrue_a14_b3_x5 : BITVECTOR(1);
istrue_a14_b3_x6 : BITVECTOR(1);
istrue_a14_b3_x7 : BITVECTOR(1);
istrue_a14_b3_x8 : BITVECTOR(1);
istrue_a14_b3_x9 : BITVECTOR(1);
istrue_a14_b3_x10 : BITVECTOR(1);
istrue_a14_b3_x11 : BITVECTOR(1);
istrue_a14_b3_x12 : BITVECTOR(1);
istrue_a14_b3_x13 : BITVECTOR(1);
istrue_a14_b3_x14 : BITVECTOR(1);
istrue_a14_b3_x15 : BITVECTOR(1);
ddt_a14_b4 : BITVECTOR(5);
istrue_a14_b4_x0 : BITVECTOR(1);
istrue_a14_b4_x1 : BITVECTOR(1);
istrue_a14_b4_x2 : BITVECTOR(1);
istrue_a14_b4_x3 : BITVECTOR(1);
istrue_a14_b4_x4 : BITVECTOR(1);
istrue_a14_b4_x5 : BITVECTOR(1);
istrue_a14_b4_x6 : BITVECTOR(1);
istrue_a14_b4_x7 : BITVECTOR(1);
istrue_a14_b4_x8 : BITVECTOR(1);
istrue_a14_b4_x9 : BITVECTOR(1);
istrue_a14_b4_x10 : BITVECTOR(1);
istrue_a14_b4_x11 : BITVECTOR(1);
istrue_a14_b4_x12 : BITVECTOR(1);
istrue_a14_b4_x13 : BITVECTOR(1);
istrue_a14_b4_x14 : BITVECTOR(1);
istrue_a14_b4_x15 : BITVECTOR(1);
ddt_a14_b5 : BITVECTOR(5);
istrue_a14_b5_x0 : BITVECTOR(1);
istrue_a14_b5_x1 : BITVECTOR(1);
istrue_a14_b5_x2 : BITVECTOR(1);
istrue_a14_b5_x3 : BITVECTOR(1);
istrue_a14_b5_x4 : BITVECTOR(1);
istrue_a14_b5_x5 : BITVECTOR(1);
istrue_a14_b5_x6 : BITVECTOR(1);
istrue_a14_b5_x7 : BITVECTOR(1);
istrue_a14_b5_x8 : BITVECTOR(1);
istrue_a14_b5_x9 : BITVECTOR(1);
istrue_a14_b5_x10 : BITVECTOR(1);
istrue_a14_b5_x11 : BITVECTOR(1);
istrue_a14_b5_x12 : BITVECTOR(1);
istrue_a14_b5_x13 : BITVECTOR(1);
istrue_a14_b5_x14 : BITVECTOR(1);
istrue_a14_b5_x15 : BITVECTOR(1);
ddt_a14_b6 : BITVECTOR(5);
istrue_a14_b6_x0 : BITVECTOR(1);
istrue_a14_b6_x1 : BITVECTOR(1);
istrue_a14_b6_x2 : BITVECTOR(1);
istrue_a14_b6_x3 : BITVECTOR(1);
istrue_a14_b6_x4 : BITVECTOR(1);
istrue_a14_b6_x5 : BITVECTOR(1);
istrue_a14_b6_x6 : BITVECTOR(1);
istrue_a14_b6_x7 : BITVECTOR(1);
istrue_a14_b6_x8 : BITVECTOR(1);
istrue_a14_b6_x9 : BITVECTOR(1);
istrue_a14_b6_x10 : BITVECTOR(1);
istrue_a14_b6_x11 : BITVECTOR(1);
istrue_a14_b6_x12 : BITVECTOR(1);
istrue_a14_b6_x13 : BITVECTOR(1);
istrue_a14_b6_x14 : BITVECTOR(1);
istrue_a14_b6_x15 : BITVECTOR(1);
ddt_a14_b7 : BITVECTOR(5);
istrue_a14_b7_x0 : BITVECTOR(1);
istrue_a14_b7_x1 : BITVECTOR(1);
istrue_a14_b7_x2 : BITVECTOR(1);
istrue_a14_b7_x3 : BITVECTOR(1);
istrue_a14_b7_x4 : BITVECTOR(1);
istrue_a14_b7_x5 : BITVECTOR(1);
istrue_a14_b7_x6 : BITVECTOR(1);
istrue_a14_b7_x7 : BITVECTOR(1);
istrue_a14_b7_x8 : BITVECTOR(1);
istrue_a14_b7_x9 : BITVECTOR(1);
istrue_a14_b7_x10 : BITVECTOR(1);
istrue_a14_b7_x11 : BITVECTOR(1);
istrue_a14_b7_x12 : BITVECTOR(1);
istrue_a14_b7_x13 : BITVECTOR(1);
istrue_a14_b7_x14 : BITVECTOR(1);
istrue_a14_b7_x15 : BITVECTOR(1);
ddt_a14_b8 : BITVECTOR(5);
istrue_a14_b8_x0 : BITVECTOR(1);
istrue_a14_b8_x1 : BITVECTOR(1);
istrue_a14_b8_x2 : BITVECTOR(1);
istrue_a14_b8_x3 : BITVECTOR(1);
istrue_a14_b8_x4 : BITVECTOR(1);
istrue_a14_b8_x5 : BITVECTOR(1);
istrue_a14_b8_x6 : BITVECTOR(1);
istrue_a14_b8_x7 : BITVECTOR(1);
istrue_a14_b8_x8 : BITVECTOR(1);
istrue_a14_b8_x9 : BITVECTOR(1);
istrue_a14_b8_x10 : BITVECTOR(1);
istrue_a14_b8_x11 : BITVECTOR(1);
istrue_a14_b8_x12 : BITVECTOR(1);
istrue_a14_b8_x13 : BITVECTOR(1);
istrue_a14_b8_x14 : BITVECTOR(1);
istrue_a14_b8_x15 : BITVECTOR(1);
ddt_a14_b9 : BITVECTOR(5);
istrue_a14_b9_x0 : BITVECTOR(1);
istrue_a14_b9_x1 : BITVECTOR(1);
istrue_a14_b9_x2 : BITVECTOR(1);
istrue_a14_b9_x3 : BITVECTOR(1);
istrue_a14_b9_x4 : BITVECTOR(1);
istrue_a14_b9_x5 : BITVECTOR(1);
istrue_a14_b9_x6 : BITVECTOR(1);
istrue_a14_b9_x7 : BITVECTOR(1);
istrue_a14_b9_x8 : BITVECTOR(1);
istrue_a14_b9_x9 : BITVECTOR(1);
istrue_a14_b9_x10 : BITVECTOR(1);
istrue_a14_b9_x11 : BITVECTOR(1);
istrue_a14_b9_x12 : BITVECTOR(1);
istrue_a14_b9_x13 : BITVECTOR(1);
istrue_a14_b9_x14 : BITVECTOR(1);
istrue_a14_b9_x15 : BITVECTOR(1);
ddt_a14_b10 : BITVECTOR(5);
istrue_a14_b10_x0 : BITVECTOR(1);
istrue_a14_b10_x1 : BITVECTOR(1);
istrue_a14_b10_x2 : BITVECTOR(1);
istrue_a14_b10_x3 : BITVECTOR(1);
istrue_a14_b10_x4 : BITVECTOR(1);
istrue_a14_b10_x5 : BITVECTOR(1);
istrue_a14_b10_x6 : BITVECTOR(1);
istrue_a14_b10_x7 : BITVECTOR(1);
istrue_a14_b10_x8 : BITVECTOR(1);
istrue_a14_b10_x9 : BITVECTOR(1);
istrue_a14_b10_x10 : BITVECTOR(1);
istrue_a14_b10_x11 : BITVECTOR(1);
istrue_a14_b10_x12 : BITVECTOR(1);
istrue_a14_b10_x13 : BITVECTOR(1);
istrue_a14_b10_x14 : BITVECTOR(1);
istrue_a14_b10_x15 : BITVECTOR(1);
ddt_a14_b11 : BITVECTOR(5);
istrue_a14_b11_x0 : BITVECTOR(1);
istrue_a14_b11_x1 : BITVECTOR(1);
istrue_a14_b11_x2 : BITVECTOR(1);
istrue_a14_b11_x3 : BITVECTOR(1);
istrue_a14_b11_x4 : BITVECTOR(1);
istrue_a14_b11_x5 : BITVECTOR(1);
istrue_a14_b11_x6 : BITVECTOR(1);
istrue_a14_b11_x7 : BITVECTOR(1);
istrue_a14_b11_x8 : BITVECTOR(1);
istrue_a14_b11_x9 : BITVECTOR(1);
istrue_a14_b11_x10 : BITVECTOR(1);
istrue_a14_b11_x11 : BITVECTOR(1);
istrue_a14_b11_x12 : BITVECTOR(1);
istrue_a14_b11_x13 : BITVECTOR(1);
istrue_a14_b11_x14 : BITVECTOR(1);
istrue_a14_b11_x15 : BITVECTOR(1);
ddt_a14_b12 : BITVECTOR(5);
istrue_a14_b12_x0 : BITVECTOR(1);
istrue_a14_b12_x1 : BITVECTOR(1);
istrue_a14_b12_x2 : BITVECTOR(1);
istrue_a14_b12_x3 : BITVECTOR(1);
istrue_a14_b12_x4 : BITVECTOR(1);
istrue_a14_b12_x5 : BITVECTOR(1);
istrue_a14_b12_x6 : BITVECTOR(1);
istrue_a14_b12_x7 : BITVECTOR(1);
istrue_a14_b12_x8 : BITVECTOR(1);
istrue_a14_b12_x9 : BITVECTOR(1);
istrue_a14_b12_x10 : BITVECTOR(1);
istrue_a14_b12_x11 : BITVECTOR(1);
istrue_a14_b12_x12 : BITVECTOR(1);
istrue_a14_b12_x13 : BITVECTOR(1);
istrue_a14_b12_x14 : BITVECTOR(1);
istrue_a14_b12_x15 : BITVECTOR(1);
ddt_a14_b13 : BITVECTOR(5);
istrue_a14_b13_x0 : BITVECTOR(1);
istrue_a14_b13_x1 : BITVECTOR(1);
istrue_a14_b13_x2 : BITVECTOR(1);
istrue_a14_b13_x3 : BITVECTOR(1);
istrue_a14_b13_x4 : BITVECTOR(1);
istrue_a14_b13_x5 : BITVECTOR(1);
istrue_a14_b13_x6 : BITVECTOR(1);
istrue_a14_b13_x7 : BITVECTOR(1);
istrue_a14_b13_x8 : BITVECTOR(1);
istrue_a14_b13_x9 : BITVECTOR(1);
istrue_a14_b13_x10 : BITVECTOR(1);
istrue_a14_b13_x11 : BITVECTOR(1);
istrue_a14_b13_x12 : BITVECTOR(1);
istrue_a14_b13_x13 : BITVECTOR(1);
istrue_a14_b13_x14 : BITVECTOR(1);
istrue_a14_b13_x15 : BITVECTOR(1);
ddt_a14_b14 : BITVECTOR(5);
istrue_a14_b14_x0 : BITVECTOR(1);
istrue_a14_b14_x1 : BITVECTOR(1);
istrue_a14_b14_x2 : BITVECTOR(1);
istrue_a14_b14_x3 : BITVECTOR(1);
istrue_a14_b14_x4 : BITVECTOR(1);
istrue_a14_b14_x5 : BITVECTOR(1);
istrue_a14_b14_x6 : BITVECTOR(1);
istrue_a14_b14_x7 : BITVECTOR(1);
istrue_a14_b14_x8 : BITVECTOR(1);
istrue_a14_b14_x9 : BITVECTOR(1);
istrue_a14_b14_x10 : BITVECTOR(1);
istrue_a14_b14_x11 : BITVECTOR(1);
istrue_a14_b14_x12 : BITVECTOR(1);
istrue_a14_b14_x13 : BITVECTOR(1);
istrue_a14_b14_x14 : BITVECTOR(1);
istrue_a14_b14_x15 : BITVECTOR(1);
ddt_a14_b15 : BITVECTOR(5);
istrue_a14_b15_x0 : BITVECTOR(1);
istrue_a14_b15_x1 : BITVECTOR(1);
istrue_a14_b15_x2 : BITVECTOR(1);
istrue_a14_b15_x3 : BITVECTOR(1);
istrue_a14_b15_x4 : BITVECTOR(1);
istrue_a14_b15_x5 : BITVECTOR(1);
istrue_a14_b15_x6 : BITVECTOR(1);
istrue_a14_b15_x7 : BITVECTOR(1);
istrue_a14_b15_x8 : BITVECTOR(1);
istrue_a14_b15_x9 : BITVECTOR(1);
istrue_a14_b15_x10 : BITVECTOR(1);
istrue_a14_b15_x11 : BITVECTOR(1);
istrue_a14_b15_x12 : BITVECTOR(1);
istrue_a14_b15_x13 : BITVECTOR(1);
istrue_a14_b15_x14 : BITVECTOR(1);
istrue_a14_b15_x15 : BITVECTOR(1);
ddt_a15_b0 : BITVECTOR(5);
istrue_a15_b0_x0 : BITVECTOR(1);
istrue_a15_b0_x1 : BITVECTOR(1);
istrue_a15_b0_x2 : BITVECTOR(1);
istrue_a15_b0_x3 : BITVECTOR(1);
istrue_a15_b0_x4 : BITVECTOR(1);
istrue_a15_b0_x5 : BITVECTOR(1);
istrue_a15_b0_x6 : BITVECTOR(1);
istrue_a15_b0_x7 : BITVECTOR(1);
istrue_a15_b0_x8 : BITVECTOR(1);
istrue_a15_b0_x9 : BITVECTOR(1);
istrue_a15_b0_x10 : BITVECTOR(1);
istrue_a15_b0_x11 : BITVECTOR(1);
istrue_a15_b0_x12 : BITVECTOR(1);
istrue_a15_b0_x13 : BITVECTOR(1);
istrue_a15_b0_x14 : BITVECTOR(1);
istrue_a15_b0_x15 : BITVECTOR(1);
ddt_a15_b1 : BITVECTOR(5);
istrue_a15_b1_x0 : BITVECTOR(1);
istrue_a15_b1_x1 : BITVECTOR(1);
istrue_a15_b1_x2 : BITVECTOR(1);
istrue_a15_b1_x3 : BITVECTOR(1);
istrue_a15_b1_x4 : BITVECTOR(1);
istrue_a15_b1_x5 : BITVECTOR(1);
istrue_a15_b1_x6 : BITVECTOR(1);
istrue_a15_b1_x7 : BITVECTOR(1);
istrue_a15_b1_x8 : BITVECTOR(1);
istrue_a15_b1_x9 : BITVECTOR(1);
istrue_a15_b1_x10 : BITVECTOR(1);
istrue_a15_b1_x11 : BITVECTOR(1);
istrue_a15_b1_x12 : BITVECTOR(1);
istrue_a15_b1_x13 : BITVECTOR(1);
istrue_a15_b1_x14 : BITVECTOR(1);
istrue_a15_b1_x15 : BITVECTOR(1);
ddt_a15_b2 : BITVECTOR(5);
istrue_a15_b2_x0 : BITVECTOR(1);
istrue_a15_b2_x1 : BITVECTOR(1);
istrue_a15_b2_x2 : BITVECTOR(1);
istrue_a15_b2_x3 : BITVECTOR(1);
istrue_a15_b2_x4 : BITVECTOR(1);
istrue_a15_b2_x5 : BITVECTOR(1);
istrue_a15_b2_x6 : BITVECTOR(1);
istrue_a15_b2_x7 : BITVECTOR(1);
istrue_a15_b2_x8 : BITVECTOR(1);
istrue_a15_b2_x9 : BITVECTOR(1);
istrue_a15_b2_x10 : BITVECTOR(1);
istrue_a15_b2_x11 : BITVECTOR(1);
istrue_a15_b2_x12 : BITVECTOR(1);
istrue_a15_b2_x13 : BITVECTOR(1);
istrue_a15_b2_x14 : BITVECTOR(1);
istrue_a15_b2_x15 : BITVECTOR(1);
ddt_a15_b3 : BITVECTOR(5);
istrue_a15_b3_x0 : BITVECTOR(1);
istrue_a15_b3_x1 : BITVECTOR(1);
istrue_a15_b3_x2 : BITVECTOR(1);
istrue_a15_b3_x3 : BITVECTOR(1);
istrue_a15_b3_x4 : BITVECTOR(1);
istrue_a15_b3_x5 : BITVECTOR(1);
istrue_a15_b3_x6 : BITVECTOR(1);
istrue_a15_b3_x7 : BITVECTOR(1);
istrue_a15_b3_x8 : BITVECTOR(1);
istrue_a15_b3_x9 : BITVECTOR(1);
istrue_a15_b3_x10 : BITVECTOR(1);
istrue_a15_b3_x11 : BITVECTOR(1);
istrue_a15_b3_x12 : BITVECTOR(1);
istrue_a15_b3_x13 : BITVECTOR(1);
istrue_a15_b3_x14 : BITVECTOR(1);
istrue_a15_b3_x15 : BITVECTOR(1);
ddt_a15_b4 : BITVECTOR(5);
istrue_a15_b4_x0 : BITVECTOR(1);
istrue_a15_b4_x1 : BITVECTOR(1);
istrue_a15_b4_x2 : BITVECTOR(1);
istrue_a15_b4_x3 : BITVECTOR(1);
istrue_a15_b4_x4 : BITVECTOR(1);
istrue_a15_b4_x5 : BITVECTOR(1);
istrue_a15_b4_x6 : BITVECTOR(1);
istrue_a15_b4_x7 : BITVECTOR(1);
istrue_a15_b4_x8 : BITVECTOR(1);
istrue_a15_b4_x9 : BITVECTOR(1);
istrue_a15_b4_x10 : BITVECTOR(1);
istrue_a15_b4_x11 : BITVECTOR(1);
istrue_a15_b4_x12 : BITVECTOR(1);
istrue_a15_b4_x13 : BITVECTOR(1);
istrue_a15_b4_x14 : BITVECTOR(1);
istrue_a15_b4_x15 : BITVECTOR(1);
ddt_a15_b5 : BITVECTOR(5);
istrue_a15_b5_x0 : BITVECTOR(1);
istrue_a15_b5_x1 : BITVECTOR(1);
istrue_a15_b5_x2 : BITVECTOR(1);
istrue_a15_b5_x3 : BITVECTOR(1);
istrue_a15_b5_x4 : BITVECTOR(1);
istrue_a15_b5_x5 : BITVECTOR(1);
istrue_a15_b5_x6 : BITVECTOR(1);
istrue_a15_b5_x7 : BITVECTOR(1);
istrue_a15_b5_x8 : BITVECTOR(1);
istrue_a15_b5_x9 : BITVECTOR(1);
istrue_a15_b5_x10 : BITVECTOR(1);
istrue_a15_b5_x11 : BITVECTOR(1);
istrue_a15_b5_x12 : BITVECTOR(1);
istrue_a15_b5_x13 : BITVECTOR(1);
istrue_a15_b5_x14 : BITVECTOR(1);
istrue_a15_b5_x15 : BITVECTOR(1);
ddt_a15_b6 : BITVECTOR(5);
istrue_a15_b6_x0 : BITVECTOR(1);
istrue_a15_b6_x1 : BITVECTOR(1);
istrue_a15_b6_x2 : BITVECTOR(1);
istrue_a15_b6_x3 : BITVECTOR(1);
istrue_a15_b6_x4 : BITVECTOR(1);
istrue_a15_b6_x5 : BITVECTOR(1);
istrue_a15_b6_x6 : BITVECTOR(1);
istrue_a15_b6_x7 : BITVECTOR(1);
istrue_a15_b6_x8 : BITVECTOR(1);
istrue_a15_b6_x9 : BITVECTOR(1);
istrue_a15_b6_x10 : BITVECTOR(1);
istrue_a15_b6_x11 : BITVECTOR(1);
istrue_a15_b6_x12 : BITVECTOR(1);
istrue_a15_b6_x13 : BITVECTOR(1);
istrue_a15_b6_x14 : BITVECTOR(1);
istrue_a15_b6_x15 : BITVECTOR(1);
ddt_a15_b7 : BITVECTOR(5);
istrue_a15_b7_x0 : BITVECTOR(1);
istrue_a15_b7_x1 : BITVECTOR(1);
istrue_a15_b7_x2 : BITVECTOR(1);
istrue_a15_b7_x3 : BITVECTOR(1);
istrue_a15_b7_x4 : BITVECTOR(1);
istrue_a15_b7_x5 : BITVECTOR(1);
istrue_a15_b7_x6 : BITVECTOR(1);
istrue_a15_b7_x7 : BITVECTOR(1);
istrue_a15_b7_x8 : BITVECTOR(1);
istrue_a15_b7_x9 : BITVECTOR(1);
istrue_a15_b7_x10 : BITVECTOR(1);
istrue_a15_b7_x11 : BITVECTOR(1);
istrue_a15_b7_x12 : BITVECTOR(1);
istrue_a15_b7_x13 : BITVECTOR(1);
istrue_a15_b7_x14 : BITVECTOR(1);
istrue_a15_b7_x15 : BITVECTOR(1);
ddt_a15_b8 : BITVECTOR(5);
istrue_a15_b8_x0 : BITVECTOR(1);
istrue_a15_b8_x1 : BITVECTOR(1);
istrue_a15_b8_x2 : BITVECTOR(1);
istrue_a15_b8_x3 : BITVECTOR(1);
istrue_a15_b8_x4 : BITVECTOR(1);
istrue_a15_b8_x5 : BITVECTOR(1);
istrue_a15_b8_x6 : BITVECTOR(1);
istrue_a15_b8_x7 : BITVECTOR(1);
istrue_a15_b8_x8 : BITVECTOR(1);
istrue_a15_b8_x9 : BITVECTOR(1);
istrue_a15_b8_x10 : BITVECTOR(1);
istrue_a15_b8_x11 : BITVECTOR(1);
istrue_a15_b8_x12 : BITVECTOR(1);
istrue_a15_b8_x13 : BITVECTOR(1);
istrue_a15_b8_x14 : BITVECTOR(1);
istrue_a15_b8_x15 : BITVECTOR(1);
ddt_a15_b9 : BITVECTOR(5);
istrue_a15_b9_x0 : BITVECTOR(1);
istrue_a15_b9_x1 : BITVECTOR(1);
istrue_a15_b9_x2 : BITVECTOR(1);
istrue_a15_b9_x3 : BITVECTOR(1);
istrue_a15_b9_x4 : BITVECTOR(1);
istrue_a15_b9_x5 : BITVECTOR(1);
istrue_a15_b9_x6 : BITVECTOR(1);
istrue_a15_b9_x7 : BITVECTOR(1);
istrue_a15_b9_x8 : BITVECTOR(1);
istrue_a15_b9_x9 : BITVECTOR(1);
istrue_a15_b9_x10 : BITVECTOR(1);
istrue_a15_b9_x11 : BITVECTOR(1);
istrue_a15_b9_x12 : BITVECTOR(1);
istrue_a15_b9_x13 : BITVECTOR(1);
istrue_a15_b9_x14 : BITVECTOR(1);
istrue_a15_b9_x15 : BITVECTOR(1);
ddt_a15_b10 : BITVECTOR(5);
istrue_a15_b10_x0 : BITVECTOR(1);
istrue_a15_b10_x1 : BITVECTOR(1);
istrue_a15_b10_x2 : BITVECTOR(1);
istrue_a15_b10_x3 : BITVECTOR(1);
istrue_a15_b10_x4 : BITVECTOR(1);
istrue_a15_b10_x5 : BITVECTOR(1);
istrue_a15_b10_x6 : BITVECTOR(1);
istrue_a15_b10_x7 : BITVECTOR(1);
istrue_a15_b10_x8 : BITVECTOR(1);
istrue_a15_b10_x9 : BITVECTOR(1);
istrue_a15_b10_x10 : BITVECTOR(1);
istrue_a15_b10_x11 : BITVECTOR(1);
istrue_a15_b10_x12 : BITVECTOR(1);
istrue_a15_b10_x13 : BITVECTOR(1);
istrue_a15_b10_x14 : BITVECTOR(1);
istrue_a15_b10_x15 : BITVECTOR(1);
ddt_a15_b11 : BITVECTOR(5);
istrue_a15_b11_x0 : BITVECTOR(1);
istrue_a15_b11_x1 : BITVECTOR(1);
istrue_a15_b11_x2 : BITVECTOR(1);
istrue_a15_b11_x3 : BITVECTOR(1);
istrue_a15_b11_x4 : BITVECTOR(1);
istrue_a15_b11_x5 : BITVECTOR(1);
istrue_a15_b11_x6 : BITVECTOR(1);
istrue_a15_b11_x7 : BITVECTOR(1);
istrue_a15_b11_x8 : BITVECTOR(1);
istrue_a15_b11_x9 : BITVECTOR(1);
istrue_a15_b11_x10 : BITVECTOR(1);
istrue_a15_b11_x11 : BITVECTOR(1);
istrue_a15_b11_x12 : BITVECTOR(1);
istrue_a15_b11_x13 : BITVECTOR(1);
istrue_a15_b11_x14 : BITVECTOR(1);
istrue_a15_b11_x15 : BITVECTOR(1);
ddt_a15_b12 : BITVECTOR(5);
istrue_a15_b12_x0 : BITVECTOR(1);
istrue_a15_b12_x1 : BITVECTOR(1);
istrue_a15_b12_x2 : BITVECTOR(1);
istrue_a15_b12_x3 : BITVECTOR(1);
istrue_a15_b12_x4 : BITVECTOR(1);
istrue_a15_b12_x5 : BITVECTOR(1);
istrue_a15_b12_x6 : BITVECTOR(1);
istrue_a15_b12_x7 : BITVECTOR(1);
istrue_a15_b12_x8 : BITVECTOR(1);
istrue_a15_b12_x9 : BITVECTOR(1);
istrue_a15_b12_x10 : BITVECTOR(1);
istrue_a15_b12_x11 : BITVECTOR(1);
istrue_a15_b12_x12 : BITVECTOR(1);
istrue_a15_b12_x13 : BITVECTOR(1);
istrue_a15_b12_x14 : BITVECTOR(1);
istrue_a15_b12_x15 : BITVECTOR(1);
ddt_a15_b13 : BITVECTOR(5);
istrue_a15_b13_x0 : BITVECTOR(1);
istrue_a15_b13_x1 : BITVECTOR(1);
istrue_a15_b13_x2 : BITVECTOR(1);
istrue_a15_b13_x3 : BITVECTOR(1);
istrue_a15_b13_x4 : BITVECTOR(1);
istrue_a15_b13_x5 : BITVECTOR(1);
istrue_a15_b13_x6 : BITVECTOR(1);
istrue_a15_b13_x7 : BITVECTOR(1);
istrue_a15_b13_x8 : BITVECTOR(1);
istrue_a15_b13_x9 : BITVECTOR(1);
istrue_a15_b13_x10 : BITVECTOR(1);
istrue_a15_b13_x11 : BITVECTOR(1);
istrue_a15_b13_x12 : BITVECTOR(1);
istrue_a15_b13_x13 : BITVECTOR(1);
istrue_a15_b13_x14 : BITVECTOR(1);
istrue_a15_b13_x15 : BITVECTOR(1);
ddt_a15_b14 : BITVECTOR(5);
istrue_a15_b14_x0 : BITVECTOR(1);
istrue_a15_b14_x1 : BITVECTOR(1);
istrue_a15_b14_x2 : BITVECTOR(1);
istrue_a15_b14_x3 : BITVECTOR(1);
istrue_a15_b14_x4 : BITVECTOR(1);
istrue_a15_b14_x5 : BITVECTOR(1);
istrue_a15_b14_x6 : BITVECTOR(1);
istrue_a15_b14_x7 : BITVECTOR(1);
istrue_a15_b14_x8 : BITVECTOR(1);
istrue_a15_b14_x9 : BITVECTOR(1);
istrue_a15_b14_x10 : BITVECTOR(1);
istrue_a15_b14_x11 : BITVECTOR(1);
istrue_a15_b14_x12 : BITVECTOR(1);
istrue_a15_b14_x13 : BITVECTOR(1);
istrue_a15_b14_x14 : BITVECTOR(1);
istrue_a15_b14_x15 : BITVECTOR(1);
ddt_a15_b15 : BITVECTOR(5);
istrue_a15_b15_x0 : BITVECTOR(1);
istrue_a15_b15_x1 : BITVECTOR(1);
istrue_a15_b15_x2 : BITVECTOR(1);
istrue_a15_b15_x3 : BITVECTOR(1);
istrue_a15_b15_x4 : BITVECTOR(1);
istrue_a15_b15_x5 : BITVECTOR(1);
istrue_a15_b15_x6 : BITVECTOR(1);
istrue_a15_b15_x7 : BITVECTOR(1);
istrue_a15_b15_x8 : BITVECTOR(1);
istrue_a15_b15_x9 : BITVECTOR(1);
istrue_a15_b15_x10 : BITVECTOR(1);
istrue_a15_b15_x11 : BITVECTOR(1);
istrue_a15_b15_x12 : BITVECTOR(1);
istrue_a15_b15_x13 : BITVECTOR(1);
istrue_a15_b15_x14 : BITVECTOR(1);
istrue_a15_b15_x15 : BITVECTOR(1);
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a0)] THEN istrue_a0_b0_x0 = 0bin1 ELSE istrue_a0_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a0)] THEN istrue_a0_b0_x1 = 0bin1 ELSE istrue_a0_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a0)] THEN istrue_a0_b0_x2 = 0bin1 ELSE istrue_a0_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a0)] THEN istrue_a0_b0_x3 = 0bin1 ELSE istrue_a0_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a0)] THEN istrue_a0_b0_x4 = 0bin1 ELSE istrue_a0_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a0)] THEN istrue_a0_b0_x5 = 0bin1 ELSE istrue_a0_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a0)] THEN istrue_a0_b0_x6 = 0bin1 ELSE istrue_a0_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a0)] THEN istrue_a0_b0_x7 = 0bin1 ELSE istrue_a0_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a0)] THEN istrue_a0_b0_x8 = 0bin1 ELSE istrue_a0_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a0)] THEN istrue_a0_b0_x9 = 0bin1 ELSE istrue_a0_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a0)] THEN istrue_a0_b0_x10 = 0bin1 ELSE istrue_a0_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a0)] THEN istrue_a0_b0_x11 = 0bin1 ELSE istrue_a0_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a0)] THEN istrue_a0_b0_x12 = 0bin1 ELSE istrue_a0_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a0)] THEN istrue_a0_b0_x13 = 0bin1 ELSE istrue_a0_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a0)] THEN istrue_a0_b0_x14 = 0bin1 ELSE istrue_a0_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a0)] THEN istrue_a0_b0_x15 = 0bin1 ELSE istrue_a0_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b0 = BVPLUS(5, 0bin0000@istrue_a0_b0_x0, 0bin0000@istrue_a0_b0_x1, 0bin0000@istrue_a0_b0_x2, 0bin0000@istrue_a0_b0_x3, 0bin0000@istrue_a0_b0_x4, 0bin0000@istrue_a0_b0_x5, 0bin0000@istrue_a0_b0_x6, 0bin0000@istrue_a0_b0_x7, 0bin0000@istrue_a0_b0_x8, 0bin0000@istrue_a0_b0_x9, 0bin0000@istrue_a0_b0_x10, 0bin0000@istrue_a0_b0_x11, 0bin0000@istrue_a0_b0_x12, 0bin0000@istrue_a0_b0_x13, 0bin0000@istrue_a0_b0_x14, 0bin0000@istrue_a0_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a0)] THEN istrue_a0_b1_x0 = 0bin1 ELSE istrue_a0_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a0)] THEN istrue_a0_b1_x1 = 0bin1 ELSE istrue_a0_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a0)] THEN istrue_a0_b1_x2 = 0bin1 ELSE istrue_a0_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a0)] THEN istrue_a0_b1_x3 = 0bin1 ELSE istrue_a0_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a0)] THEN istrue_a0_b1_x4 = 0bin1 ELSE istrue_a0_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a0)] THEN istrue_a0_b1_x5 = 0bin1 ELSE istrue_a0_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a0)] THEN istrue_a0_b1_x6 = 0bin1 ELSE istrue_a0_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a0)] THEN istrue_a0_b1_x7 = 0bin1 ELSE istrue_a0_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a0)] THEN istrue_a0_b1_x8 = 0bin1 ELSE istrue_a0_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a0)] THEN istrue_a0_b1_x9 = 0bin1 ELSE istrue_a0_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a0)] THEN istrue_a0_b1_x10 = 0bin1 ELSE istrue_a0_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a0)] THEN istrue_a0_b1_x11 = 0bin1 ELSE istrue_a0_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a0)] THEN istrue_a0_b1_x12 = 0bin1 ELSE istrue_a0_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a0)] THEN istrue_a0_b1_x13 = 0bin1 ELSE istrue_a0_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a0)] THEN istrue_a0_b1_x14 = 0bin1 ELSE istrue_a0_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a0)] THEN istrue_a0_b1_x15 = 0bin1 ELSE istrue_a0_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b1 = BVPLUS(5, 0bin0000@istrue_a0_b1_x0, 0bin0000@istrue_a0_b1_x1, 0bin0000@istrue_a0_b1_x2, 0bin0000@istrue_a0_b1_x3, 0bin0000@istrue_a0_b1_x4, 0bin0000@istrue_a0_b1_x5, 0bin0000@istrue_a0_b1_x6, 0bin0000@istrue_a0_b1_x7, 0bin0000@istrue_a0_b1_x8, 0bin0000@istrue_a0_b1_x9, 0bin0000@istrue_a0_b1_x10, 0bin0000@istrue_a0_b1_x11, 0bin0000@istrue_a0_b1_x12, 0bin0000@istrue_a0_b1_x13, 0bin0000@istrue_a0_b1_x14, 0bin0000@istrue_a0_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a0)] THEN istrue_a0_b2_x0 = 0bin1 ELSE istrue_a0_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a0)] THEN istrue_a0_b2_x1 = 0bin1 ELSE istrue_a0_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a0)] THEN istrue_a0_b2_x2 = 0bin1 ELSE istrue_a0_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a0)] THEN istrue_a0_b2_x3 = 0bin1 ELSE istrue_a0_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a0)] THEN istrue_a0_b2_x4 = 0bin1 ELSE istrue_a0_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a0)] THEN istrue_a0_b2_x5 = 0bin1 ELSE istrue_a0_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a0)] THEN istrue_a0_b2_x6 = 0bin1 ELSE istrue_a0_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a0)] THEN istrue_a0_b2_x7 = 0bin1 ELSE istrue_a0_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a0)] THEN istrue_a0_b2_x8 = 0bin1 ELSE istrue_a0_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a0)] THEN istrue_a0_b2_x9 = 0bin1 ELSE istrue_a0_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a0)] THEN istrue_a0_b2_x10 = 0bin1 ELSE istrue_a0_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a0)] THEN istrue_a0_b2_x11 = 0bin1 ELSE istrue_a0_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a0)] THEN istrue_a0_b2_x12 = 0bin1 ELSE istrue_a0_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a0)] THEN istrue_a0_b2_x13 = 0bin1 ELSE istrue_a0_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a0)] THEN istrue_a0_b2_x14 = 0bin1 ELSE istrue_a0_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a0)] THEN istrue_a0_b2_x15 = 0bin1 ELSE istrue_a0_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b2 = BVPLUS(5, 0bin0000@istrue_a0_b2_x0, 0bin0000@istrue_a0_b2_x1, 0bin0000@istrue_a0_b2_x2, 0bin0000@istrue_a0_b2_x3, 0bin0000@istrue_a0_b2_x4, 0bin0000@istrue_a0_b2_x5, 0bin0000@istrue_a0_b2_x6, 0bin0000@istrue_a0_b2_x7, 0bin0000@istrue_a0_b2_x8, 0bin0000@istrue_a0_b2_x9, 0bin0000@istrue_a0_b2_x10, 0bin0000@istrue_a0_b2_x11, 0bin0000@istrue_a0_b2_x12, 0bin0000@istrue_a0_b2_x13, 0bin0000@istrue_a0_b2_x14, 0bin0000@istrue_a0_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a0)] THEN istrue_a0_b3_x0 = 0bin1 ELSE istrue_a0_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a0)] THEN istrue_a0_b3_x1 = 0bin1 ELSE istrue_a0_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a0)] THEN istrue_a0_b3_x2 = 0bin1 ELSE istrue_a0_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a0)] THEN istrue_a0_b3_x3 = 0bin1 ELSE istrue_a0_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a0)] THEN istrue_a0_b3_x4 = 0bin1 ELSE istrue_a0_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a0)] THEN istrue_a0_b3_x5 = 0bin1 ELSE istrue_a0_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a0)] THEN istrue_a0_b3_x6 = 0bin1 ELSE istrue_a0_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a0)] THEN istrue_a0_b3_x7 = 0bin1 ELSE istrue_a0_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a0)] THEN istrue_a0_b3_x8 = 0bin1 ELSE istrue_a0_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a0)] THEN istrue_a0_b3_x9 = 0bin1 ELSE istrue_a0_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a0)] THEN istrue_a0_b3_x10 = 0bin1 ELSE istrue_a0_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a0)] THEN istrue_a0_b3_x11 = 0bin1 ELSE istrue_a0_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a0)] THEN istrue_a0_b3_x12 = 0bin1 ELSE istrue_a0_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a0)] THEN istrue_a0_b3_x13 = 0bin1 ELSE istrue_a0_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a0)] THEN istrue_a0_b3_x14 = 0bin1 ELSE istrue_a0_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a0)] THEN istrue_a0_b3_x15 = 0bin1 ELSE istrue_a0_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b3 = BVPLUS(5, 0bin0000@istrue_a0_b3_x0, 0bin0000@istrue_a0_b3_x1, 0bin0000@istrue_a0_b3_x2, 0bin0000@istrue_a0_b3_x3, 0bin0000@istrue_a0_b3_x4, 0bin0000@istrue_a0_b3_x5, 0bin0000@istrue_a0_b3_x6, 0bin0000@istrue_a0_b3_x7, 0bin0000@istrue_a0_b3_x8, 0bin0000@istrue_a0_b3_x9, 0bin0000@istrue_a0_b3_x10, 0bin0000@istrue_a0_b3_x11, 0bin0000@istrue_a0_b3_x12, 0bin0000@istrue_a0_b3_x13, 0bin0000@istrue_a0_b3_x14, 0bin0000@istrue_a0_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a0)] THEN istrue_a0_b4_x0 = 0bin1 ELSE istrue_a0_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a0)] THEN istrue_a0_b4_x1 = 0bin1 ELSE istrue_a0_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a0)] THEN istrue_a0_b4_x2 = 0bin1 ELSE istrue_a0_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a0)] THEN istrue_a0_b4_x3 = 0bin1 ELSE istrue_a0_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a0)] THEN istrue_a0_b4_x4 = 0bin1 ELSE istrue_a0_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a0)] THEN istrue_a0_b4_x5 = 0bin1 ELSE istrue_a0_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a0)] THEN istrue_a0_b4_x6 = 0bin1 ELSE istrue_a0_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a0)] THEN istrue_a0_b4_x7 = 0bin1 ELSE istrue_a0_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a0)] THEN istrue_a0_b4_x8 = 0bin1 ELSE istrue_a0_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a0)] THEN istrue_a0_b4_x9 = 0bin1 ELSE istrue_a0_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a0)] THEN istrue_a0_b4_x10 = 0bin1 ELSE istrue_a0_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a0)] THEN istrue_a0_b4_x11 = 0bin1 ELSE istrue_a0_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a0)] THEN istrue_a0_b4_x12 = 0bin1 ELSE istrue_a0_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a0)] THEN istrue_a0_b4_x13 = 0bin1 ELSE istrue_a0_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a0)] THEN istrue_a0_b4_x14 = 0bin1 ELSE istrue_a0_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a0)] THEN istrue_a0_b4_x15 = 0bin1 ELSE istrue_a0_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b4 = BVPLUS(5, 0bin0000@istrue_a0_b4_x0, 0bin0000@istrue_a0_b4_x1, 0bin0000@istrue_a0_b4_x2, 0bin0000@istrue_a0_b4_x3, 0bin0000@istrue_a0_b4_x4, 0bin0000@istrue_a0_b4_x5, 0bin0000@istrue_a0_b4_x6, 0bin0000@istrue_a0_b4_x7, 0bin0000@istrue_a0_b4_x8, 0bin0000@istrue_a0_b4_x9, 0bin0000@istrue_a0_b4_x10, 0bin0000@istrue_a0_b4_x11, 0bin0000@istrue_a0_b4_x12, 0bin0000@istrue_a0_b4_x13, 0bin0000@istrue_a0_b4_x14, 0bin0000@istrue_a0_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a0)] THEN istrue_a0_b5_x0 = 0bin1 ELSE istrue_a0_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a0)] THEN istrue_a0_b5_x1 = 0bin1 ELSE istrue_a0_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a0)] THEN istrue_a0_b5_x2 = 0bin1 ELSE istrue_a0_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a0)] THEN istrue_a0_b5_x3 = 0bin1 ELSE istrue_a0_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a0)] THEN istrue_a0_b5_x4 = 0bin1 ELSE istrue_a0_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a0)] THEN istrue_a0_b5_x5 = 0bin1 ELSE istrue_a0_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a0)] THEN istrue_a0_b5_x6 = 0bin1 ELSE istrue_a0_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a0)] THEN istrue_a0_b5_x7 = 0bin1 ELSE istrue_a0_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a0)] THEN istrue_a0_b5_x8 = 0bin1 ELSE istrue_a0_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a0)] THEN istrue_a0_b5_x9 = 0bin1 ELSE istrue_a0_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a0)] THEN istrue_a0_b5_x10 = 0bin1 ELSE istrue_a0_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a0)] THEN istrue_a0_b5_x11 = 0bin1 ELSE istrue_a0_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a0)] THEN istrue_a0_b5_x12 = 0bin1 ELSE istrue_a0_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a0)] THEN istrue_a0_b5_x13 = 0bin1 ELSE istrue_a0_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a0)] THEN istrue_a0_b5_x14 = 0bin1 ELSE istrue_a0_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a0)] THEN istrue_a0_b5_x15 = 0bin1 ELSE istrue_a0_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b5 = BVPLUS(5, 0bin0000@istrue_a0_b5_x0, 0bin0000@istrue_a0_b5_x1, 0bin0000@istrue_a0_b5_x2, 0bin0000@istrue_a0_b5_x3, 0bin0000@istrue_a0_b5_x4, 0bin0000@istrue_a0_b5_x5, 0bin0000@istrue_a0_b5_x6, 0bin0000@istrue_a0_b5_x7, 0bin0000@istrue_a0_b5_x8, 0bin0000@istrue_a0_b5_x9, 0bin0000@istrue_a0_b5_x10, 0bin0000@istrue_a0_b5_x11, 0bin0000@istrue_a0_b5_x12, 0bin0000@istrue_a0_b5_x13, 0bin0000@istrue_a0_b5_x14, 0bin0000@istrue_a0_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a0)] THEN istrue_a0_b6_x0 = 0bin1 ELSE istrue_a0_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a0)] THEN istrue_a0_b6_x1 = 0bin1 ELSE istrue_a0_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a0)] THEN istrue_a0_b6_x2 = 0bin1 ELSE istrue_a0_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a0)] THEN istrue_a0_b6_x3 = 0bin1 ELSE istrue_a0_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a0)] THEN istrue_a0_b6_x4 = 0bin1 ELSE istrue_a0_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a0)] THEN istrue_a0_b6_x5 = 0bin1 ELSE istrue_a0_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a0)] THEN istrue_a0_b6_x6 = 0bin1 ELSE istrue_a0_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a0)] THEN istrue_a0_b6_x7 = 0bin1 ELSE istrue_a0_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a0)] THEN istrue_a0_b6_x8 = 0bin1 ELSE istrue_a0_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a0)] THEN istrue_a0_b6_x9 = 0bin1 ELSE istrue_a0_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a0)] THEN istrue_a0_b6_x10 = 0bin1 ELSE istrue_a0_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a0)] THEN istrue_a0_b6_x11 = 0bin1 ELSE istrue_a0_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a0)] THEN istrue_a0_b6_x12 = 0bin1 ELSE istrue_a0_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a0)] THEN istrue_a0_b6_x13 = 0bin1 ELSE istrue_a0_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a0)] THEN istrue_a0_b6_x14 = 0bin1 ELSE istrue_a0_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a0)] THEN istrue_a0_b6_x15 = 0bin1 ELSE istrue_a0_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b6 = BVPLUS(5, 0bin0000@istrue_a0_b6_x0, 0bin0000@istrue_a0_b6_x1, 0bin0000@istrue_a0_b6_x2, 0bin0000@istrue_a0_b6_x3, 0bin0000@istrue_a0_b6_x4, 0bin0000@istrue_a0_b6_x5, 0bin0000@istrue_a0_b6_x6, 0bin0000@istrue_a0_b6_x7, 0bin0000@istrue_a0_b6_x8, 0bin0000@istrue_a0_b6_x9, 0bin0000@istrue_a0_b6_x10, 0bin0000@istrue_a0_b6_x11, 0bin0000@istrue_a0_b6_x12, 0bin0000@istrue_a0_b6_x13, 0bin0000@istrue_a0_b6_x14, 0bin0000@istrue_a0_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a0)] THEN istrue_a0_b7_x0 = 0bin1 ELSE istrue_a0_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a0)] THEN istrue_a0_b7_x1 = 0bin1 ELSE istrue_a0_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a0)] THEN istrue_a0_b7_x2 = 0bin1 ELSE istrue_a0_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a0)] THEN istrue_a0_b7_x3 = 0bin1 ELSE istrue_a0_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a0)] THEN istrue_a0_b7_x4 = 0bin1 ELSE istrue_a0_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a0)] THEN istrue_a0_b7_x5 = 0bin1 ELSE istrue_a0_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a0)] THEN istrue_a0_b7_x6 = 0bin1 ELSE istrue_a0_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a0)] THEN istrue_a0_b7_x7 = 0bin1 ELSE istrue_a0_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a0)] THEN istrue_a0_b7_x8 = 0bin1 ELSE istrue_a0_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a0)] THEN istrue_a0_b7_x9 = 0bin1 ELSE istrue_a0_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a0)] THEN istrue_a0_b7_x10 = 0bin1 ELSE istrue_a0_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a0)] THEN istrue_a0_b7_x11 = 0bin1 ELSE istrue_a0_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a0)] THEN istrue_a0_b7_x12 = 0bin1 ELSE istrue_a0_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a0)] THEN istrue_a0_b7_x13 = 0bin1 ELSE istrue_a0_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a0)] THEN istrue_a0_b7_x14 = 0bin1 ELSE istrue_a0_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a0)] THEN istrue_a0_b7_x15 = 0bin1 ELSE istrue_a0_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b7 = BVPLUS(5, 0bin0000@istrue_a0_b7_x0, 0bin0000@istrue_a0_b7_x1, 0bin0000@istrue_a0_b7_x2, 0bin0000@istrue_a0_b7_x3, 0bin0000@istrue_a0_b7_x4, 0bin0000@istrue_a0_b7_x5, 0bin0000@istrue_a0_b7_x6, 0bin0000@istrue_a0_b7_x7, 0bin0000@istrue_a0_b7_x8, 0bin0000@istrue_a0_b7_x9, 0bin0000@istrue_a0_b7_x10, 0bin0000@istrue_a0_b7_x11, 0bin0000@istrue_a0_b7_x12, 0bin0000@istrue_a0_b7_x13, 0bin0000@istrue_a0_b7_x14, 0bin0000@istrue_a0_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a0)] THEN istrue_a0_b8_x0 = 0bin1 ELSE istrue_a0_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a0)] THEN istrue_a0_b8_x1 = 0bin1 ELSE istrue_a0_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a0)] THEN istrue_a0_b8_x2 = 0bin1 ELSE istrue_a0_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a0)] THEN istrue_a0_b8_x3 = 0bin1 ELSE istrue_a0_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a0)] THEN istrue_a0_b8_x4 = 0bin1 ELSE istrue_a0_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a0)] THEN istrue_a0_b8_x5 = 0bin1 ELSE istrue_a0_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a0)] THEN istrue_a0_b8_x6 = 0bin1 ELSE istrue_a0_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a0)] THEN istrue_a0_b8_x7 = 0bin1 ELSE istrue_a0_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a0)] THEN istrue_a0_b8_x8 = 0bin1 ELSE istrue_a0_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a0)] THEN istrue_a0_b8_x9 = 0bin1 ELSE istrue_a0_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a0)] THEN istrue_a0_b8_x10 = 0bin1 ELSE istrue_a0_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a0)] THEN istrue_a0_b8_x11 = 0bin1 ELSE istrue_a0_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a0)] THEN istrue_a0_b8_x12 = 0bin1 ELSE istrue_a0_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a0)] THEN istrue_a0_b8_x13 = 0bin1 ELSE istrue_a0_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a0)] THEN istrue_a0_b8_x14 = 0bin1 ELSE istrue_a0_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a0)] THEN istrue_a0_b8_x15 = 0bin1 ELSE istrue_a0_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b8 = BVPLUS(5, 0bin0000@istrue_a0_b8_x0, 0bin0000@istrue_a0_b8_x1, 0bin0000@istrue_a0_b8_x2, 0bin0000@istrue_a0_b8_x3, 0bin0000@istrue_a0_b8_x4, 0bin0000@istrue_a0_b8_x5, 0bin0000@istrue_a0_b8_x6, 0bin0000@istrue_a0_b8_x7, 0bin0000@istrue_a0_b8_x8, 0bin0000@istrue_a0_b8_x9, 0bin0000@istrue_a0_b8_x10, 0bin0000@istrue_a0_b8_x11, 0bin0000@istrue_a0_b8_x12, 0bin0000@istrue_a0_b8_x13, 0bin0000@istrue_a0_b8_x14, 0bin0000@istrue_a0_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a0)] THEN istrue_a0_b9_x0 = 0bin1 ELSE istrue_a0_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a0)] THEN istrue_a0_b9_x1 = 0bin1 ELSE istrue_a0_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a0)] THEN istrue_a0_b9_x2 = 0bin1 ELSE istrue_a0_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a0)] THEN istrue_a0_b9_x3 = 0bin1 ELSE istrue_a0_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a0)] THEN istrue_a0_b9_x4 = 0bin1 ELSE istrue_a0_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a0)] THEN istrue_a0_b9_x5 = 0bin1 ELSE istrue_a0_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a0)] THEN istrue_a0_b9_x6 = 0bin1 ELSE istrue_a0_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a0)] THEN istrue_a0_b9_x7 = 0bin1 ELSE istrue_a0_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a0)] THEN istrue_a0_b9_x8 = 0bin1 ELSE istrue_a0_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a0)] THEN istrue_a0_b9_x9 = 0bin1 ELSE istrue_a0_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a0)] THEN istrue_a0_b9_x10 = 0bin1 ELSE istrue_a0_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a0)] THEN istrue_a0_b9_x11 = 0bin1 ELSE istrue_a0_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a0)] THEN istrue_a0_b9_x12 = 0bin1 ELSE istrue_a0_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a0)] THEN istrue_a0_b9_x13 = 0bin1 ELSE istrue_a0_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a0)] THEN istrue_a0_b9_x14 = 0bin1 ELSE istrue_a0_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a0)] THEN istrue_a0_b9_x15 = 0bin1 ELSE istrue_a0_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b9 = BVPLUS(5, 0bin0000@istrue_a0_b9_x0, 0bin0000@istrue_a0_b9_x1, 0bin0000@istrue_a0_b9_x2, 0bin0000@istrue_a0_b9_x3, 0bin0000@istrue_a0_b9_x4, 0bin0000@istrue_a0_b9_x5, 0bin0000@istrue_a0_b9_x6, 0bin0000@istrue_a0_b9_x7, 0bin0000@istrue_a0_b9_x8, 0bin0000@istrue_a0_b9_x9, 0bin0000@istrue_a0_b9_x10, 0bin0000@istrue_a0_b9_x11, 0bin0000@istrue_a0_b9_x12, 0bin0000@istrue_a0_b9_x13, 0bin0000@istrue_a0_b9_x14, 0bin0000@istrue_a0_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a0)] THEN istrue_a0_b10_x0 = 0bin1 ELSE istrue_a0_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a0)] THEN istrue_a0_b10_x1 = 0bin1 ELSE istrue_a0_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a0)] THEN istrue_a0_b10_x2 = 0bin1 ELSE istrue_a0_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a0)] THEN istrue_a0_b10_x3 = 0bin1 ELSE istrue_a0_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a0)] THEN istrue_a0_b10_x4 = 0bin1 ELSE istrue_a0_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a0)] THEN istrue_a0_b10_x5 = 0bin1 ELSE istrue_a0_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a0)] THEN istrue_a0_b10_x6 = 0bin1 ELSE istrue_a0_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a0)] THEN istrue_a0_b10_x7 = 0bin1 ELSE istrue_a0_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a0)] THEN istrue_a0_b10_x8 = 0bin1 ELSE istrue_a0_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a0)] THEN istrue_a0_b10_x9 = 0bin1 ELSE istrue_a0_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a0)] THEN istrue_a0_b10_x10 = 0bin1 ELSE istrue_a0_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a0)] THEN istrue_a0_b10_x11 = 0bin1 ELSE istrue_a0_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a0)] THEN istrue_a0_b10_x12 = 0bin1 ELSE istrue_a0_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a0)] THEN istrue_a0_b10_x13 = 0bin1 ELSE istrue_a0_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a0)] THEN istrue_a0_b10_x14 = 0bin1 ELSE istrue_a0_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a0)] THEN istrue_a0_b10_x15 = 0bin1 ELSE istrue_a0_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b10 = BVPLUS(5, 0bin0000@istrue_a0_b10_x0, 0bin0000@istrue_a0_b10_x1, 0bin0000@istrue_a0_b10_x2, 0bin0000@istrue_a0_b10_x3, 0bin0000@istrue_a0_b10_x4, 0bin0000@istrue_a0_b10_x5, 0bin0000@istrue_a0_b10_x6, 0bin0000@istrue_a0_b10_x7, 0bin0000@istrue_a0_b10_x8, 0bin0000@istrue_a0_b10_x9, 0bin0000@istrue_a0_b10_x10, 0bin0000@istrue_a0_b10_x11, 0bin0000@istrue_a0_b10_x12, 0bin0000@istrue_a0_b10_x13, 0bin0000@istrue_a0_b10_x14, 0bin0000@istrue_a0_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a0)] THEN istrue_a0_b11_x0 = 0bin1 ELSE istrue_a0_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a0)] THEN istrue_a0_b11_x1 = 0bin1 ELSE istrue_a0_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a0)] THEN istrue_a0_b11_x2 = 0bin1 ELSE istrue_a0_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a0)] THEN istrue_a0_b11_x3 = 0bin1 ELSE istrue_a0_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a0)] THEN istrue_a0_b11_x4 = 0bin1 ELSE istrue_a0_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a0)] THEN istrue_a0_b11_x5 = 0bin1 ELSE istrue_a0_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a0)] THEN istrue_a0_b11_x6 = 0bin1 ELSE istrue_a0_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a0)] THEN istrue_a0_b11_x7 = 0bin1 ELSE istrue_a0_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a0)] THEN istrue_a0_b11_x8 = 0bin1 ELSE istrue_a0_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a0)] THEN istrue_a0_b11_x9 = 0bin1 ELSE istrue_a0_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a0)] THEN istrue_a0_b11_x10 = 0bin1 ELSE istrue_a0_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a0)] THEN istrue_a0_b11_x11 = 0bin1 ELSE istrue_a0_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a0)] THEN istrue_a0_b11_x12 = 0bin1 ELSE istrue_a0_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a0)] THEN istrue_a0_b11_x13 = 0bin1 ELSE istrue_a0_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a0)] THEN istrue_a0_b11_x14 = 0bin1 ELSE istrue_a0_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a0)] THEN istrue_a0_b11_x15 = 0bin1 ELSE istrue_a0_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b11 = BVPLUS(5, 0bin0000@istrue_a0_b11_x0, 0bin0000@istrue_a0_b11_x1, 0bin0000@istrue_a0_b11_x2, 0bin0000@istrue_a0_b11_x3, 0bin0000@istrue_a0_b11_x4, 0bin0000@istrue_a0_b11_x5, 0bin0000@istrue_a0_b11_x6, 0bin0000@istrue_a0_b11_x7, 0bin0000@istrue_a0_b11_x8, 0bin0000@istrue_a0_b11_x9, 0bin0000@istrue_a0_b11_x10, 0bin0000@istrue_a0_b11_x11, 0bin0000@istrue_a0_b11_x12, 0bin0000@istrue_a0_b11_x13, 0bin0000@istrue_a0_b11_x14, 0bin0000@istrue_a0_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a0)] THEN istrue_a0_b12_x0 = 0bin1 ELSE istrue_a0_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a0)] THEN istrue_a0_b12_x1 = 0bin1 ELSE istrue_a0_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a0)] THEN istrue_a0_b12_x2 = 0bin1 ELSE istrue_a0_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a0)] THEN istrue_a0_b12_x3 = 0bin1 ELSE istrue_a0_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a0)] THEN istrue_a0_b12_x4 = 0bin1 ELSE istrue_a0_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a0)] THEN istrue_a0_b12_x5 = 0bin1 ELSE istrue_a0_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a0)] THEN istrue_a0_b12_x6 = 0bin1 ELSE istrue_a0_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a0)] THEN istrue_a0_b12_x7 = 0bin1 ELSE istrue_a0_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a0)] THEN istrue_a0_b12_x8 = 0bin1 ELSE istrue_a0_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a0)] THEN istrue_a0_b12_x9 = 0bin1 ELSE istrue_a0_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a0)] THEN istrue_a0_b12_x10 = 0bin1 ELSE istrue_a0_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a0)] THEN istrue_a0_b12_x11 = 0bin1 ELSE istrue_a0_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a0)] THEN istrue_a0_b12_x12 = 0bin1 ELSE istrue_a0_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a0)] THEN istrue_a0_b12_x13 = 0bin1 ELSE istrue_a0_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a0)] THEN istrue_a0_b12_x14 = 0bin1 ELSE istrue_a0_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a0)] THEN istrue_a0_b12_x15 = 0bin1 ELSE istrue_a0_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b12 = BVPLUS(5, 0bin0000@istrue_a0_b12_x0, 0bin0000@istrue_a0_b12_x1, 0bin0000@istrue_a0_b12_x2, 0bin0000@istrue_a0_b12_x3, 0bin0000@istrue_a0_b12_x4, 0bin0000@istrue_a0_b12_x5, 0bin0000@istrue_a0_b12_x6, 0bin0000@istrue_a0_b12_x7, 0bin0000@istrue_a0_b12_x8, 0bin0000@istrue_a0_b12_x9, 0bin0000@istrue_a0_b12_x10, 0bin0000@istrue_a0_b12_x11, 0bin0000@istrue_a0_b12_x12, 0bin0000@istrue_a0_b12_x13, 0bin0000@istrue_a0_b12_x14, 0bin0000@istrue_a0_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a0)] THEN istrue_a0_b13_x0 = 0bin1 ELSE istrue_a0_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a0)] THEN istrue_a0_b13_x1 = 0bin1 ELSE istrue_a0_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a0)] THEN istrue_a0_b13_x2 = 0bin1 ELSE istrue_a0_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a0)] THEN istrue_a0_b13_x3 = 0bin1 ELSE istrue_a0_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a0)] THEN istrue_a0_b13_x4 = 0bin1 ELSE istrue_a0_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a0)] THEN istrue_a0_b13_x5 = 0bin1 ELSE istrue_a0_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a0)] THEN istrue_a0_b13_x6 = 0bin1 ELSE istrue_a0_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a0)] THEN istrue_a0_b13_x7 = 0bin1 ELSE istrue_a0_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a0)] THEN istrue_a0_b13_x8 = 0bin1 ELSE istrue_a0_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a0)] THEN istrue_a0_b13_x9 = 0bin1 ELSE istrue_a0_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a0)] THEN istrue_a0_b13_x10 = 0bin1 ELSE istrue_a0_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a0)] THEN istrue_a0_b13_x11 = 0bin1 ELSE istrue_a0_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a0)] THEN istrue_a0_b13_x12 = 0bin1 ELSE istrue_a0_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a0)] THEN istrue_a0_b13_x13 = 0bin1 ELSE istrue_a0_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a0)] THEN istrue_a0_b13_x14 = 0bin1 ELSE istrue_a0_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a0)] THEN istrue_a0_b13_x15 = 0bin1 ELSE istrue_a0_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b13 = BVPLUS(5, 0bin0000@istrue_a0_b13_x0, 0bin0000@istrue_a0_b13_x1, 0bin0000@istrue_a0_b13_x2, 0bin0000@istrue_a0_b13_x3, 0bin0000@istrue_a0_b13_x4, 0bin0000@istrue_a0_b13_x5, 0bin0000@istrue_a0_b13_x6, 0bin0000@istrue_a0_b13_x7, 0bin0000@istrue_a0_b13_x8, 0bin0000@istrue_a0_b13_x9, 0bin0000@istrue_a0_b13_x10, 0bin0000@istrue_a0_b13_x11, 0bin0000@istrue_a0_b13_x12, 0bin0000@istrue_a0_b13_x13, 0bin0000@istrue_a0_b13_x14, 0bin0000@istrue_a0_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a0)] THEN istrue_a0_b14_x0 = 0bin1 ELSE istrue_a0_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a0)] THEN istrue_a0_b14_x1 = 0bin1 ELSE istrue_a0_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a0)] THEN istrue_a0_b14_x2 = 0bin1 ELSE istrue_a0_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a0)] THEN istrue_a0_b14_x3 = 0bin1 ELSE istrue_a0_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a0)] THEN istrue_a0_b14_x4 = 0bin1 ELSE istrue_a0_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a0)] THEN istrue_a0_b14_x5 = 0bin1 ELSE istrue_a0_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a0)] THEN istrue_a0_b14_x6 = 0bin1 ELSE istrue_a0_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a0)] THEN istrue_a0_b14_x7 = 0bin1 ELSE istrue_a0_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a0)] THEN istrue_a0_b14_x8 = 0bin1 ELSE istrue_a0_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a0)] THEN istrue_a0_b14_x9 = 0bin1 ELSE istrue_a0_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a0)] THEN istrue_a0_b14_x10 = 0bin1 ELSE istrue_a0_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a0)] THEN istrue_a0_b14_x11 = 0bin1 ELSE istrue_a0_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a0)] THEN istrue_a0_b14_x12 = 0bin1 ELSE istrue_a0_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a0)] THEN istrue_a0_b14_x13 = 0bin1 ELSE istrue_a0_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a0)] THEN istrue_a0_b14_x14 = 0bin1 ELSE istrue_a0_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a0)] THEN istrue_a0_b14_x15 = 0bin1 ELSE istrue_a0_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b14 = BVPLUS(5, 0bin0000@istrue_a0_b14_x0, 0bin0000@istrue_a0_b14_x1, 0bin0000@istrue_a0_b14_x2, 0bin0000@istrue_a0_b14_x3, 0bin0000@istrue_a0_b14_x4, 0bin0000@istrue_a0_b14_x5, 0bin0000@istrue_a0_b14_x6, 0bin0000@istrue_a0_b14_x7, 0bin0000@istrue_a0_b14_x8, 0bin0000@istrue_a0_b14_x9, 0bin0000@istrue_a0_b14_x10, 0bin0000@istrue_a0_b14_x11, 0bin0000@istrue_a0_b14_x12, 0bin0000@istrue_a0_b14_x13, 0bin0000@istrue_a0_b14_x14, 0bin0000@istrue_a0_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a0)] THEN istrue_a0_b15_x0 = 0bin1 ELSE istrue_a0_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a0)] THEN istrue_a0_b15_x1 = 0bin1 ELSE istrue_a0_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a0)] THEN istrue_a0_b15_x2 = 0bin1 ELSE istrue_a0_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a0)] THEN istrue_a0_b15_x3 = 0bin1 ELSE istrue_a0_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a0)] THEN istrue_a0_b15_x4 = 0bin1 ELSE istrue_a0_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a0)] THEN istrue_a0_b15_x5 = 0bin1 ELSE istrue_a0_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a0)] THEN istrue_a0_b15_x6 = 0bin1 ELSE istrue_a0_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a0)] THEN istrue_a0_b15_x7 = 0bin1 ELSE istrue_a0_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a0)] THEN istrue_a0_b15_x8 = 0bin1 ELSE istrue_a0_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a0)] THEN istrue_a0_b15_x9 = 0bin1 ELSE istrue_a0_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a0)] THEN istrue_a0_b15_x10 = 0bin1 ELSE istrue_a0_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a0)] THEN istrue_a0_b15_x11 = 0bin1 ELSE istrue_a0_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a0)] THEN istrue_a0_b15_x12 = 0bin1 ELSE istrue_a0_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a0)] THEN istrue_a0_b15_x13 = 0bin1 ELSE istrue_a0_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a0)] THEN istrue_a0_b15_x14 = 0bin1 ELSE istrue_a0_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a0)] THEN istrue_a0_b15_x15 = 0bin1 ELSE istrue_a0_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a0_b15 = BVPLUS(5, 0bin0000@istrue_a0_b15_x0, 0bin0000@istrue_a0_b15_x1, 0bin0000@istrue_a0_b15_x2, 0bin0000@istrue_a0_b15_x3, 0bin0000@istrue_a0_b15_x4, 0bin0000@istrue_a0_b15_x5, 0bin0000@istrue_a0_b15_x6, 0bin0000@istrue_a0_b15_x7, 0bin0000@istrue_a0_b15_x8, 0bin0000@istrue_a0_b15_x9, 0bin0000@istrue_a0_b15_x10, 0bin0000@istrue_a0_b15_x11, 0bin0000@istrue_a0_b15_x12, 0bin0000@istrue_a0_b15_x13, 0bin0000@istrue_a0_b15_x14, 0bin0000@istrue_a0_b15_x15));
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a1)] THEN istrue_a1_b0_x0 = 0bin1 ELSE istrue_a1_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a1)] THEN istrue_a1_b0_x1 = 0bin1 ELSE istrue_a1_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a1)] THEN istrue_a1_b0_x2 = 0bin1 ELSE istrue_a1_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a1)] THEN istrue_a1_b0_x3 = 0bin1 ELSE istrue_a1_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a1)] THEN istrue_a1_b0_x4 = 0bin1 ELSE istrue_a1_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a1)] THEN istrue_a1_b0_x5 = 0bin1 ELSE istrue_a1_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a1)] THEN istrue_a1_b0_x6 = 0bin1 ELSE istrue_a1_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a1)] THEN istrue_a1_b0_x7 = 0bin1 ELSE istrue_a1_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a1)] THEN istrue_a1_b0_x8 = 0bin1 ELSE istrue_a1_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a1)] THEN istrue_a1_b0_x9 = 0bin1 ELSE istrue_a1_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a1)] THEN istrue_a1_b0_x10 = 0bin1 ELSE istrue_a1_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a1)] THEN istrue_a1_b0_x11 = 0bin1 ELSE istrue_a1_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a1)] THEN istrue_a1_b0_x12 = 0bin1 ELSE istrue_a1_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a1)] THEN istrue_a1_b0_x13 = 0bin1 ELSE istrue_a1_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a1)] THEN istrue_a1_b0_x14 = 0bin1 ELSE istrue_a1_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a1)] THEN istrue_a1_b0_x15 = 0bin1 ELSE istrue_a1_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b0 = BVPLUS(5, 0bin0000@istrue_a1_b0_x0, 0bin0000@istrue_a1_b0_x1, 0bin0000@istrue_a1_b0_x2, 0bin0000@istrue_a1_b0_x3, 0bin0000@istrue_a1_b0_x4, 0bin0000@istrue_a1_b0_x5, 0bin0000@istrue_a1_b0_x6, 0bin0000@istrue_a1_b0_x7, 0bin0000@istrue_a1_b0_x8, 0bin0000@istrue_a1_b0_x9, 0bin0000@istrue_a1_b0_x10, 0bin0000@istrue_a1_b0_x11, 0bin0000@istrue_a1_b0_x12, 0bin0000@istrue_a1_b0_x13, 0bin0000@istrue_a1_b0_x14, 0bin0000@istrue_a1_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a1)] THEN istrue_a1_b1_x0 = 0bin1 ELSE istrue_a1_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a1)] THEN istrue_a1_b1_x1 = 0bin1 ELSE istrue_a1_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a1)] THEN istrue_a1_b1_x2 = 0bin1 ELSE istrue_a1_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a1)] THEN istrue_a1_b1_x3 = 0bin1 ELSE istrue_a1_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a1)] THEN istrue_a1_b1_x4 = 0bin1 ELSE istrue_a1_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a1)] THEN istrue_a1_b1_x5 = 0bin1 ELSE istrue_a1_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a1)] THEN istrue_a1_b1_x6 = 0bin1 ELSE istrue_a1_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a1)] THEN istrue_a1_b1_x7 = 0bin1 ELSE istrue_a1_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a1)] THEN istrue_a1_b1_x8 = 0bin1 ELSE istrue_a1_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a1)] THEN istrue_a1_b1_x9 = 0bin1 ELSE istrue_a1_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a1)] THEN istrue_a1_b1_x10 = 0bin1 ELSE istrue_a1_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a1)] THEN istrue_a1_b1_x11 = 0bin1 ELSE istrue_a1_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a1)] THEN istrue_a1_b1_x12 = 0bin1 ELSE istrue_a1_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a1)] THEN istrue_a1_b1_x13 = 0bin1 ELSE istrue_a1_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a1)] THEN istrue_a1_b1_x14 = 0bin1 ELSE istrue_a1_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a1)] THEN istrue_a1_b1_x15 = 0bin1 ELSE istrue_a1_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b1 = BVPLUS(5, 0bin0000@istrue_a1_b1_x0, 0bin0000@istrue_a1_b1_x1, 0bin0000@istrue_a1_b1_x2, 0bin0000@istrue_a1_b1_x3, 0bin0000@istrue_a1_b1_x4, 0bin0000@istrue_a1_b1_x5, 0bin0000@istrue_a1_b1_x6, 0bin0000@istrue_a1_b1_x7, 0bin0000@istrue_a1_b1_x8, 0bin0000@istrue_a1_b1_x9, 0bin0000@istrue_a1_b1_x10, 0bin0000@istrue_a1_b1_x11, 0bin0000@istrue_a1_b1_x12, 0bin0000@istrue_a1_b1_x13, 0bin0000@istrue_a1_b1_x14, 0bin0000@istrue_a1_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a1)] THEN istrue_a1_b2_x0 = 0bin1 ELSE istrue_a1_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a1)] THEN istrue_a1_b2_x1 = 0bin1 ELSE istrue_a1_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a1)] THEN istrue_a1_b2_x2 = 0bin1 ELSE istrue_a1_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a1)] THEN istrue_a1_b2_x3 = 0bin1 ELSE istrue_a1_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a1)] THEN istrue_a1_b2_x4 = 0bin1 ELSE istrue_a1_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a1)] THEN istrue_a1_b2_x5 = 0bin1 ELSE istrue_a1_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a1)] THEN istrue_a1_b2_x6 = 0bin1 ELSE istrue_a1_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a1)] THEN istrue_a1_b2_x7 = 0bin1 ELSE istrue_a1_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a1)] THEN istrue_a1_b2_x8 = 0bin1 ELSE istrue_a1_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a1)] THEN istrue_a1_b2_x9 = 0bin1 ELSE istrue_a1_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a1)] THEN istrue_a1_b2_x10 = 0bin1 ELSE istrue_a1_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a1)] THEN istrue_a1_b2_x11 = 0bin1 ELSE istrue_a1_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a1)] THEN istrue_a1_b2_x12 = 0bin1 ELSE istrue_a1_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a1)] THEN istrue_a1_b2_x13 = 0bin1 ELSE istrue_a1_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a1)] THEN istrue_a1_b2_x14 = 0bin1 ELSE istrue_a1_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a1)] THEN istrue_a1_b2_x15 = 0bin1 ELSE istrue_a1_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b2 = BVPLUS(5, 0bin0000@istrue_a1_b2_x0, 0bin0000@istrue_a1_b2_x1, 0bin0000@istrue_a1_b2_x2, 0bin0000@istrue_a1_b2_x3, 0bin0000@istrue_a1_b2_x4, 0bin0000@istrue_a1_b2_x5, 0bin0000@istrue_a1_b2_x6, 0bin0000@istrue_a1_b2_x7, 0bin0000@istrue_a1_b2_x8, 0bin0000@istrue_a1_b2_x9, 0bin0000@istrue_a1_b2_x10, 0bin0000@istrue_a1_b2_x11, 0bin0000@istrue_a1_b2_x12, 0bin0000@istrue_a1_b2_x13, 0bin0000@istrue_a1_b2_x14, 0bin0000@istrue_a1_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a1)] THEN istrue_a1_b3_x0 = 0bin1 ELSE istrue_a1_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a1)] THEN istrue_a1_b3_x1 = 0bin1 ELSE istrue_a1_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a1)] THEN istrue_a1_b3_x2 = 0bin1 ELSE istrue_a1_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a1)] THEN istrue_a1_b3_x3 = 0bin1 ELSE istrue_a1_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a1)] THEN istrue_a1_b3_x4 = 0bin1 ELSE istrue_a1_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a1)] THEN istrue_a1_b3_x5 = 0bin1 ELSE istrue_a1_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a1)] THEN istrue_a1_b3_x6 = 0bin1 ELSE istrue_a1_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a1)] THEN istrue_a1_b3_x7 = 0bin1 ELSE istrue_a1_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a1)] THEN istrue_a1_b3_x8 = 0bin1 ELSE istrue_a1_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a1)] THEN istrue_a1_b3_x9 = 0bin1 ELSE istrue_a1_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a1)] THEN istrue_a1_b3_x10 = 0bin1 ELSE istrue_a1_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a1)] THEN istrue_a1_b3_x11 = 0bin1 ELSE istrue_a1_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a1)] THEN istrue_a1_b3_x12 = 0bin1 ELSE istrue_a1_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a1)] THEN istrue_a1_b3_x13 = 0bin1 ELSE istrue_a1_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a1)] THEN istrue_a1_b3_x14 = 0bin1 ELSE istrue_a1_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a1)] THEN istrue_a1_b3_x15 = 0bin1 ELSE istrue_a1_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b3 = BVPLUS(5, 0bin0000@istrue_a1_b3_x0, 0bin0000@istrue_a1_b3_x1, 0bin0000@istrue_a1_b3_x2, 0bin0000@istrue_a1_b3_x3, 0bin0000@istrue_a1_b3_x4, 0bin0000@istrue_a1_b3_x5, 0bin0000@istrue_a1_b3_x6, 0bin0000@istrue_a1_b3_x7, 0bin0000@istrue_a1_b3_x8, 0bin0000@istrue_a1_b3_x9, 0bin0000@istrue_a1_b3_x10, 0bin0000@istrue_a1_b3_x11, 0bin0000@istrue_a1_b3_x12, 0bin0000@istrue_a1_b3_x13, 0bin0000@istrue_a1_b3_x14, 0bin0000@istrue_a1_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a1)] THEN istrue_a1_b4_x0 = 0bin1 ELSE istrue_a1_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a1)] THEN istrue_a1_b4_x1 = 0bin1 ELSE istrue_a1_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a1)] THEN istrue_a1_b4_x2 = 0bin1 ELSE istrue_a1_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a1)] THEN istrue_a1_b4_x3 = 0bin1 ELSE istrue_a1_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a1)] THEN istrue_a1_b4_x4 = 0bin1 ELSE istrue_a1_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a1)] THEN istrue_a1_b4_x5 = 0bin1 ELSE istrue_a1_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a1)] THEN istrue_a1_b4_x6 = 0bin1 ELSE istrue_a1_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a1)] THEN istrue_a1_b4_x7 = 0bin1 ELSE istrue_a1_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a1)] THEN istrue_a1_b4_x8 = 0bin1 ELSE istrue_a1_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a1)] THEN istrue_a1_b4_x9 = 0bin1 ELSE istrue_a1_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a1)] THEN istrue_a1_b4_x10 = 0bin1 ELSE istrue_a1_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a1)] THEN istrue_a1_b4_x11 = 0bin1 ELSE istrue_a1_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a1)] THEN istrue_a1_b4_x12 = 0bin1 ELSE istrue_a1_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a1)] THEN istrue_a1_b4_x13 = 0bin1 ELSE istrue_a1_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a1)] THEN istrue_a1_b4_x14 = 0bin1 ELSE istrue_a1_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a1)] THEN istrue_a1_b4_x15 = 0bin1 ELSE istrue_a1_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b4 = BVPLUS(5, 0bin0000@istrue_a1_b4_x0, 0bin0000@istrue_a1_b4_x1, 0bin0000@istrue_a1_b4_x2, 0bin0000@istrue_a1_b4_x3, 0bin0000@istrue_a1_b4_x4, 0bin0000@istrue_a1_b4_x5, 0bin0000@istrue_a1_b4_x6, 0bin0000@istrue_a1_b4_x7, 0bin0000@istrue_a1_b4_x8, 0bin0000@istrue_a1_b4_x9, 0bin0000@istrue_a1_b4_x10, 0bin0000@istrue_a1_b4_x11, 0bin0000@istrue_a1_b4_x12, 0bin0000@istrue_a1_b4_x13, 0bin0000@istrue_a1_b4_x14, 0bin0000@istrue_a1_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a1)] THEN istrue_a1_b5_x0 = 0bin1 ELSE istrue_a1_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a1)] THEN istrue_a1_b5_x1 = 0bin1 ELSE istrue_a1_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a1)] THEN istrue_a1_b5_x2 = 0bin1 ELSE istrue_a1_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a1)] THEN istrue_a1_b5_x3 = 0bin1 ELSE istrue_a1_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a1)] THEN istrue_a1_b5_x4 = 0bin1 ELSE istrue_a1_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a1)] THEN istrue_a1_b5_x5 = 0bin1 ELSE istrue_a1_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a1)] THEN istrue_a1_b5_x6 = 0bin1 ELSE istrue_a1_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a1)] THEN istrue_a1_b5_x7 = 0bin1 ELSE istrue_a1_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a1)] THEN istrue_a1_b5_x8 = 0bin1 ELSE istrue_a1_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a1)] THEN istrue_a1_b5_x9 = 0bin1 ELSE istrue_a1_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a1)] THEN istrue_a1_b5_x10 = 0bin1 ELSE istrue_a1_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a1)] THEN istrue_a1_b5_x11 = 0bin1 ELSE istrue_a1_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a1)] THEN istrue_a1_b5_x12 = 0bin1 ELSE istrue_a1_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a1)] THEN istrue_a1_b5_x13 = 0bin1 ELSE istrue_a1_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a1)] THEN istrue_a1_b5_x14 = 0bin1 ELSE istrue_a1_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a1)] THEN istrue_a1_b5_x15 = 0bin1 ELSE istrue_a1_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b5 = BVPLUS(5, 0bin0000@istrue_a1_b5_x0, 0bin0000@istrue_a1_b5_x1, 0bin0000@istrue_a1_b5_x2, 0bin0000@istrue_a1_b5_x3, 0bin0000@istrue_a1_b5_x4, 0bin0000@istrue_a1_b5_x5, 0bin0000@istrue_a1_b5_x6, 0bin0000@istrue_a1_b5_x7, 0bin0000@istrue_a1_b5_x8, 0bin0000@istrue_a1_b5_x9, 0bin0000@istrue_a1_b5_x10, 0bin0000@istrue_a1_b5_x11, 0bin0000@istrue_a1_b5_x12, 0bin0000@istrue_a1_b5_x13, 0bin0000@istrue_a1_b5_x14, 0bin0000@istrue_a1_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a1)] THEN istrue_a1_b6_x0 = 0bin1 ELSE istrue_a1_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a1)] THEN istrue_a1_b6_x1 = 0bin1 ELSE istrue_a1_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a1)] THEN istrue_a1_b6_x2 = 0bin1 ELSE istrue_a1_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a1)] THEN istrue_a1_b6_x3 = 0bin1 ELSE istrue_a1_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a1)] THEN istrue_a1_b6_x4 = 0bin1 ELSE istrue_a1_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a1)] THEN istrue_a1_b6_x5 = 0bin1 ELSE istrue_a1_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a1)] THEN istrue_a1_b6_x6 = 0bin1 ELSE istrue_a1_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a1)] THEN istrue_a1_b6_x7 = 0bin1 ELSE istrue_a1_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a1)] THEN istrue_a1_b6_x8 = 0bin1 ELSE istrue_a1_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a1)] THEN istrue_a1_b6_x9 = 0bin1 ELSE istrue_a1_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a1)] THEN istrue_a1_b6_x10 = 0bin1 ELSE istrue_a1_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a1)] THEN istrue_a1_b6_x11 = 0bin1 ELSE istrue_a1_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a1)] THEN istrue_a1_b6_x12 = 0bin1 ELSE istrue_a1_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a1)] THEN istrue_a1_b6_x13 = 0bin1 ELSE istrue_a1_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a1)] THEN istrue_a1_b6_x14 = 0bin1 ELSE istrue_a1_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a1)] THEN istrue_a1_b6_x15 = 0bin1 ELSE istrue_a1_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b6 = BVPLUS(5, 0bin0000@istrue_a1_b6_x0, 0bin0000@istrue_a1_b6_x1, 0bin0000@istrue_a1_b6_x2, 0bin0000@istrue_a1_b6_x3, 0bin0000@istrue_a1_b6_x4, 0bin0000@istrue_a1_b6_x5, 0bin0000@istrue_a1_b6_x6, 0bin0000@istrue_a1_b6_x7, 0bin0000@istrue_a1_b6_x8, 0bin0000@istrue_a1_b6_x9, 0bin0000@istrue_a1_b6_x10, 0bin0000@istrue_a1_b6_x11, 0bin0000@istrue_a1_b6_x12, 0bin0000@istrue_a1_b6_x13, 0bin0000@istrue_a1_b6_x14, 0bin0000@istrue_a1_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a1)] THEN istrue_a1_b7_x0 = 0bin1 ELSE istrue_a1_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a1)] THEN istrue_a1_b7_x1 = 0bin1 ELSE istrue_a1_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a1)] THEN istrue_a1_b7_x2 = 0bin1 ELSE istrue_a1_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a1)] THEN istrue_a1_b7_x3 = 0bin1 ELSE istrue_a1_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a1)] THEN istrue_a1_b7_x4 = 0bin1 ELSE istrue_a1_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a1)] THEN istrue_a1_b7_x5 = 0bin1 ELSE istrue_a1_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a1)] THEN istrue_a1_b7_x6 = 0bin1 ELSE istrue_a1_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a1)] THEN istrue_a1_b7_x7 = 0bin1 ELSE istrue_a1_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a1)] THEN istrue_a1_b7_x8 = 0bin1 ELSE istrue_a1_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a1)] THEN istrue_a1_b7_x9 = 0bin1 ELSE istrue_a1_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a1)] THEN istrue_a1_b7_x10 = 0bin1 ELSE istrue_a1_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a1)] THEN istrue_a1_b7_x11 = 0bin1 ELSE istrue_a1_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a1)] THEN istrue_a1_b7_x12 = 0bin1 ELSE istrue_a1_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a1)] THEN istrue_a1_b7_x13 = 0bin1 ELSE istrue_a1_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a1)] THEN istrue_a1_b7_x14 = 0bin1 ELSE istrue_a1_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a1)] THEN istrue_a1_b7_x15 = 0bin1 ELSE istrue_a1_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b7 = BVPLUS(5, 0bin0000@istrue_a1_b7_x0, 0bin0000@istrue_a1_b7_x1, 0bin0000@istrue_a1_b7_x2, 0bin0000@istrue_a1_b7_x3, 0bin0000@istrue_a1_b7_x4, 0bin0000@istrue_a1_b7_x5, 0bin0000@istrue_a1_b7_x6, 0bin0000@istrue_a1_b7_x7, 0bin0000@istrue_a1_b7_x8, 0bin0000@istrue_a1_b7_x9, 0bin0000@istrue_a1_b7_x10, 0bin0000@istrue_a1_b7_x11, 0bin0000@istrue_a1_b7_x12, 0bin0000@istrue_a1_b7_x13, 0bin0000@istrue_a1_b7_x14, 0bin0000@istrue_a1_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a1)] THEN istrue_a1_b8_x0 = 0bin1 ELSE istrue_a1_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a1)] THEN istrue_a1_b8_x1 = 0bin1 ELSE istrue_a1_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a1)] THEN istrue_a1_b8_x2 = 0bin1 ELSE istrue_a1_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a1)] THEN istrue_a1_b8_x3 = 0bin1 ELSE istrue_a1_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a1)] THEN istrue_a1_b8_x4 = 0bin1 ELSE istrue_a1_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a1)] THEN istrue_a1_b8_x5 = 0bin1 ELSE istrue_a1_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a1)] THEN istrue_a1_b8_x6 = 0bin1 ELSE istrue_a1_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a1)] THEN istrue_a1_b8_x7 = 0bin1 ELSE istrue_a1_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a1)] THEN istrue_a1_b8_x8 = 0bin1 ELSE istrue_a1_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a1)] THEN istrue_a1_b8_x9 = 0bin1 ELSE istrue_a1_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a1)] THEN istrue_a1_b8_x10 = 0bin1 ELSE istrue_a1_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a1)] THEN istrue_a1_b8_x11 = 0bin1 ELSE istrue_a1_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a1)] THEN istrue_a1_b8_x12 = 0bin1 ELSE istrue_a1_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a1)] THEN istrue_a1_b8_x13 = 0bin1 ELSE istrue_a1_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a1)] THEN istrue_a1_b8_x14 = 0bin1 ELSE istrue_a1_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a1)] THEN istrue_a1_b8_x15 = 0bin1 ELSE istrue_a1_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b8 = BVPLUS(5, 0bin0000@istrue_a1_b8_x0, 0bin0000@istrue_a1_b8_x1, 0bin0000@istrue_a1_b8_x2, 0bin0000@istrue_a1_b8_x3, 0bin0000@istrue_a1_b8_x4, 0bin0000@istrue_a1_b8_x5, 0bin0000@istrue_a1_b8_x6, 0bin0000@istrue_a1_b8_x7, 0bin0000@istrue_a1_b8_x8, 0bin0000@istrue_a1_b8_x9, 0bin0000@istrue_a1_b8_x10, 0bin0000@istrue_a1_b8_x11, 0bin0000@istrue_a1_b8_x12, 0bin0000@istrue_a1_b8_x13, 0bin0000@istrue_a1_b8_x14, 0bin0000@istrue_a1_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a1)] THEN istrue_a1_b9_x0 = 0bin1 ELSE istrue_a1_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a1)] THEN istrue_a1_b9_x1 = 0bin1 ELSE istrue_a1_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a1)] THEN istrue_a1_b9_x2 = 0bin1 ELSE istrue_a1_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a1)] THEN istrue_a1_b9_x3 = 0bin1 ELSE istrue_a1_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a1)] THEN istrue_a1_b9_x4 = 0bin1 ELSE istrue_a1_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a1)] THEN istrue_a1_b9_x5 = 0bin1 ELSE istrue_a1_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a1)] THEN istrue_a1_b9_x6 = 0bin1 ELSE istrue_a1_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a1)] THEN istrue_a1_b9_x7 = 0bin1 ELSE istrue_a1_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a1)] THEN istrue_a1_b9_x8 = 0bin1 ELSE istrue_a1_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a1)] THEN istrue_a1_b9_x9 = 0bin1 ELSE istrue_a1_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a1)] THEN istrue_a1_b9_x10 = 0bin1 ELSE istrue_a1_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a1)] THEN istrue_a1_b9_x11 = 0bin1 ELSE istrue_a1_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a1)] THEN istrue_a1_b9_x12 = 0bin1 ELSE istrue_a1_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a1)] THEN istrue_a1_b9_x13 = 0bin1 ELSE istrue_a1_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a1)] THEN istrue_a1_b9_x14 = 0bin1 ELSE istrue_a1_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a1)] THEN istrue_a1_b9_x15 = 0bin1 ELSE istrue_a1_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b9 = BVPLUS(5, 0bin0000@istrue_a1_b9_x0, 0bin0000@istrue_a1_b9_x1, 0bin0000@istrue_a1_b9_x2, 0bin0000@istrue_a1_b9_x3, 0bin0000@istrue_a1_b9_x4, 0bin0000@istrue_a1_b9_x5, 0bin0000@istrue_a1_b9_x6, 0bin0000@istrue_a1_b9_x7, 0bin0000@istrue_a1_b9_x8, 0bin0000@istrue_a1_b9_x9, 0bin0000@istrue_a1_b9_x10, 0bin0000@istrue_a1_b9_x11, 0bin0000@istrue_a1_b9_x12, 0bin0000@istrue_a1_b9_x13, 0bin0000@istrue_a1_b9_x14, 0bin0000@istrue_a1_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a1)] THEN istrue_a1_b10_x0 = 0bin1 ELSE istrue_a1_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a1)] THEN istrue_a1_b10_x1 = 0bin1 ELSE istrue_a1_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a1)] THEN istrue_a1_b10_x2 = 0bin1 ELSE istrue_a1_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a1)] THEN istrue_a1_b10_x3 = 0bin1 ELSE istrue_a1_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a1)] THEN istrue_a1_b10_x4 = 0bin1 ELSE istrue_a1_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a1)] THEN istrue_a1_b10_x5 = 0bin1 ELSE istrue_a1_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a1)] THEN istrue_a1_b10_x6 = 0bin1 ELSE istrue_a1_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a1)] THEN istrue_a1_b10_x7 = 0bin1 ELSE istrue_a1_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a1)] THEN istrue_a1_b10_x8 = 0bin1 ELSE istrue_a1_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a1)] THEN istrue_a1_b10_x9 = 0bin1 ELSE istrue_a1_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a1)] THEN istrue_a1_b10_x10 = 0bin1 ELSE istrue_a1_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a1)] THEN istrue_a1_b10_x11 = 0bin1 ELSE istrue_a1_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a1)] THEN istrue_a1_b10_x12 = 0bin1 ELSE istrue_a1_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a1)] THEN istrue_a1_b10_x13 = 0bin1 ELSE istrue_a1_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a1)] THEN istrue_a1_b10_x14 = 0bin1 ELSE istrue_a1_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a1)] THEN istrue_a1_b10_x15 = 0bin1 ELSE istrue_a1_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b10 = BVPLUS(5, 0bin0000@istrue_a1_b10_x0, 0bin0000@istrue_a1_b10_x1, 0bin0000@istrue_a1_b10_x2, 0bin0000@istrue_a1_b10_x3, 0bin0000@istrue_a1_b10_x4, 0bin0000@istrue_a1_b10_x5, 0bin0000@istrue_a1_b10_x6, 0bin0000@istrue_a1_b10_x7, 0bin0000@istrue_a1_b10_x8, 0bin0000@istrue_a1_b10_x9, 0bin0000@istrue_a1_b10_x10, 0bin0000@istrue_a1_b10_x11, 0bin0000@istrue_a1_b10_x12, 0bin0000@istrue_a1_b10_x13, 0bin0000@istrue_a1_b10_x14, 0bin0000@istrue_a1_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a1)] THEN istrue_a1_b11_x0 = 0bin1 ELSE istrue_a1_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a1)] THEN istrue_a1_b11_x1 = 0bin1 ELSE istrue_a1_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a1)] THEN istrue_a1_b11_x2 = 0bin1 ELSE istrue_a1_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a1)] THEN istrue_a1_b11_x3 = 0bin1 ELSE istrue_a1_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a1)] THEN istrue_a1_b11_x4 = 0bin1 ELSE istrue_a1_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a1)] THEN istrue_a1_b11_x5 = 0bin1 ELSE istrue_a1_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a1)] THEN istrue_a1_b11_x6 = 0bin1 ELSE istrue_a1_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a1)] THEN istrue_a1_b11_x7 = 0bin1 ELSE istrue_a1_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a1)] THEN istrue_a1_b11_x8 = 0bin1 ELSE istrue_a1_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a1)] THEN istrue_a1_b11_x9 = 0bin1 ELSE istrue_a1_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a1)] THEN istrue_a1_b11_x10 = 0bin1 ELSE istrue_a1_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a1)] THEN istrue_a1_b11_x11 = 0bin1 ELSE istrue_a1_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a1)] THEN istrue_a1_b11_x12 = 0bin1 ELSE istrue_a1_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a1)] THEN istrue_a1_b11_x13 = 0bin1 ELSE istrue_a1_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a1)] THEN istrue_a1_b11_x14 = 0bin1 ELSE istrue_a1_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a1)] THEN istrue_a1_b11_x15 = 0bin1 ELSE istrue_a1_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b11 = BVPLUS(5, 0bin0000@istrue_a1_b11_x0, 0bin0000@istrue_a1_b11_x1, 0bin0000@istrue_a1_b11_x2, 0bin0000@istrue_a1_b11_x3, 0bin0000@istrue_a1_b11_x4, 0bin0000@istrue_a1_b11_x5, 0bin0000@istrue_a1_b11_x6, 0bin0000@istrue_a1_b11_x7, 0bin0000@istrue_a1_b11_x8, 0bin0000@istrue_a1_b11_x9, 0bin0000@istrue_a1_b11_x10, 0bin0000@istrue_a1_b11_x11, 0bin0000@istrue_a1_b11_x12, 0bin0000@istrue_a1_b11_x13, 0bin0000@istrue_a1_b11_x14, 0bin0000@istrue_a1_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a1)] THEN istrue_a1_b12_x0 = 0bin1 ELSE istrue_a1_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a1)] THEN istrue_a1_b12_x1 = 0bin1 ELSE istrue_a1_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a1)] THEN istrue_a1_b12_x2 = 0bin1 ELSE istrue_a1_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a1)] THEN istrue_a1_b12_x3 = 0bin1 ELSE istrue_a1_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a1)] THEN istrue_a1_b12_x4 = 0bin1 ELSE istrue_a1_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a1)] THEN istrue_a1_b12_x5 = 0bin1 ELSE istrue_a1_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a1)] THEN istrue_a1_b12_x6 = 0bin1 ELSE istrue_a1_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a1)] THEN istrue_a1_b12_x7 = 0bin1 ELSE istrue_a1_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a1)] THEN istrue_a1_b12_x8 = 0bin1 ELSE istrue_a1_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a1)] THEN istrue_a1_b12_x9 = 0bin1 ELSE istrue_a1_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a1)] THEN istrue_a1_b12_x10 = 0bin1 ELSE istrue_a1_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a1)] THEN istrue_a1_b12_x11 = 0bin1 ELSE istrue_a1_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a1)] THEN istrue_a1_b12_x12 = 0bin1 ELSE istrue_a1_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a1)] THEN istrue_a1_b12_x13 = 0bin1 ELSE istrue_a1_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a1)] THEN istrue_a1_b12_x14 = 0bin1 ELSE istrue_a1_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a1)] THEN istrue_a1_b12_x15 = 0bin1 ELSE istrue_a1_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b12 = BVPLUS(5, 0bin0000@istrue_a1_b12_x0, 0bin0000@istrue_a1_b12_x1, 0bin0000@istrue_a1_b12_x2, 0bin0000@istrue_a1_b12_x3, 0bin0000@istrue_a1_b12_x4, 0bin0000@istrue_a1_b12_x5, 0bin0000@istrue_a1_b12_x6, 0bin0000@istrue_a1_b12_x7, 0bin0000@istrue_a1_b12_x8, 0bin0000@istrue_a1_b12_x9, 0bin0000@istrue_a1_b12_x10, 0bin0000@istrue_a1_b12_x11, 0bin0000@istrue_a1_b12_x12, 0bin0000@istrue_a1_b12_x13, 0bin0000@istrue_a1_b12_x14, 0bin0000@istrue_a1_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a1)] THEN istrue_a1_b13_x0 = 0bin1 ELSE istrue_a1_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a1)] THEN istrue_a1_b13_x1 = 0bin1 ELSE istrue_a1_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a1)] THEN istrue_a1_b13_x2 = 0bin1 ELSE istrue_a1_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a1)] THEN istrue_a1_b13_x3 = 0bin1 ELSE istrue_a1_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a1)] THEN istrue_a1_b13_x4 = 0bin1 ELSE istrue_a1_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a1)] THEN istrue_a1_b13_x5 = 0bin1 ELSE istrue_a1_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a1)] THEN istrue_a1_b13_x6 = 0bin1 ELSE istrue_a1_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a1)] THEN istrue_a1_b13_x7 = 0bin1 ELSE istrue_a1_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a1)] THEN istrue_a1_b13_x8 = 0bin1 ELSE istrue_a1_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a1)] THEN istrue_a1_b13_x9 = 0bin1 ELSE istrue_a1_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a1)] THEN istrue_a1_b13_x10 = 0bin1 ELSE istrue_a1_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a1)] THEN istrue_a1_b13_x11 = 0bin1 ELSE istrue_a1_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a1)] THEN istrue_a1_b13_x12 = 0bin1 ELSE istrue_a1_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a1)] THEN istrue_a1_b13_x13 = 0bin1 ELSE istrue_a1_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a1)] THEN istrue_a1_b13_x14 = 0bin1 ELSE istrue_a1_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a1)] THEN istrue_a1_b13_x15 = 0bin1 ELSE istrue_a1_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b13 = BVPLUS(5, 0bin0000@istrue_a1_b13_x0, 0bin0000@istrue_a1_b13_x1, 0bin0000@istrue_a1_b13_x2, 0bin0000@istrue_a1_b13_x3, 0bin0000@istrue_a1_b13_x4, 0bin0000@istrue_a1_b13_x5, 0bin0000@istrue_a1_b13_x6, 0bin0000@istrue_a1_b13_x7, 0bin0000@istrue_a1_b13_x8, 0bin0000@istrue_a1_b13_x9, 0bin0000@istrue_a1_b13_x10, 0bin0000@istrue_a1_b13_x11, 0bin0000@istrue_a1_b13_x12, 0bin0000@istrue_a1_b13_x13, 0bin0000@istrue_a1_b13_x14, 0bin0000@istrue_a1_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a1)] THEN istrue_a1_b14_x0 = 0bin1 ELSE istrue_a1_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a1)] THEN istrue_a1_b14_x1 = 0bin1 ELSE istrue_a1_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a1)] THEN istrue_a1_b14_x2 = 0bin1 ELSE istrue_a1_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a1)] THEN istrue_a1_b14_x3 = 0bin1 ELSE istrue_a1_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a1)] THEN istrue_a1_b14_x4 = 0bin1 ELSE istrue_a1_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a1)] THEN istrue_a1_b14_x5 = 0bin1 ELSE istrue_a1_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a1)] THEN istrue_a1_b14_x6 = 0bin1 ELSE istrue_a1_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a1)] THEN istrue_a1_b14_x7 = 0bin1 ELSE istrue_a1_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a1)] THEN istrue_a1_b14_x8 = 0bin1 ELSE istrue_a1_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a1)] THEN istrue_a1_b14_x9 = 0bin1 ELSE istrue_a1_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a1)] THEN istrue_a1_b14_x10 = 0bin1 ELSE istrue_a1_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a1)] THEN istrue_a1_b14_x11 = 0bin1 ELSE istrue_a1_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a1)] THEN istrue_a1_b14_x12 = 0bin1 ELSE istrue_a1_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a1)] THEN istrue_a1_b14_x13 = 0bin1 ELSE istrue_a1_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a1)] THEN istrue_a1_b14_x14 = 0bin1 ELSE istrue_a1_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a1)] THEN istrue_a1_b14_x15 = 0bin1 ELSE istrue_a1_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b14 = BVPLUS(5, 0bin0000@istrue_a1_b14_x0, 0bin0000@istrue_a1_b14_x1, 0bin0000@istrue_a1_b14_x2, 0bin0000@istrue_a1_b14_x3, 0bin0000@istrue_a1_b14_x4, 0bin0000@istrue_a1_b14_x5, 0bin0000@istrue_a1_b14_x6, 0bin0000@istrue_a1_b14_x7, 0bin0000@istrue_a1_b14_x8, 0bin0000@istrue_a1_b14_x9, 0bin0000@istrue_a1_b14_x10, 0bin0000@istrue_a1_b14_x11, 0bin0000@istrue_a1_b14_x12, 0bin0000@istrue_a1_b14_x13, 0bin0000@istrue_a1_b14_x14, 0bin0000@istrue_a1_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a1)] THEN istrue_a1_b15_x0 = 0bin1 ELSE istrue_a1_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a1)] THEN istrue_a1_b15_x1 = 0bin1 ELSE istrue_a1_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a1)] THEN istrue_a1_b15_x2 = 0bin1 ELSE istrue_a1_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a1)] THEN istrue_a1_b15_x3 = 0bin1 ELSE istrue_a1_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a1)] THEN istrue_a1_b15_x4 = 0bin1 ELSE istrue_a1_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a1)] THEN istrue_a1_b15_x5 = 0bin1 ELSE istrue_a1_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a1)] THEN istrue_a1_b15_x6 = 0bin1 ELSE istrue_a1_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a1)] THEN istrue_a1_b15_x7 = 0bin1 ELSE istrue_a1_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a1)] THEN istrue_a1_b15_x8 = 0bin1 ELSE istrue_a1_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a1)] THEN istrue_a1_b15_x9 = 0bin1 ELSE istrue_a1_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a1)] THEN istrue_a1_b15_x10 = 0bin1 ELSE istrue_a1_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a1)] THEN istrue_a1_b15_x11 = 0bin1 ELSE istrue_a1_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a1)] THEN istrue_a1_b15_x12 = 0bin1 ELSE istrue_a1_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a1)] THEN istrue_a1_b15_x13 = 0bin1 ELSE istrue_a1_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a1)] THEN istrue_a1_b15_x14 = 0bin1 ELSE istrue_a1_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a1)] THEN istrue_a1_b15_x15 = 0bin1 ELSE istrue_a1_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a1_b15 = BVPLUS(5, 0bin0000@istrue_a1_b15_x0, 0bin0000@istrue_a1_b15_x1, 0bin0000@istrue_a1_b15_x2, 0bin0000@istrue_a1_b15_x3, 0bin0000@istrue_a1_b15_x4, 0bin0000@istrue_a1_b15_x5, 0bin0000@istrue_a1_b15_x6, 0bin0000@istrue_a1_b15_x7, 0bin0000@istrue_a1_b15_x8, 0bin0000@istrue_a1_b15_x9, 0bin0000@istrue_a1_b15_x10, 0bin0000@istrue_a1_b15_x11, 0bin0000@istrue_a1_b15_x12, 0bin0000@istrue_a1_b15_x13, 0bin0000@istrue_a1_b15_x14, 0bin0000@istrue_a1_b15_x15));
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a2)] THEN istrue_a2_b0_x0 = 0bin1 ELSE istrue_a2_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a2)] THEN istrue_a2_b0_x1 = 0bin1 ELSE istrue_a2_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a2)] THEN istrue_a2_b0_x2 = 0bin1 ELSE istrue_a2_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a2)] THEN istrue_a2_b0_x3 = 0bin1 ELSE istrue_a2_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a2)] THEN istrue_a2_b0_x4 = 0bin1 ELSE istrue_a2_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a2)] THEN istrue_a2_b0_x5 = 0bin1 ELSE istrue_a2_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a2)] THEN istrue_a2_b0_x6 = 0bin1 ELSE istrue_a2_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a2)] THEN istrue_a2_b0_x7 = 0bin1 ELSE istrue_a2_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a2)] THEN istrue_a2_b0_x8 = 0bin1 ELSE istrue_a2_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a2)] THEN istrue_a2_b0_x9 = 0bin1 ELSE istrue_a2_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a2)] THEN istrue_a2_b0_x10 = 0bin1 ELSE istrue_a2_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a2)] THEN istrue_a2_b0_x11 = 0bin1 ELSE istrue_a2_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a2)] THEN istrue_a2_b0_x12 = 0bin1 ELSE istrue_a2_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a2)] THEN istrue_a2_b0_x13 = 0bin1 ELSE istrue_a2_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a2)] THEN istrue_a2_b0_x14 = 0bin1 ELSE istrue_a2_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a2)] THEN istrue_a2_b0_x15 = 0bin1 ELSE istrue_a2_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b0 = BVPLUS(5, 0bin0000@istrue_a2_b0_x0, 0bin0000@istrue_a2_b0_x1, 0bin0000@istrue_a2_b0_x2, 0bin0000@istrue_a2_b0_x3, 0bin0000@istrue_a2_b0_x4, 0bin0000@istrue_a2_b0_x5, 0bin0000@istrue_a2_b0_x6, 0bin0000@istrue_a2_b0_x7, 0bin0000@istrue_a2_b0_x8, 0bin0000@istrue_a2_b0_x9, 0bin0000@istrue_a2_b0_x10, 0bin0000@istrue_a2_b0_x11, 0bin0000@istrue_a2_b0_x12, 0bin0000@istrue_a2_b0_x13, 0bin0000@istrue_a2_b0_x14, 0bin0000@istrue_a2_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a2)] THEN istrue_a2_b1_x0 = 0bin1 ELSE istrue_a2_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a2)] THEN istrue_a2_b1_x1 = 0bin1 ELSE istrue_a2_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a2)] THEN istrue_a2_b1_x2 = 0bin1 ELSE istrue_a2_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a2)] THEN istrue_a2_b1_x3 = 0bin1 ELSE istrue_a2_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a2)] THEN istrue_a2_b1_x4 = 0bin1 ELSE istrue_a2_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a2)] THEN istrue_a2_b1_x5 = 0bin1 ELSE istrue_a2_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a2)] THEN istrue_a2_b1_x6 = 0bin1 ELSE istrue_a2_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a2)] THEN istrue_a2_b1_x7 = 0bin1 ELSE istrue_a2_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a2)] THEN istrue_a2_b1_x8 = 0bin1 ELSE istrue_a2_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a2)] THEN istrue_a2_b1_x9 = 0bin1 ELSE istrue_a2_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a2)] THEN istrue_a2_b1_x10 = 0bin1 ELSE istrue_a2_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a2)] THEN istrue_a2_b1_x11 = 0bin1 ELSE istrue_a2_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a2)] THEN istrue_a2_b1_x12 = 0bin1 ELSE istrue_a2_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a2)] THEN istrue_a2_b1_x13 = 0bin1 ELSE istrue_a2_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a2)] THEN istrue_a2_b1_x14 = 0bin1 ELSE istrue_a2_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a2)] THEN istrue_a2_b1_x15 = 0bin1 ELSE istrue_a2_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b1 = BVPLUS(5, 0bin0000@istrue_a2_b1_x0, 0bin0000@istrue_a2_b1_x1, 0bin0000@istrue_a2_b1_x2, 0bin0000@istrue_a2_b1_x3, 0bin0000@istrue_a2_b1_x4, 0bin0000@istrue_a2_b1_x5, 0bin0000@istrue_a2_b1_x6, 0bin0000@istrue_a2_b1_x7, 0bin0000@istrue_a2_b1_x8, 0bin0000@istrue_a2_b1_x9, 0bin0000@istrue_a2_b1_x10, 0bin0000@istrue_a2_b1_x11, 0bin0000@istrue_a2_b1_x12, 0bin0000@istrue_a2_b1_x13, 0bin0000@istrue_a2_b1_x14, 0bin0000@istrue_a2_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a2)] THEN istrue_a2_b2_x0 = 0bin1 ELSE istrue_a2_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a2)] THEN istrue_a2_b2_x1 = 0bin1 ELSE istrue_a2_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a2)] THEN istrue_a2_b2_x2 = 0bin1 ELSE istrue_a2_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a2)] THEN istrue_a2_b2_x3 = 0bin1 ELSE istrue_a2_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a2)] THEN istrue_a2_b2_x4 = 0bin1 ELSE istrue_a2_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a2)] THEN istrue_a2_b2_x5 = 0bin1 ELSE istrue_a2_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a2)] THEN istrue_a2_b2_x6 = 0bin1 ELSE istrue_a2_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a2)] THEN istrue_a2_b2_x7 = 0bin1 ELSE istrue_a2_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a2)] THEN istrue_a2_b2_x8 = 0bin1 ELSE istrue_a2_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a2)] THEN istrue_a2_b2_x9 = 0bin1 ELSE istrue_a2_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a2)] THEN istrue_a2_b2_x10 = 0bin1 ELSE istrue_a2_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a2)] THEN istrue_a2_b2_x11 = 0bin1 ELSE istrue_a2_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a2)] THEN istrue_a2_b2_x12 = 0bin1 ELSE istrue_a2_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a2)] THEN istrue_a2_b2_x13 = 0bin1 ELSE istrue_a2_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a2)] THEN istrue_a2_b2_x14 = 0bin1 ELSE istrue_a2_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a2)] THEN istrue_a2_b2_x15 = 0bin1 ELSE istrue_a2_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b2 = BVPLUS(5, 0bin0000@istrue_a2_b2_x0, 0bin0000@istrue_a2_b2_x1, 0bin0000@istrue_a2_b2_x2, 0bin0000@istrue_a2_b2_x3, 0bin0000@istrue_a2_b2_x4, 0bin0000@istrue_a2_b2_x5, 0bin0000@istrue_a2_b2_x6, 0bin0000@istrue_a2_b2_x7, 0bin0000@istrue_a2_b2_x8, 0bin0000@istrue_a2_b2_x9, 0bin0000@istrue_a2_b2_x10, 0bin0000@istrue_a2_b2_x11, 0bin0000@istrue_a2_b2_x12, 0bin0000@istrue_a2_b2_x13, 0bin0000@istrue_a2_b2_x14, 0bin0000@istrue_a2_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a2)] THEN istrue_a2_b3_x0 = 0bin1 ELSE istrue_a2_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a2)] THEN istrue_a2_b3_x1 = 0bin1 ELSE istrue_a2_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a2)] THEN istrue_a2_b3_x2 = 0bin1 ELSE istrue_a2_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a2)] THEN istrue_a2_b3_x3 = 0bin1 ELSE istrue_a2_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a2)] THEN istrue_a2_b3_x4 = 0bin1 ELSE istrue_a2_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a2)] THEN istrue_a2_b3_x5 = 0bin1 ELSE istrue_a2_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a2)] THEN istrue_a2_b3_x6 = 0bin1 ELSE istrue_a2_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a2)] THEN istrue_a2_b3_x7 = 0bin1 ELSE istrue_a2_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a2)] THEN istrue_a2_b3_x8 = 0bin1 ELSE istrue_a2_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a2)] THEN istrue_a2_b3_x9 = 0bin1 ELSE istrue_a2_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a2)] THEN istrue_a2_b3_x10 = 0bin1 ELSE istrue_a2_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a2)] THEN istrue_a2_b3_x11 = 0bin1 ELSE istrue_a2_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a2)] THEN istrue_a2_b3_x12 = 0bin1 ELSE istrue_a2_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a2)] THEN istrue_a2_b3_x13 = 0bin1 ELSE istrue_a2_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a2)] THEN istrue_a2_b3_x14 = 0bin1 ELSE istrue_a2_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a2)] THEN istrue_a2_b3_x15 = 0bin1 ELSE istrue_a2_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b3 = BVPLUS(5, 0bin0000@istrue_a2_b3_x0, 0bin0000@istrue_a2_b3_x1, 0bin0000@istrue_a2_b3_x2, 0bin0000@istrue_a2_b3_x3, 0bin0000@istrue_a2_b3_x4, 0bin0000@istrue_a2_b3_x5, 0bin0000@istrue_a2_b3_x6, 0bin0000@istrue_a2_b3_x7, 0bin0000@istrue_a2_b3_x8, 0bin0000@istrue_a2_b3_x9, 0bin0000@istrue_a2_b3_x10, 0bin0000@istrue_a2_b3_x11, 0bin0000@istrue_a2_b3_x12, 0bin0000@istrue_a2_b3_x13, 0bin0000@istrue_a2_b3_x14, 0bin0000@istrue_a2_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a2)] THEN istrue_a2_b4_x0 = 0bin1 ELSE istrue_a2_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a2)] THEN istrue_a2_b4_x1 = 0bin1 ELSE istrue_a2_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a2)] THEN istrue_a2_b4_x2 = 0bin1 ELSE istrue_a2_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a2)] THEN istrue_a2_b4_x3 = 0bin1 ELSE istrue_a2_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a2)] THEN istrue_a2_b4_x4 = 0bin1 ELSE istrue_a2_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a2)] THEN istrue_a2_b4_x5 = 0bin1 ELSE istrue_a2_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a2)] THEN istrue_a2_b4_x6 = 0bin1 ELSE istrue_a2_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a2)] THEN istrue_a2_b4_x7 = 0bin1 ELSE istrue_a2_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a2)] THEN istrue_a2_b4_x8 = 0bin1 ELSE istrue_a2_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a2)] THEN istrue_a2_b4_x9 = 0bin1 ELSE istrue_a2_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a2)] THEN istrue_a2_b4_x10 = 0bin1 ELSE istrue_a2_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a2)] THEN istrue_a2_b4_x11 = 0bin1 ELSE istrue_a2_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a2)] THEN istrue_a2_b4_x12 = 0bin1 ELSE istrue_a2_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a2)] THEN istrue_a2_b4_x13 = 0bin1 ELSE istrue_a2_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a2)] THEN istrue_a2_b4_x14 = 0bin1 ELSE istrue_a2_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a2)] THEN istrue_a2_b4_x15 = 0bin1 ELSE istrue_a2_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b4 = BVPLUS(5, 0bin0000@istrue_a2_b4_x0, 0bin0000@istrue_a2_b4_x1, 0bin0000@istrue_a2_b4_x2, 0bin0000@istrue_a2_b4_x3, 0bin0000@istrue_a2_b4_x4, 0bin0000@istrue_a2_b4_x5, 0bin0000@istrue_a2_b4_x6, 0bin0000@istrue_a2_b4_x7, 0bin0000@istrue_a2_b4_x8, 0bin0000@istrue_a2_b4_x9, 0bin0000@istrue_a2_b4_x10, 0bin0000@istrue_a2_b4_x11, 0bin0000@istrue_a2_b4_x12, 0bin0000@istrue_a2_b4_x13, 0bin0000@istrue_a2_b4_x14, 0bin0000@istrue_a2_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a2)] THEN istrue_a2_b5_x0 = 0bin1 ELSE istrue_a2_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a2)] THEN istrue_a2_b5_x1 = 0bin1 ELSE istrue_a2_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a2)] THEN istrue_a2_b5_x2 = 0bin1 ELSE istrue_a2_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a2)] THEN istrue_a2_b5_x3 = 0bin1 ELSE istrue_a2_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a2)] THEN istrue_a2_b5_x4 = 0bin1 ELSE istrue_a2_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a2)] THEN istrue_a2_b5_x5 = 0bin1 ELSE istrue_a2_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a2)] THEN istrue_a2_b5_x6 = 0bin1 ELSE istrue_a2_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a2)] THEN istrue_a2_b5_x7 = 0bin1 ELSE istrue_a2_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a2)] THEN istrue_a2_b5_x8 = 0bin1 ELSE istrue_a2_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a2)] THEN istrue_a2_b5_x9 = 0bin1 ELSE istrue_a2_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a2)] THEN istrue_a2_b5_x10 = 0bin1 ELSE istrue_a2_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a2)] THEN istrue_a2_b5_x11 = 0bin1 ELSE istrue_a2_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a2)] THEN istrue_a2_b5_x12 = 0bin1 ELSE istrue_a2_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a2)] THEN istrue_a2_b5_x13 = 0bin1 ELSE istrue_a2_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a2)] THEN istrue_a2_b5_x14 = 0bin1 ELSE istrue_a2_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a2)] THEN istrue_a2_b5_x15 = 0bin1 ELSE istrue_a2_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b5 = BVPLUS(5, 0bin0000@istrue_a2_b5_x0, 0bin0000@istrue_a2_b5_x1, 0bin0000@istrue_a2_b5_x2, 0bin0000@istrue_a2_b5_x3, 0bin0000@istrue_a2_b5_x4, 0bin0000@istrue_a2_b5_x5, 0bin0000@istrue_a2_b5_x6, 0bin0000@istrue_a2_b5_x7, 0bin0000@istrue_a2_b5_x8, 0bin0000@istrue_a2_b5_x9, 0bin0000@istrue_a2_b5_x10, 0bin0000@istrue_a2_b5_x11, 0bin0000@istrue_a2_b5_x12, 0bin0000@istrue_a2_b5_x13, 0bin0000@istrue_a2_b5_x14, 0bin0000@istrue_a2_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a2)] THEN istrue_a2_b6_x0 = 0bin1 ELSE istrue_a2_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a2)] THEN istrue_a2_b6_x1 = 0bin1 ELSE istrue_a2_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a2)] THEN istrue_a2_b6_x2 = 0bin1 ELSE istrue_a2_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a2)] THEN istrue_a2_b6_x3 = 0bin1 ELSE istrue_a2_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a2)] THEN istrue_a2_b6_x4 = 0bin1 ELSE istrue_a2_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a2)] THEN istrue_a2_b6_x5 = 0bin1 ELSE istrue_a2_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a2)] THEN istrue_a2_b6_x6 = 0bin1 ELSE istrue_a2_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a2)] THEN istrue_a2_b6_x7 = 0bin1 ELSE istrue_a2_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a2)] THEN istrue_a2_b6_x8 = 0bin1 ELSE istrue_a2_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a2)] THEN istrue_a2_b6_x9 = 0bin1 ELSE istrue_a2_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a2)] THEN istrue_a2_b6_x10 = 0bin1 ELSE istrue_a2_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a2)] THEN istrue_a2_b6_x11 = 0bin1 ELSE istrue_a2_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a2)] THEN istrue_a2_b6_x12 = 0bin1 ELSE istrue_a2_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a2)] THEN istrue_a2_b6_x13 = 0bin1 ELSE istrue_a2_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a2)] THEN istrue_a2_b6_x14 = 0bin1 ELSE istrue_a2_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a2)] THEN istrue_a2_b6_x15 = 0bin1 ELSE istrue_a2_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b6 = BVPLUS(5, 0bin0000@istrue_a2_b6_x0, 0bin0000@istrue_a2_b6_x1, 0bin0000@istrue_a2_b6_x2, 0bin0000@istrue_a2_b6_x3, 0bin0000@istrue_a2_b6_x4, 0bin0000@istrue_a2_b6_x5, 0bin0000@istrue_a2_b6_x6, 0bin0000@istrue_a2_b6_x7, 0bin0000@istrue_a2_b6_x8, 0bin0000@istrue_a2_b6_x9, 0bin0000@istrue_a2_b6_x10, 0bin0000@istrue_a2_b6_x11, 0bin0000@istrue_a2_b6_x12, 0bin0000@istrue_a2_b6_x13, 0bin0000@istrue_a2_b6_x14, 0bin0000@istrue_a2_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a2)] THEN istrue_a2_b7_x0 = 0bin1 ELSE istrue_a2_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a2)] THEN istrue_a2_b7_x1 = 0bin1 ELSE istrue_a2_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a2)] THEN istrue_a2_b7_x2 = 0bin1 ELSE istrue_a2_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a2)] THEN istrue_a2_b7_x3 = 0bin1 ELSE istrue_a2_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a2)] THEN istrue_a2_b7_x4 = 0bin1 ELSE istrue_a2_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a2)] THEN istrue_a2_b7_x5 = 0bin1 ELSE istrue_a2_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a2)] THEN istrue_a2_b7_x6 = 0bin1 ELSE istrue_a2_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a2)] THEN istrue_a2_b7_x7 = 0bin1 ELSE istrue_a2_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a2)] THEN istrue_a2_b7_x8 = 0bin1 ELSE istrue_a2_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a2)] THEN istrue_a2_b7_x9 = 0bin1 ELSE istrue_a2_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a2)] THEN istrue_a2_b7_x10 = 0bin1 ELSE istrue_a2_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a2)] THEN istrue_a2_b7_x11 = 0bin1 ELSE istrue_a2_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a2)] THEN istrue_a2_b7_x12 = 0bin1 ELSE istrue_a2_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a2)] THEN istrue_a2_b7_x13 = 0bin1 ELSE istrue_a2_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a2)] THEN istrue_a2_b7_x14 = 0bin1 ELSE istrue_a2_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a2)] THEN istrue_a2_b7_x15 = 0bin1 ELSE istrue_a2_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b7 = BVPLUS(5, 0bin0000@istrue_a2_b7_x0, 0bin0000@istrue_a2_b7_x1, 0bin0000@istrue_a2_b7_x2, 0bin0000@istrue_a2_b7_x3, 0bin0000@istrue_a2_b7_x4, 0bin0000@istrue_a2_b7_x5, 0bin0000@istrue_a2_b7_x6, 0bin0000@istrue_a2_b7_x7, 0bin0000@istrue_a2_b7_x8, 0bin0000@istrue_a2_b7_x9, 0bin0000@istrue_a2_b7_x10, 0bin0000@istrue_a2_b7_x11, 0bin0000@istrue_a2_b7_x12, 0bin0000@istrue_a2_b7_x13, 0bin0000@istrue_a2_b7_x14, 0bin0000@istrue_a2_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a2)] THEN istrue_a2_b8_x0 = 0bin1 ELSE istrue_a2_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a2)] THEN istrue_a2_b8_x1 = 0bin1 ELSE istrue_a2_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a2)] THEN istrue_a2_b8_x2 = 0bin1 ELSE istrue_a2_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a2)] THEN istrue_a2_b8_x3 = 0bin1 ELSE istrue_a2_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a2)] THEN istrue_a2_b8_x4 = 0bin1 ELSE istrue_a2_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a2)] THEN istrue_a2_b8_x5 = 0bin1 ELSE istrue_a2_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a2)] THEN istrue_a2_b8_x6 = 0bin1 ELSE istrue_a2_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a2)] THEN istrue_a2_b8_x7 = 0bin1 ELSE istrue_a2_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a2)] THEN istrue_a2_b8_x8 = 0bin1 ELSE istrue_a2_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a2)] THEN istrue_a2_b8_x9 = 0bin1 ELSE istrue_a2_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a2)] THEN istrue_a2_b8_x10 = 0bin1 ELSE istrue_a2_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a2)] THEN istrue_a2_b8_x11 = 0bin1 ELSE istrue_a2_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a2)] THEN istrue_a2_b8_x12 = 0bin1 ELSE istrue_a2_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a2)] THEN istrue_a2_b8_x13 = 0bin1 ELSE istrue_a2_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a2)] THEN istrue_a2_b8_x14 = 0bin1 ELSE istrue_a2_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a2)] THEN istrue_a2_b8_x15 = 0bin1 ELSE istrue_a2_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b8 = BVPLUS(5, 0bin0000@istrue_a2_b8_x0, 0bin0000@istrue_a2_b8_x1, 0bin0000@istrue_a2_b8_x2, 0bin0000@istrue_a2_b8_x3, 0bin0000@istrue_a2_b8_x4, 0bin0000@istrue_a2_b8_x5, 0bin0000@istrue_a2_b8_x6, 0bin0000@istrue_a2_b8_x7, 0bin0000@istrue_a2_b8_x8, 0bin0000@istrue_a2_b8_x9, 0bin0000@istrue_a2_b8_x10, 0bin0000@istrue_a2_b8_x11, 0bin0000@istrue_a2_b8_x12, 0bin0000@istrue_a2_b8_x13, 0bin0000@istrue_a2_b8_x14, 0bin0000@istrue_a2_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a2)] THEN istrue_a2_b9_x0 = 0bin1 ELSE istrue_a2_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a2)] THEN istrue_a2_b9_x1 = 0bin1 ELSE istrue_a2_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a2)] THEN istrue_a2_b9_x2 = 0bin1 ELSE istrue_a2_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a2)] THEN istrue_a2_b9_x3 = 0bin1 ELSE istrue_a2_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a2)] THEN istrue_a2_b9_x4 = 0bin1 ELSE istrue_a2_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a2)] THEN istrue_a2_b9_x5 = 0bin1 ELSE istrue_a2_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a2)] THEN istrue_a2_b9_x6 = 0bin1 ELSE istrue_a2_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a2)] THEN istrue_a2_b9_x7 = 0bin1 ELSE istrue_a2_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a2)] THEN istrue_a2_b9_x8 = 0bin1 ELSE istrue_a2_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a2)] THEN istrue_a2_b9_x9 = 0bin1 ELSE istrue_a2_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a2)] THEN istrue_a2_b9_x10 = 0bin1 ELSE istrue_a2_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a2)] THEN istrue_a2_b9_x11 = 0bin1 ELSE istrue_a2_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a2)] THEN istrue_a2_b9_x12 = 0bin1 ELSE istrue_a2_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a2)] THEN istrue_a2_b9_x13 = 0bin1 ELSE istrue_a2_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a2)] THEN istrue_a2_b9_x14 = 0bin1 ELSE istrue_a2_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a2)] THEN istrue_a2_b9_x15 = 0bin1 ELSE istrue_a2_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b9 = BVPLUS(5, 0bin0000@istrue_a2_b9_x0, 0bin0000@istrue_a2_b9_x1, 0bin0000@istrue_a2_b9_x2, 0bin0000@istrue_a2_b9_x3, 0bin0000@istrue_a2_b9_x4, 0bin0000@istrue_a2_b9_x5, 0bin0000@istrue_a2_b9_x6, 0bin0000@istrue_a2_b9_x7, 0bin0000@istrue_a2_b9_x8, 0bin0000@istrue_a2_b9_x9, 0bin0000@istrue_a2_b9_x10, 0bin0000@istrue_a2_b9_x11, 0bin0000@istrue_a2_b9_x12, 0bin0000@istrue_a2_b9_x13, 0bin0000@istrue_a2_b9_x14, 0bin0000@istrue_a2_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a2)] THEN istrue_a2_b10_x0 = 0bin1 ELSE istrue_a2_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a2)] THEN istrue_a2_b10_x1 = 0bin1 ELSE istrue_a2_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a2)] THEN istrue_a2_b10_x2 = 0bin1 ELSE istrue_a2_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a2)] THEN istrue_a2_b10_x3 = 0bin1 ELSE istrue_a2_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a2)] THEN istrue_a2_b10_x4 = 0bin1 ELSE istrue_a2_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a2)] THEN istrue_a2_b10_x5 = 0bin1 ELSE istrue_a2_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a2)] THEN istrue_a2_b10_x6 = 0bin1 ELSE istrue_a2_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a2)] THEN istrue_a2_b10_x7 = 0bin1 ELSE istrue_a2_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a2)] THEN istrue_a2_b10_x8 = 0bin1 ELSE istrue_a2_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a2)] THEN istrue_a2_b10_x9 = 0bin1 ELSE istrue_a2_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a2)] THEN istrue_a2_b10_x10 = 0bin1 ELSE istrue_a2_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a2)] THEN istrue_a2_b10_x11 = 0bin1 ELSE istrue_a2_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a2)] THEN istrue_a2_b10_x12 = 0bin1 ELSE istrue_a2_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a2)] THEN istrue_a2_b10_x13 = 0bin1 ELSE istrue_a2_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a2)] THEN istrue_a2_b10_x14 = 0bin1 ELSE istrue_a2_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a2)] THEN istrue_a2_b10_x15 = 0bin1 ELSE istrue_a2_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b10 = BVPLUS(5, 0bin0000@istrue_a2_b10_x0, 0bin0000@istrue_a2_b10_x1, 0bin0000@istrue_a2_b10_x2, 0bin0000@istrue_a2_b10_x3, 0bin0000@istrue_a2_b10_x4, 0bin0000@istrue_a2_b10_x5, 0bin0000@istrue_a2_b10_x6, 0bin0000@istrue_a2_b10_x7, 0bin0000@istrue_a2_b10_x8, 0bin0000@istrue_a2_b10_x9, 0bin0000@istrue_a2_b10_x10, 0bin0000@istrue_a2_b10_x11, 0bin0000@istrue_a2_b10_x12, 0bin0000@istrue_a2_b10_x13, 0bin0000@istrue_a2_b10_x14, 0bin0000@istrue_a2_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a2)] THEN istrue_a2_b11_x0 = 0bin1 ELSE istrue_a2_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a2)] THEN istrue_a2_b11_x1 = 0bin1 ELSE istrue_a2_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a2)] THEN istrue_a2_b11_x2 = 0bin1 ELSE istrue_a2_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a2)] THEN istrue_a2_b11_x3 = 0bin1 ELSE istrue_a2_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a2)] THEN istrue_a2_b11_x4 = 0bin1 ELSE istrue_a2_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a2)] THEN istrue_a2_b11_x5 = 0bin1 ELSE istrue_a2_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a2)] THEN istrue_a2_b11_x6 = 0bin1 ELSE istrue_a2_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a2)] THEN istrue_a2_b11_x7 = 0bin1 ELSE istrue_a2_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a2)] THEN istrue_a2_b11_x8 = 0bin1 ELSE istrue_a2_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a2)] THEN istrue_a2_b11_x9 = 0bin1 ELSE istrue_a2_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a2)] THEN istrue_a2_b11_x10 = 0bin1 ELSE istrue_a2_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a2)] THEN istrue_a2_b11_x11 = 0bin1 ELSE istrue_a2_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a2)] THEN istrue_a2_b11_x12 = 0bin1 ELSE istrue_a2_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a2)] THEN istrue_a2_b11_x13 = 0bin1 ELSE istrue_a2_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a2)] THEN istrue_a2_b11_x14 = 0bin1 ELSE istrue_a2_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a2)] THEN istrue_a2_b11_x15 = 0bin1 ELSE istrue_a2_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b11 = BVPLUS(5, 0bin0000@istrue_a2_b11_x0, 0bin0000@istrue_a2_b11_x1, 0bin0000@istrue_a2_b11_x2, 0bin0000@istrue_a2_b11_x3, 0bin0000@istrue_a2_b11_x4, 0bin0000@istrue_a2_b11_x5, 0bin0000@istrue_a2_b11_x6, 0bin0000@istrue_a2_b11_x7, 0bin0000@istrue_a2_b11_x8, 0bin0000@istrue_a2_b11_x9, 0bin0000@istrue_a2_b11_x10, 0bin0000@istrue_a2_b11_x11, 0bin0000@istrue_a2_b11_x12, 0bin0000@istrue_a2_b11_x13, 0bin0000@istrue_a2_b11_x14, 0bin0000@istrue_a2_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a2)] THEN istrue_a2_b12_x0 = 0bin1 ELSE istrue_a2_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a2)] THEN istrue_a2_b12_x1 = 0bin1 ELSE istrue_a2_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a2)] THEN istrue_a2_b12_x2 = 0bin1 ELSE istrue_a2_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a2)] THEN istrue_a2_b12_x3 = 0bin1 ELSE istrue_a2_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a2)] THEN istrue_a2_b12_x4 = 0bin1 ELSE istrue_a2_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a2)] THEN istrue_a2_b12_x5 = 0bin1 ELSE istrue_a2_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a2)] THEN istrue_a2_b12_x6 = 0bin1 ELSE istrue_a2_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a2)] THEN istrue_a2_b12_x7 = 0bin1 ELSE istrue_a2_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a2)] THEN istrue_a2_b12_x8 = 0bin1 ELSE istrue_a2_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a2)] THEN istrue_a2_b12_x9 = 0bin1 ELSE istrue_a2_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a2)] THEN istrue_a2_b12_x10 = 0bin1 ELSE istrue_a2_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a2)] THEN istrue_a2_b12_x11 = 0bin1 ELSE istrue_a2_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a2)] THEN istrue_a2_b12_x12 = 0bin1 ELSE istrue_a2_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a2)] THEN istrue_a2_b12_x13 = 0bin1 ELSE istrue_a2_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a2)] THEN istrue_a2_b12_x14 = 0bin1 ELSE istrue_a2_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a2)] THEN istrue_a2_b12_x15 = 0bin1 ELSE istrue_a2_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b12 = BVPLUS(5, 0bin0000@istrue_a2_b12_x0, 0bin0000@istrue_a2_b12_x1, 0bin0000@istrue_a2_b12_x2, 0bin0000@istrue_a2_b12_x3, 0bin0000@istrue_a2_b12_x4, 0bin0000@istrue_a2_b12_x5, 0bin0000@istrue_a2_b12_x6, 0bin0000@istrue_a2_b12_x7, 0bin0000@istrue_a2_b12_x8, 0bin0000@istrue_a2_b12_x9, 0bin0000@istrue_a2_b12_x10, 0bin0000@istrue_a2_b12_x11, 0bin0000@istrue_a2_b12_x12, 0bin0000@istrue_a2_b12_x13, 0bin0000@istrue_a2_b12_x14, 0bin0000@istrue_a2_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a2)] THEN istrue_a2_b13_x0 = 0bin1 ELSE istrue_a2_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a2)] THEN istrue_a2_b13_x1 = 0bin1 ELSE istrue_a2_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a2)] THEN istrue_a2_b13_x2 = 0bin1 ELSE istrue_a2_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a2)] THEN istrue_a2_b13_x3 = 0bin1 ELSE istrue_a2_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a2)] THEN istrue_a2_b13_x4 = 0bin1 ELSE istrue_a2_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a2)] THEN istrue_a2_b13_x5 = 0bin1 ELSE istrue_a2_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a2)] THEN istrue_a2_b13_x6 = 0bin1 ELSE istrue_a2_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a2)] THEN istrue_a2_b13_x7 = 0bin1 ELSE istrue_a2_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a2)] THEN istrue_a2_b13_x8 = 0bin1 ELSE istrue_a2_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a2)] THEN istrue_a2_b13_x9 = 0bin1 ELSE istrue_a2_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a2)] THEN istrue_a2_b13_x10 = 0bin1 ELSE istrue_a2_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a2)] THEN istrue_a2_b13_x11 = 0bin1 ELSE istrue_a2_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a2)] THEN istrue_a2_b13_x12 = 0bin1 ELSE istrue_a2_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a2)] THEN istrue_a2_b13_x13 = 0bin1 ELSE istrue_a2_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a2)] THEN istrue_a2_b13_x14 = 0bin1 ELSE istrue_a2_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a2)] THEN istrue_a2_b13_x15 = 0bin1 ELSE istrue_a2_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b13 = BVPLUS(5, 0bin0000@istrue_a2_b13_x0, 0bin0000@istrue_a2_b13_x1, 0bin0000@istrue_a2_b13_x2, 0bin0000@istrue_a2_b13_x3, 0bin0000@istrue_a2_b13_x4, 0bin0000@istrue_a2_b13_x5, 0bin0000@istrue_a2_b13_x6, 0bin0000@istrue_a2_b13_x7, 0bin0000@istrue_a2_b13_x8, 0bin0000@istrue_a2_b13_x9, 0bin0000@istrue_a2_b13_x10, 0bin0000@istrue_a2_b13_x11, 0bin0000@istrue_a2_b13_x12, 0bin0000@istrue_a2_b13_x13, 0bin0000@istrue_a2_b13_x14, 0bin0000@istrue_a2_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a2)] THEN istrue_a2_b14_x0 = 0bin1 ELSE istrue_a2_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a2)] THEN istrue_a2_b14_x1 = 0bin1 ELSE istrue_a2_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a2)] THEN istrue_a2_b14_x2 = 0bin1 ELSE istrue_a2_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a2)] THEN istrue_a2_b14_x3 = 0bin1 ELSE istrue_a2_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a2)] THEN istrue_a2_b14_x4 = 0bin1 ELSE istrue_a2_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a2)] THEN istrue_a2_b14_x5 = 0bin1 ELSE istrue_a2_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a2)] THEN istrue_a2_b14_x6 = 0bin1 ELSE istrue_a2_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a2)] THEN istrue_a2_b14_x7 = 0bin1 ELSE istrue_a2_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a2)] THEN istrue_a2_b14_x8 = 0bin1 ELSE istrue_a2_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a2)] THEN istrue_a2_b14_x9 = 0bin1 ELSE istrue_a2_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a2)] THEN istrue_a2_b14_x10 = 0bin1 ELSE istrue_a2_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a2)] THEN istrue_a2_b14_x11 = 0bin1 ELSE istrue_a2_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a2)] THEN istrue_a2_b14_x12 = 0bin1 ELSE istrue_a2_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a2)] THEN istrue_a2_b14_x13 = 0bin1 ELSE istrue_a2_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a2)] THEN istrue_a2_b14_x14 = 0bin1 ELSE istrue_a2_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a2)] THEN istrue_a2_b14_x15 = 0bin1 ELSE istrue_a2_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b14 = BVPLUS(5, 0bin0000@istrue_a2_b14_x0, 0bin0000@istrue_a2_b14_x1, 0bin0000@istrue_a2_b14_x2, 0bin0000@istrue_a2_b14_x3, 0bin0000@istrue_a2_b14_x4, 0bin0000@istrue_a2_b14_x5, 0bin0000@istrue_a2_b14_x6, 0bin0000@istrue_a2_b14_x7, 0bin0000@istrue_a2_b14_x8, 0bin0000@istrue_a2_b14_x9, 0bin0000@istrue_a2_b14_x10, 0bin0000@istrue_a2_b14_x11, 0bin0000@istrue_a2_b14_x12, 0bin0000@istrue_a2_b14_x13, 0bin0000@istrue_a2_b14_x14, 0bin0000@istrue_a2_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a2)] THEN istrue_a2_b15_x0 = 0bin1 ELSE istrue_a2_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a2)] THEN istrue_a2_b15_x1 = 0bin1 ELSE istrue_a2_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a2)] THEN istrue_a2_b15_x2 = 0bin1 ELSE istrue_a2_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a2)] THEN istrue_a2_b15_x3 = 0bin1 ELSE istrue_a2_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a2)] THEN istrue_a2_b15_x4 = 0bin1 ELSE istrue_a2_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a2)] THEN istrue_a2_b15_x5 = 0bin1 ELSE istrue_a2_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a2)] THEN istrue_a2_b15_x6 = 0bin1 ELSE istrue_a2_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a2)] THEN istrue_a2_b15_x7 = 0bin1 ELSE istrue_a2_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a2)] THEN istrue_a2_b15_x8 = 0bin1 ELSE istrue_a2_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a2)] THEN istrue_a2_b15_x9 = 0bin1 ELSE istrue_a2_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a2)] THEN istrue_a2_b15_x10 = 0bin1 ELSE istrue_a2_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a2)] THEN istrue_a2_b15_x11 = 0bin1 ELSE istrue_a2_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a2)] THEN istrue_a2_b15_x12 = 0bin1 ELSE istrue_a2_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a2)] THEN istrue_a2_b15_x13 = 0bin1 ELSE istrue_a2_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a2)] THEN istrue_a2_b15_x14 = 0bin1 ELSE istrue_a2_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a2)] THEN istrue_a2_b15_x15 = 0bin1 ELSE istrue_a2_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a2_b15 = BVPLUS(5, 0bin0000@istrue_a2_b15_x0, 0bin0000@istrue_a2_b15_x1, 0bin0000@istrue_a2_b15_x2, 0bin0000@istrue_a2_b15_x3, 0bin0000@istrue_a2_b15_x4, 0bin0000@istrue_a2_b15_x5, 0bin0000@istrue_a2_b15_x6, 0bin0000@istrue_a2_b15_x7, 0bin0000@istrue_a2_b15_x8, 0bin0000@istrue_a2_b15_x9, 0bin0000@istrue_a2_b15_x10, 0bin0000@istrue_a2_b15_x11, 0bin0000@istrue_a2_b15_x12, 0bin0000@istrue_a2_b15_x13, 0bin0000@istrue_a2_b15_x14, 0bin0000@istrue_a2_b15_x15));
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a3)] THEN istrue_a3_b0_x0 = 0bin1 ELSE istrue_a3_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a3)] THEN istrue_a3_b0_x1 = 0bin1 ELSE istrue_a3_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a3)] THEN istrue_a3_b0_x2 = 0bin1 ELSE istrue_a3_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a3)] THEN istrue_a3_b0_x3 = 0bin1 ELSE istrue_a3_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a3)] THEN istrue_a3_b0_x4 = 0bin1 ELSE istrue_a3_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a3)] THEN istrue_a3_b0_x5 = 0bin1 ELSE istrue_a3_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a3)] THEN istrue_a3_b0_x6 = 0bin1 ELSE istrue_a3_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a3)] THEN istrue_a3_b0_x7 = 0bin1 ELSE istrue_a3_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a3)] THEN istrue_a3_b0_x8 = 0bin1 ELSE istrue_a3_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a3)] THEN istrue_a3_b0_x9 = 0bin1 ELSE istrue_a3_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a3)] THEN istrue_a3_b0_x10 = 0bin1 ELSE istrue_a3_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a3)] THEN istrue_a3_b0_x11 = 0bin1 ELSE istrue_a3_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a3)] THEN istrue_a3_b0_x12 = 0bin1 ELSE istrue_a3_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a3)] THEN istrue_a3_b0_x13 = 0bin1 ELSE istrue_a3_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a3)] THEN istrue_a3_b0_x14 = 0bin1 ELSE istrue_a3_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a3)] THEN istrue_a3_b0_x15 = 0bin1 ELSE istrue_a3_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b0 = BVPLUS(5, 0bin0000@istrue_a3_b0_x0, 0bin0000@istrue_a3_b0_x1, 0bin0000@istrue_a3_b0_x2, 0bin0000@istrue_a3_b0_x3, 0bin0000@istrue_a3_b0_x4, 0bin0000@istrue_a3_b0_x5, 0bin0000@istrue_a3_b0_x6, 0bin0000@istrue_a3_b0_x7, 0bin0000@istrue_a3_b0_x8, 0bin0000@istrue_a3_b0_x9, 0bin0000@istrue_a3_b0_x10, 0bin0000@istrue_a3_b0_x11, 0bin0000@istrue_a3_b0_x12, 0bin0000@istrue_a3_b0_x13, 0bin0000@istrue_a3_b0_x14, 0bin0000@istrue_a3_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a3)] THEN istrue_a3_b1_x0 = 0bin1 ELSE istrue_a3_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a3)] THEN istrue_a3_b1_x1 = 0bin1 ELSE istrue_a3_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a3)] THEN istrue_a3_b1_x2 = 0bin1 ELSE istrue_a3_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a3)] THEN istrue_a3_b1_x3 = 0bin1 ELSE istrue_a3_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a3)] THEN istrue_a3_b1_x4 = 0bin1 ELSE istrue_a3_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a3)] THEN istrue_a3_b1_x5 = 0bin1 ELSE istrue_a3_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a3)] THEN istrue_a3_b1_x6 = 0bin1 ELSE istrue_a3_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a3)] THEN istrue_a3_b1_x7 = 0bin1 ELSE istrue_a3_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a3)] THEN istrue_a3_b1_x8 = 0bin1 ELSE istrue_a3_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a3)] THEN istrue_a3_b1_x9 = 0bin1 ELSE istrue_a3_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a3)] THEN istrue_a3_b1_x10 = 0bin1 ELSE istrue_a3_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a3)] THEN istrue_a3_b1_x11 = 0bin1 ELSE istrue_a3_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a3)] THEN istrue_a3_b1_x12 = 0bin1 ELSE istrue_a3_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a3)] THEN istrue_a3_b1_x13 = 0bin1 ELSE istrue_a3_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a3)] THEN istrue_a3_b1_x14 = 0bin1 ELSE istrue_a3_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a3)] THEN istrue_a3_b1_x15 = 0bin1 ELSE istrue_a3_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b1 = BVPLUS(5, 0bin0000@istrue_a3_b1_x0, 0bin0000@istrue_a3_b1_x1, 0bin0000@istrue_a3_b1_x2, 0bin0000@istrue_a3_b1_x3, 0bin0000@istrue_a3_b1_x4, 0bin0000@istrue_a3_b1_x5, 0bin0000@istrue_a3_b1_x6, 0bin0000@istrue_a3_b1_x7, 0bin0000@istrue_a3_b1_x8, 0bin0000@istrue_a3_b1_x9, 0bin0000@istrue_a3_b1_x10, 0bin0000@istrue_a3_b1_x11, 0bin0000@istrue_a3_b1_x12, 0bin0000@istrue_a3_b1_x13, 0bin0000@istrue_a3_b1_x14, 0bin0000@istrue_a3_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a3)] THEN istrue_a3_b2_x0 = 0bin1 ELSE istrue_a3_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a3)] THEN istrue_a3_b2_x1 = 0bin1 ELSE istrue_a3_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a3)] THEN istrue_a3_b2_x2 = 0bin1 ELSE istrue_a3_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a3)] THEN istrue_a3_b2_x3 = 0bin1 ELSE istrue_a3_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a3)] THEN istrue_a3_b2_x4 = 0bin1 ELSE istrue_a3_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a3)] THEN istrue_a3_b2_x5 = 0bin1 ELSE istrue_a3_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a3)] THEN istrue_a3_b2_x6 = 0bin1 ELSE istrue_a3_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a3)] THEN istrue_a3_b2_x7 = 0bin1 ELSE istrue_a3_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a3)] THEN istrue_a3_b2_x8 = 0bin1 ELSE istrue_a3_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a3)] THEN istrue_a3_b2_x9 = 0bin1 ELSE istrue_a3_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a3)] THEN istrue_a3_b2_x10 = 0bin1 ELSE istrue_a3_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a3)] THEN istrue_a3_b2_x11 = 0bin1 ELSE istrue_a3_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a3)] THEN istrue_a3_b2_x12 = 0bin1 ELSE istrue_a3_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a3)] THEN istrue_a3_b2_x13 = 0bin1 ELSE istrue_a3_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a3)] THEN istrue_a3_b2_x14 = 0bin1 ELSE istrue_a3_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a3)] THEN istrue_a3_b2_x15 = 0bin1 ELSE istrue_a3_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b2 = BVPLUS(5, 0bin0000@istrue_a3_b2_x0, 0bin0000@istrue_a3_b2_x1, 0bin0000@istrue_a3_b2_x2, 0bin0000@istrue_a3_b2_x3, 0bin0000@istrue_a3_b2_x4, 0bin0000@istrue_a3_b2_x5, 0bin0000@istrue_a3_b2_x6, 0bin0000@istrue_a3_b2_x7, 0bin0000@istrue_a3_b2_x8, 0bin0000@istrue_a3_b2_x9, 0bin0000@istrue_a3_b2_x10, 0bin0000@istrue_a3_b2_x11, 0bin0000@istrue_a3_b2_x12, 0bin0000@istrue_a3_b2_x13, 0bin0000@istrue_a3_b2_x14, 0bin0000@istrue_a3_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a3)] THEN istrue_a3_b3_x0 = 0bin1 ELSE istrue_a3_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a3)] THEN istrue_a3_b3_x1 = 0bin1 ELSE istrue_a3_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a3)] THEN istrue_a3_b3_x2 = 0bin1 ELSE istrue_a3_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a3)] THEN istrue_a3_b3_x3 = 0bin1 ELSE istrue_a3_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a3)] THEN istrue_a3_b3_x4 = 0bin1 ELSE istrue_a3_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a3)] THEN istrue_a3_b3_x5 = 0bin1 ELSE istrue_a3_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a3)] THEN istrue_a3_b3_x6 = 0bin1 ELSE istrue_a3_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a3)] THEN istrue_a3_b3_x7 = 0bin1 ELSE istrue_a3_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a3)] THEN istrue_a3_b3_x8 = 0bin1 ELSE istrue_a3_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a3)] THEN istrue_a3_b3_x9 = 0bin1 ELSE istrue_a3_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a3)] THEN istrue_a3_b3_x10 = 0bin1 ELSE istrue_a3_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a3)] THEN istrue_a3_b3_x11 = 0bin1 ELSE istrue_a3_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a3)] THEN istrue_a3_b3_x12 = 0bin1 ELSE istrue_a3_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a3)] THEN istrue_a3_b3_x13 = 0bin1 ELSE istrue_a3_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a3)] THEN istrue_a3_b3_x14 = 0bin1 ELSE istrue_a3_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a3)] THEN istrue_a3_b3_x15 = 0bin1 ELSE istrue_a3_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b3 = BVPLUS(5, 0bin0000@istrue_a3_b3_x0, 0bin0000@istrue_a3_b3_x1, 0bin0000@istrue_a3_b3_x2, 0bin0000@istrue_a3_b3_x3, 0bin0000@istrue_a3_b3_x4, 0bin0000@istrue_a3_b3_x5, 0bin0000@istrue_a3_b3_x6, 0bin0000@istrue_a3_b3_x7, 0bin0000@istrue_a3_b3_x8, 0bin0000@istrue_a3_b3_x9, 0bin0000@istrue_a3_b3_x10, 0bin0000@istrue_a3_b3_x11, 0bin0000@istrue_a3_b3_x12, 0bin0000@istrue_a3_b3_x13, 0bin0000@istrue_a3_b3_x14, 0bin0000@istrue_a3_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a3)] THEN istrue_a3_b4_x0 = 0bin1 ELSE istrue_a3_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a3)] THEN istrue_a3_b4_x1 = 0bin1 ELSE istrue_a3_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a3)] THEN istrue_a3_b4_x2 = 0bin1 ELSE istrue_a3_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a3)] THEN istrue_a3_b4_x3 = 0bin1 ELSE istrue_a3_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a3)] THEN istrue_a3_b4_x4 = 0bin1 ELSE istrue_a3_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a3)] THEN istrue_a3_b4_x5 = 0bin1 ELSE istrue_a3_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a3)] THEN istrue_a3_b4_x6 = 0bin1 ELSE istrue_a3_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a3)] THEN istrue_a3_b4_x7 = 0bin1 ELSE istrue_a3_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a3)] THEN istrue_a3_b4_x8 = 0bin1 ELSE istrue_a3_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a3)] THEN istrue_a3_b4_x9 = 0bin1 ELSE istrue_a3_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a3)] THEN istrue_a3_b4_x10 = 0bin1 ELSE istrue_a3_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a3)] THEN istrue_a3_b4_x11 = 0bin1 ELSE istrue_a3_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a3)] THEN istrue_a3_b4_x12 = 0bin1 ELSE istrue_a3_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a3)] THEN istrue_a3_b4_x13 = 0bin1 ELSE istrue_a3_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a3)] THEN istrue_a3_b4_x14 = 0bin1 ELSE istrue_a3_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a3)] THEN istrue_a3_b4_x15 = 0bin1 ELSE istrue_a3_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b4 = BVPLUS(5, 0bin0000@istrue_a3_b4_x0, 0bin0000@istrue_a3_b4_x1, 0bin0000@istrue_a3_b4_x2, 0bin0000@istrue_a3_b4_x3, 0bin0000@istrue_a3_b4_x4, 0bin0000@istrue_a3_b4_x5, 0bin0000@istrue_a3_b4_x6, 0bin0000@istrue_a3_b4_x7, 0bin0000@istrue_a3_b4_x8, 0bin0000@istrue_a3_b4_x9, 0bin0000@istrue_a3_b4_x10, 0bin0000@istrue_a3_b4_x11, 0bin0000@istrue_a3_b4_x12, 0bin0000@istrue_a3_b4_x13, 0bin0000@istrue_a3_b4_x14, 0bin0000@istrue_a3_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a3)] THEN istrue_a3_b5_x0 = 0bin1 ELSE istrue_a3_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a3)] THEN istrue_a3_b5_x1 = 0bin1 ELSE istrue_a3_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a3)] THEN istrue_a3_b5_x2 = 0bin1 ELSE istrue_a3_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a3)] THEN istrue_a3_b5_x3 = 0bin1 ELSE istrue_a3_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a3)] THEN istrue_a3_b5_x4 = 0bin1 ELSE istrue_a3_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a3)] THEN istrue_a3_b5_x5 = 0bin1 ELSE istrue_a3_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a3)] THEN istrue_a3_b5_x6 = 0bin1 ELSE istrue_a3_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a3)] THEN istrue_a3_b5_x7 = 0bin1 ELSE istrue_a3_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a3)] THEN istrue_a3_b5_x8 = 0bin1 ELSE istrue_a3_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a3)] THEN istrue_a3_b5_x9 = 0bin1 ELSE istrue_a3_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a3)] THEN istrue_a3_b5_x10 = 0bin1 ELSE istrue_a3_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a3)] THEN istrue_a3_b5_x11 = 0bin1 ELSE istrue_a3_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a3)] THEN istrue_a3_b5_x12 = 0bin1 ELSE istrue_a3_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a3)] THEN istrue_a3_b5_x13 = 0bin1 ELSE istrue_a3_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a3)] THEN istrue_a3_b5_x14 = 0bin1 ELSE istrue_a3_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a3)] THEN istrue_a3_b5_x15 = 0bin1 ELSE istrue_a3_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b5 = BVPLUS(5, 0bin0000@istrue_a3_b5_x0, 0bin0000@istrue_a3_b5_x1, 0bin0000@istrue_a3_b5_x2, 0bin0000@istrue_a3_b5_x3, 0bin0000@istrue_a3_b5_x4, 0bin0000@istrue_a3_b5_x5, 0bin0000@istrue_a3_b5_x6, 0bin0000@istrue_a3_b5_x7, 0bin0000@istrue_a3_b5_x8, 0bin0000@istrue_a3_b5_x9, 0bin0000@istrue_a3_b5_x10, 0bin0000@istrue_a3_b5_x11, 0bin0000@istrue_a3_b5_x12, 0bin0000@istrue_a3_b5_x13, 0bin0000@istrue_a3_b5_x14, 0bin0000@istrue_a3_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a3)] THEN istrue_a3_b6_x0 = 0bin1 ELSE istrue_a3_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a3)] THEN istrue_a3_b6_x1 = 0bin1 ELSE istrue_a3_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a3)] THEN istrue_a3_b6_x2 = 0bin1 ELSE istrue_a3_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a3)] THEN istrue_a3_b6_x3 = 0bin1 ELSE istrue_a3_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a3)] THEN istrue_a3_b6_x4 = 0bin1 ELSE istrue_a3_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a3)] THEN istrue_a3_b6_x5 = 0bin1 ELSE istrue_a3_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a3)] THEN istrue_a3_b6_x6 = 0bin1 ELSE istrue_a3_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a3)] THEN istrue_a3_b6_x7 = 0bin1 ELSE istrue_a3_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a3)] THEN istrue_a3_b6_x8 = 0bin1 ELSE istrue_a3_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a3)] THEN istrue_a3_b6_x9 = 0bin1 ELSE istrue_a3_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a3)] THEN istrue_a3_b6_x10 = 0bin1 ELSE istrue_a3_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a3)] THEN istrue_a3_b6_x11 = 0bin1 ELSE istrue_a3_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a3)] THEN istrue_a3_b6_x12 = 0bin1 ELSE istrue_a3_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a3)] THEN istrue_a3_b6_x13 = 0bin1 ELSE istrue_a3_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a3)] THEN istrue_a3_b6_x14 = 0bin1 ELSE istrue_a3_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a3)] THEN istrue_a3_b6_x15 = 0bin1 ELSE istrue_a3_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b6 = BVPLUS(5, 0bin0000@istrue_a3_b6_x0, 0bin0000@istrue_a3_b6_x1, 0bin0000@istrue_a3_b6_x2, 0bin0000@istrue_a3_b6_x3, 0bin0000@istrue_a3_b6_x4, 0bin0000@istrue_a3_b6_x5, 0bin0000@istrue_a3_b6_x6, 0bin0000@istrue_a3_b6_x7, 0bin0000@istrue_a3_b6_x8, 0bin0000@istrue_a3_b6_x9, 0bin0000@istrue_a3_b6_x10, 0bin0000@istrue_a3_b6_x11, 0bin0000@istrue_a3_b6_x12, 0bin0000@istrue_a3_b6_x13, 0bin0000@istrue_a3_b6_x14, 0bin0000@istrue_a3_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a3)] THEN istrue_a3_b7_x0 = 0bin1 ELSE istrue_a3_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a3)] THEN istrue_a3_b7_x1 = 0bin1 ELSE istrue_a3_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a3)] THEN istrue_a3_b7_x2 = 0bin1 ELSE istrue_a3_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a3)] THEN istrue_a3_b7_x3 = 0bin1 ELSE istrue_a3_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a3)] THEN istrue_a3_b7_x4 = 0bin1 ELSE istrue_a3_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a3)] THEN istrue_a3_b7_x5 = 0bin1 ELSE istrue_a3_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a3)] THEN istrue_a3_b7_x6 = 0bin1 ELSE istrue_a3_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a3)] THEN istrue_a3_b7_x7 = 0bin1 ELSE istrue_a3_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a3)] THEN istrue_a3_b7_x8 = 0bin1 ELSE istrue_a3_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a3)] THEN istrue_a3_b7_x9 = 0bin1 ELSE istrue_a3_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a3)] THEN istrue_a3_b7_x10 = 0bin1 ELSE istrue_a3_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a3)] THEN istrue_a3_b7_x11 = 0bin1 ELSE istrue_a3_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a3)] THEN istrue_a3_b7_x12 = 0bin1 ELSE istrue_a3_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a3)] THEN istrue_a3_b7_x13 = 0bin1 ELSE istrue_a3_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a3)] THEN istrue_a3_b7_x14 = 0bin1 ELSE istrue_a3_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a3)] THEN istrue_a3_b7_x15 = 0bin1 ELSE istrue_a3_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b7 = BVPLUS(5, 0bin0000@istrue_a3_b7_x0, 0bin0000@istrue_a3_b7_x1, 0bin0000@istrue_a3_b7_x2, 0bin0000@istrue_a3_b7_x3, 0bin0000@istrue_a3_b7_x4, 0bin0000@istrue_a3_b7_x5, 0bin0000@istrue_a3_b7_x6, 0bin0000@istrue_a3_b7_x7, 0bin0000@istrue_a3_b7_x8, 0bin0000@istrue_a3_b7_x9, 0bin0000@istrue_a3_b7_x10, 0bin0000@istrue_a3_b7_x11, 0bin0000@istrue_a3_b7_x12, 0bin0000@istrue_a3_b7_x13, 0bin0000@istrue_a3_b7_x14, 0bin0000@istrue_a3_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a3)] THEN istrue_a3_b8_x0 = 0bin1 ELSE istrue_a3_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a3)] THEN istrue_a3_b8_x1 = 0bin1 ELSE istrue_a3_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a3)] THEN istrue_a3_b8_x2 = 0bin1 ELSE istrue_a3_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a3)] THEN istrue_a3_b8_x3 = 0bin1 ELSE istrue_a3_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a3)] THEN istrue_a3_b8_x4 = 0bin1 ELSE istrue_a3_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a3)] THEN istrue_a3_b8_x5 = 0bin1 ELSE istrue_a3_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a3)] THEN istrue_a3_b8_x6 = 0bin1 ELSE istrue_a3_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a3)] THEN istrue_a3_b8_x7 = 0bin1 ELSE istrue_a3_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a3)] THEN istrue_a3_b8_x8 = 0bin1 ELSE istrue_a3_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a3)] THEN istrue_a3_b8_x9 = 0bin1 ELSE istrue_a3_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a3)] THEN istrue_a3_b8_x10 = 0bin1 ELSE istrue_a3_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a3)] THEN istrue_a3_b8_x11 = 0bin1 ELSE istrue_a3_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a3)] THEN istrue_a3_b8_x12 = 0bin1 ELSE istrue_a3_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a3)] THEN istrue_a3_b8_x13 = 0bin1 ELSE istrue_a3_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a3)] THEN istrue_a3_b8_x14 = 0bin1 ELSE istrue_a3_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a3)] THEN istrue_a3_b8_x15 = 0bin1 ELSE istrue_a3_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b8 = BVPLUS(5, 0bin0000@istrue_a3_b8_x0, 0bin0000@istrue_a3_b8_x1, 0bin0000@istrue_a3_b8_x2, 0bin0000@istrue_a3_b8_x3, 0bin0000@istrue_a3_b8_x4, 0bin0000@istrue_a3_b8_x5, 0bin0000@istrue_a3_b8_x6, 0bin0000@istrue_a3_b8_x7, 0bin0000@istrue_a3_b8_x8, 0bin0000@istrue_a3_b8_x9, 0bin0000@istrue_a3_b8_x10, 0bin0000@istrue_a3_b8_x11, 0bin0000@istrue_a3_b8_x12, 0bin0000@istrue_a3_b8_x13, 0bin0000@istrue_a3_b8_x14, 0bin0000@istrue_a3_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a3)] THEN istrue_a3_b9_x0 = 0bin1 ELSE istrue_a3_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a3)] THEN istrue_a3_b9_x1 = 0bin1 ELSE istrue_a3_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a3)] THEN istrue_a3_b9_x2 = 0bin1 ELSE istrue_a3_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a3)] THEN istrue_a3_b9_x3 = 0bin1 ELSE istrue_a3_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a3)] THEN istrue_a3_b9_x4 = 0bin1 ELSE istrue_a3_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a3)] THEN istrue_a3_b9_x5 = 0bin1 ELSE istrue_a3_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a3)] THEN istrue_a3_b9_x6 = 0bin1 ELSE istrue_a3_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a3)] THEN istrue_a3_b9_x7 = 0bin1 ELSE istrue_a3_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a3)] THEN istrue_a3_b9_x8 = 0bin1 ELSE istrue_a3_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a3)] THEN istrue_a3_b9_x9 = 0bin1 ELSE istrue_a3_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a3)] THEN istrue_a3_b9_x10 = 0bin1 ELSE istrue_a3_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a3)] THEN istrue_a3_b9_x11 = 0bin1 ELSE istrue_a3_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a3)] THEN istrue_a3_b9_x12 = 0bin1 ELSE istrue_a3_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a3)] THEN istrue_a3_b9_x13 = 0bin1 ELSE istrue_a3_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a3)] THEN istrue_a3_b9_x14 = 0bin1 ELSE istrue_a3_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a3)] THEN istrue_a3_b9_x15 = 0bin1 ELSE istrue_a3_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b9 = BVPLUS(5, 0bin0000@istrue_a3_b9_x0, 0bin0000@istrue_a3_b9_x1, 0bin0000@istrue_a3_b9_x2, 0bin0000@istrue_a3_b9_x3, 0bin0000@istrue_a3_b9_x4, 0bin0000@istrue_a3_b9_x5, 0bin0000@istrue_a3_b9_x6, 0bin0000@istrue_a3_b9_x7, 0bin0000@istrue_a3_b9_x8, 0bin0000@istrue_a3_b9_x9, 0bin0000@istrue_a3_b9_x10, 0bin0000@istrue_a3_b9_x11, 0bin0000@istrue_a3_b9_x12, 0bin0000@istrue_a3_b9_x13, 0bin0000@istrue_a3_b9_x14, 0bin0000@istrue_a3_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a3)] THEN istrue_a3_b10_x0 = 0bin1 ELSE istrue_a3_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a3)] THEN istrue_a3_b10_x1 = 0bin1 ELSE istrue_a3_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a3)] THEN istrue_a3_b10_x2 = 0bin1 ELSE istrue_a3_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a3)] THEN istrue_a3_b10_x3 = 0bin1 ELSE istrue_a3_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a3)] THEN istrue_a3_b10_x4 = 0bin1 ELSE istrue_a3_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a3)] THEN istrue_a3_b10_x5 = 0bin1 ELSE istrue_a3_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a3)] THEN istrue_a3_b10_x6 = 0bin1 ELSE istrue_a3_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a3)] THEN istrue_a3_b10_x7 = 0bin1 ELSE istrue_a3_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a3)] THEN istrue_a3_b10_x8 = 0bin1 ELSE istrue_a3_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a3)] THEN istrue_a3_b10_x9 = 0bin1 ELSE istrue_a3_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a3)] THEN istrue_a3_b10_x10 = 0bin1 ELSE istrue_a3_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a3)] THEN istrue_a3_b10_x11 = 0bin1 ELSE istrue_a3_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a3)] THEN istrue_a3_b10_x12 = 0bin1 ELSE istrue_a3_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a3)] THEN istrue_a3_b10_x13 = 0bin1 ELSE istrue_a3_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a3)] THEN istrue_a3_b10_x14 = 0bin1 ELSE istrue_a3_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a3)] THEN istrue_a3_b10_x15 = 0bin1 ELSE istrue_a3_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b10 = BVPLUS(5, 0bin0000@istrue_a3_b10_x0, 0bin0000@istrue_a3_b10_x1, 0bin0000@istrue_a3_b10_x2, 0bin0000@istrue_a3_b10_x3, 0bin0000@istrue_a3_b10_x4, 0bin0000@istrue_a3_b10_x5, 0bin0000@istrue_a3_b10_x6, 0bin0000@istrue_a3_b10_x7, 0bin0000@istrue_a3_b10_x8, 0bin0000@istrue_a3_b10_x9, 0bin0000@istrue_a3_b10_x10, 0bin0000@istrue_a3_b10_x11, 0bin0000@istrue_a3_b10_x12, 0bin0000@istrue_a3_b10_x13, 0bin0000@istrue_a3_b10_x14, 0bin0000@istrue_a3_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a3)] THEN istrue_a3_b11_x0 = 0bin1 ELSE istrue_a3_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a3)] THEN istrue_a3_b11_x1 = 0bin1 ELSE istrue_a3_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a3)] THEN istrue_a3_b11_x2 = 0bin1 ELSE istrue_a3_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a3)] THEN istrue_a3_b11_x3 = 0bin1 ELSE istrue_a3_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a3)] THEN istrue_a3_b11_x4 = 0bin1 ELSE istrue_a3_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a3)] THEN istrue_a3_b11_x5 = 0bin1 ELSE istrue_a3_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a3)] THEN istrue_a3_b11_x6 = 0bin1 ELSE istrue_a3_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a3)] THEN istrue_a3_b11_x7 = 0bin1 ELSE istrue_a3_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a3)] THEN istrue_a3_b11_x8 = 0bin1 ELSE istrue_a3_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a3)] THEN istrue_a3_b11_x9 = 0bin1 ELSE istrue_a3_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a3)] THEN istrue_a3_b11_x10 = 0bin1 ELSE istrue_a3_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a3)] THEN istrue_a3_b11_x11 = 0bin1 ELSE istrue_a3_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a3)] THEN istrue_a3_b11_x12 = 0bin1 ELSE istrue_a3_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a3)] THEN istrue_a3_b11_x13 = 0bin1 ELSE istrue_a3_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a3)] THEN istrue_a3_b11_x14 = 0bin1 ELSE istrue_a3_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a3)] THEN istrue_a3_b11_x15 = 0bin1 ELSE istrue_a3_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b11 = BVPLUS(5, 0bin0000@istrue_a3_b11_x0, 0bin0000@istrue_a3_b11_x1, 0bin0000@istrue_a3_b11_x2, 0bin0000@istrue_a3_b11_x3, 0bin0000@istrue_a3_b11_x4, 0bin0000@istrue_a3_b11_x5, 0bin0000@istrue_a3_b11_x6, 0bin0000@istrue_a3_b11_x7, 0bin0000@istrue_a3_b11_x8, 0bin0000@istrue_a3_b11_x9, 0bin0000@istrue_a3_b11_x10, 0bin0000@istrue_a3_b11_x11, 0bin0000@istrue_a3_b11_x12, 0bin0000@istrue_a3_b11_x13, 0bin0000@istrue_a3_b11_x14, 0bin0000@istrue_a3_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a3)] THEN istrue_a3_b12_x0 = 0bin1 ELSE istrue_a3_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a3)] THEN istrue_a3_b12_x1 = 0bin1 ELSE istrue_a3_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a3)] THEN istrue_a3_b12_x2 = 0bin1 ELSE istrue_a3_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a3)] THEN istrue_a3_b12_x3 = 0bin1 ELSE istrue_a3_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a3)] THEN istrue_a3_b12_x4 = 0bin1 ELSE istrue_a3_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a3)] THEN istrue_a3_b12_x5 = 0bin1 ELSE istrue_a3_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a3)] THEN istrue_a3_b12_x6 = 0bin1 ELSE istrue_a3_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a3)] THEN istrue_a3_b12_x7 = 0bin1 ELSE istrue_a3_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a3)] THEN istrue_a3_b12_x8 = 0bin1 ELSE istrue_a3_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a3)] THEN istrue_a3_b12_x9 = 0bin1 ELSE istrue_a3_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a3)] THEN istrue_a3_b12_x10 = 0bin1 ELSE istrue_a3_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a3)] THEN istrue_a3_b12_x11 = 0bin1 ELSE istrue_a3_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a3)] THEN istrue_a3_b12_x12 = 0bin1 ELSE istrue_a3_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a3)] THEN istrue_a3_b12_x13 = 0bin1 ELSE istrue_a3_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a3)] THEN istrue_a3_b12_x14 = 0bin1 ELSE istrue_a3_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a3)] THEN istrue_a3_b12_x15 = 0bin1 ELSE istrue_a3_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b12 = BVPLUS(5, 0bin0000@istrue_a3_b12_x0, 0bin0000@istrue_a3_b12_x1, 0bin0000@istrue_a3_b12_x2, 0bin0000@istrue_a3_b12_x3, 0bin0000@istrue_a3_b12_x4, 0bin0000@istrue_a3_b12_x5, 0bin0000@istrue_a3_b12_x6, 0bin0000@istrue_a3_b12_x7, 0bin0000@istrue_a3_b12_x8, 0bin0000@istrue_a3_b12_x9, 0bin0000@istrue_a3_b12_x10, 0bin0000@istrue_a3_b12_x11, 0bin0000@istrue_a3_b12_x12, 0bin0000@istrue_a3_b12_x13, 0bin0000@istrue_a3_b12_x14, 0bin0000@istrue_a3_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a3)] THEN istrue_a3_b13_x0 = 0bin1 ELSE istrue_a3_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a3)] THEN istrue_a3_b13_x1 = 0bin1 ELSE istrue_a3_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a3)] THEN istrue_a3_b13_x2 = 0bin1 ELSE istrue_a3_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a3)] THEN istrue_a3_b13_x3 = 0bin1 ELSE istrue_a3_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a3)] THEN istrue_a3_b13_x4 = 0bin1 ELSE istrue_a3_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a3)] THEN istrue_a3_b13_x5 = 0bin1 ELSE istrue_a3_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a3)] THEN istrue_a3_b13_x6 = 0bin1 ELSE istrue_a3_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a3)] THEN istrue_a3_b13_x7 = 0bin1 ELSE istrue_a3_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a3)] THEN istrue_a3_b13_x8 = 0bin1 ELSE istrue_a3_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a3)] THEN istrue_a3_b13_x9 = 0bin1 ELSE istrue_a3_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a3)] THEN istrue_a3_b13_x10 = 0bin1 ELSE istrue_a3_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a3)] THEN istrue_a3_b13_x11 = 0bin1 ELSE istrue_a3_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a3)] THEN istrue_a3_b13_x12 = 0bin1 ELSE istrue_a3_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a3)] THEN istrue_a3_b13_x13 = 0bin1 ELSE istrue_a3_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a3)] THEN istrue_a3_b13_x14 = 0bin1 ELSE istrue_a3_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a3)] THEN istrue_a3_b13_x15 = 0bin1 ELSE istrue_a3_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b13 = BVPLUS(5, 0bin0000@istrue_a3_b13_x0, 0bin0000@istrue_a3_b13_x1, 0bin0000@istrue_a3_b13_x2, 0bin0000@istrue_a3_b13_x3, 0bin0000@istrue_a3_b13_x4, 0bin0000@istrue_a3_b13_x5, 0bin0000@istrue_a3_b13_x6, 0bin0000@istrue_a3_b13_x7, 0bin0000@istrue_a3_b13_x8, 0bin0000@istrue_a3_b13_x9, 0bin0000@istrue_a3_b13_x10, 0bin0000@istrue_a3_b13_x11, 0bin0000@istrue_a3_b13_x12, 0bin0000@istrue_a3_b13_x13, 0bin0000@istrue_a3_b13_x14, 0bin0000@istrue_a3_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a3)] THEN istrue_a3_b14_x0 = 0bin1 ELSE istrue_a3_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a3)] THEN istrue_a3_b14_x1 = 0bin1 ELSE istrue_a3_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a3)] THEN istrue_a3_b14_x2 = 0bin1 ELSE istrue_a3_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a3)] THEN istrue_a3_b14_x3 = 0bin1 ELSE istrue_a3_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a3)] THEN istrue_a3_b14_x4 = 0bin1 ELSE istrue_a3_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a3)] THEN istrue_a3_b14_x5 = 0bin1 ELSE istrue_a3_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a3)] THEN istrue_a3_b14_x6 = 0bin1 ELSE istrue_a3_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a3)] THEN istrue_a3_b14_x7 = 0bin1 ELSE istrue_a3_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a3)] THEN istrue_a3_b14_x8 = 0bin1 ELSE istrue_a3_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a3)] THEN istrue_a3_b14_x9 = 0bin1 ELSE istrue_a3_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a3)] THEN istrue_a3_b14_x10 = 0bin1 ELSE istrue_a3_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a3)] THEN istrue_a3_b14_x11 = 0bin1 ELSE istrue_a3_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a3)] THEN istrue_a3_b14_x12 = 0bin1 ELSE istrue_a3_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a3)] THEN istrue_a3_b14_x13 = 0bin1 ELSE istrue_a3_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a3)] THEN istrue_a3_b14_x14 = 0bin1 ELSE istrue_a3_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a3)] THEN istrue_a3_b14_x15 = 0bin1 ELSE istrue_a3_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b14 = BVPLUS(5, 0bin0000@istrue_a3_b14_x0, 0bin0000@istrue_a3_b14_x1, 0bin0000@istrue_a3_b14_x2, 0bin0000@istrue_a3_b14_x3, 0bin0000@istrue_a3_b14_x4, 0bin0000@istrue_a3_b14_x5, 0bin0000@istrue_a3_b14_x6, 0bin0000@istrue_a3_b14_x7, 0bin0000@istrue_a3_b14_x8, 0bin0000@istrue_a3_b14_x9, 0bin0000@istrue_a3_b14_x10, 0bin0000@istrue_a3_b14_x11, 0bin0000@istrue_a3_b14_x12, 0bin0000@istrue_a3_b14_x13, 0bin0000@istrue_a3_b14_x14, 0bin0000@istrue_a3_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a3)] THEN istrue_a3_b15_x0 = 0bin1 ELSE istrue_a3_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a3)] THEN istrue_a3_b15_x1 = 0bin1 ELSE istrue_a3_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a3)] THEN istrue_a3_b15_x2 = 0bin1 ELSE istrue_a3_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a3)] THEN istrue_a3_b15_x3 = 0bin1 ELSE istrue_a3_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a3)] THEN istrue_a3_b15_x4 = 0bin1 ELSE istrue_a3_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a3)] THEN istrue_a3_b15_x5 = 0bin1 ELSE istrue_a3_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a3)] THEN istrue_a3_b15_x6 = 0bin1 ELSE istrue_a3_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a3)] THEN istrue_a3_b15_x7 = 0bin1 ELSE istrue_a3_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a3)] THEN istrue_a3_b15_x8 = 0bin1 ELSE istrue_a3_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a3)] THEN istrue_a3_b15_x9 = 0bin1 ELSE istrue_a3_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a3)] THEN istrue_a3_b15_x10 = 0bin1 ELSE istrue_a3_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a3)] THEN istrue_a3_b15_x11 = 0bin1 ELSE istrue_a3_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a3)] THEN istrue_a3_b15_x12 = 0bin1 ELSE istrue_a3_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a3)] THEN istrue_a3_b15_x13 = 0bin1 ELSE istrue_a3_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a3)] THEN istrue_a3_b15_x14 = 0bin1 ELSE istrue_a3_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a3)] THEN istrue_a3_b15_x15 = 0bin1 ELSE istrue_a3_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a3_b15 = BVPLUS(5, 0bin0000@istrue_a3_b15_x0, 0bin0000@istrue_a3_b15_x1, 0bin0000@istrue_a3_b15_x2, 0bin0000@istrue_a3_b15_x3, 0bin0000@istrue_a3_b15_x4, 0bin0000@istrue_a3_b15_x5, 0bin0000@istrue_a3_b15_x6, 0bin0000@istrue_a3_b15_x7, 0bin0000@istrue_a3_b15_x8, 0bin0000@istrue_a3_b15_x9, 0bin0000@istrue_a3_b15_x10, 0bin0000@istrue_a3_b15_x11, 0bin0000@istrue_a3_b15_x12, 0bin0000@istrue_a3_b15_x13, 0bin0000@istrue_a3_b15_x14, 0bin0000@istrue_a3_b15_x15));
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a4)] THEN istrue_a4_b0_x0 = 0bin1 ELSE istrue_a4_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a4)] THEN istrue_a4_b0_x1 = 0bin1 ELSE istrue_a4_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a4)] THEN istrue_a4_b0_x2 = 0bin1 ELSE istrue_a4_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a4)] THEN istrue_a4_b0_x3 = 0bin1 ELSE istrue_a4_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a4)] THEN istrue_a4_b0_x4 = 0bin1 ELSE istrue_a4_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a4)] THEN istrue_a4_b0_x5 = 0bin1 ELSE istrue_a4_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a4)] THEN istrue_a4_b0_x6 = 0bin1 ELSE istrue_a4_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a4)] THEN istrue_a4_b0_x7 = 0bin1 ELSE istrue_a4_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a4)] THEN istrue_a4_b0_x8 = 0bin1 ELSE istrue_a4_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a4)] THEN istrue_a4_b0_x9 = 0bin1 ELSE istrue_a4_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a4)] THEN istrue_a4_b0_x10 = 0bin1 ELSE istrue_a4_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a4)] THEN istrue_a4_b0_x11 = 0bin1 ELSE istrue_a4_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a4)] THEN istrue_a4_b0_x12 = 0bin1 ELSE istrue_a4_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a4)] THEN istrue_a4_b0_x13 = 0bin1 ELSE istrue_a4_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a4)] THEN istrue_a4_b0_x14 = 0bin1 ELSE istrue_a4_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a4)] THEN istrue_a4_b0_x15 = 0bin1 ELSE istrue_a4_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b0 = BVPLUS(5, 0bin0000@istrue_a4_b0_x0, 0bin0000@istrue_a4_b0_x1, 0bin0000@istrue_a4_b0_x2, 0bin0000@istrue_a4_b0_x3, 0bin0000@istrue_a4_b0_x4, 0bin0000@istrue_a4_b0_x5, 0bin0000@istrue_a4_b0_x6, 0bin0000@istrue_a4_b0_x7, 0bin0000@istrue_a4_b0_x8, 0bin0000@istrue_a4_b0_x9, 0bin0000@istrue_a4_b0_x10, 0bin0000@istrue_a4_b0_x11, 0bin0000@istrue_a4_b0_x12, 0bin0000@istrue_a4_b0_x13, 0bin0000@istrue_a4_b0_x14, 0bin0000@istrue_a4_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a4)] THEN istrue_a4_b1_x0 = 0bin1 ELSE istrue_a4_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a4)] THEN istrue_a4_b1_x1 = 0bin1 ELSE istrue_a4_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a4)] THEN istrue_a4_b1_x2 = 0bin1 ELSE istrue_a4_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a4)] THEN istrue_a4_b1_x3 = 0bin1 ELSE istrue_a4_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a4)] THEN istrue_a4_b1_x4 = 0bin1 ELSE istrue_a4_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a4)] THEN istrue_a4_b1_x5 = 0bin1 ELSE istrue_a4_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a4)] THEN istrue_a4_b1_x6 = 0bin1 ELSE istrue_a4_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a4)] THEN istrue_a4_b1_x7 = 0bin1 ELSE istrue_a4_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a4)] THEN istrue_a4_b1_x8 = 0bin1 ELSE istrue_a4_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a4)] THEN istrue_a4_b1_x9 = 0bin1 ELSE istrue_a4_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a4)] THEN istrue_a4_b1_x10 = 0bin1 ELSE istrue_a4_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a4)] THEN istrue_a4_b1_x11 = 0bin1 ELSE istrue_a4_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a4)] THEN istrue_a4_b1_x12 = 0bin1 ELSE istrue_a4_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a4)] THEN istrue_a4_b1_x13 = 0bin1 ELSE istrue_a4_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a4)] THEN istrue_a4_b1_x14 = 0bin1 ELSE istrue_a4_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a4)] THEN istrue_a4_b1_x15 = 0bin1 ELSE istrue_a4_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b1 = BVPLUS(5, 0bin0000@istrue_a4_b1_x0, 0bin0000@istrue_a4_b1_x1, 0bin0000@istrue_a4_b1_x2, 0bin0000@istrue_a4_b1_x3, 0bin0000@istrue_a4_b1_x4, 0bin0000@istrue_a4_b1_x5, 0bin0000@istrue_a4_b1_x6, 0bin0000@istrue_a4_b1_x7, 0bin0000@istrue_a4_b1_x8, 0bin0000@istrue_a4_b1_x9, 0bin0000@istrue_a4_b1_x10, 0bin0000@istrue_a4_b1_x11, 0bin0000@istrue_a4_b1_x12, 0bin0000@istrue_a4_b1_x13, 0bin0000@istrue_a4_b1_x14, 0bin0000@istrue_a4_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a4)] THEN istrue_a4_b2_x0 = 0bin1 ELSE istrue_a4_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a4)] THEN istrue_a4_b2_x1 = 0bin1 ELSE istrue_a4_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a4)] THEN istrue_a4_b2_x2 = 0bin1 ELSE istrue_a4_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a4)] THEN istrue_a4_b2_x3 = 0bin1 ELSE istrue_a4_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a4)] THEN istrue_a4_b2_x4 = 0bin1 ELSE istrue_a4_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a4)] THEN istrue_a4_b2_x5 = 0bin1 ELSE istrue_a4_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a4)] THEN istrue_a4_b2_x6 = 0bin1 ELSE istrue_a4_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a4)] THEN istrue_a4_b2_x7 = 0bin1 ELSE istrue_a4_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a4)] THEN istrue_a4_b2_x8 = 0bin1 ELSE istrue_a4_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a4)] THEN istrue_a4_b2_x9 = 0bin1 ELSE istrue_a4_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a4)] THEN istrue_a4_b2_x10 = 0bin1 ELSE istrue_a4_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a4)] THEN istrue_a4_b2_x11 = 0bin1 ELSE istrue_a4_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a4)] THEN istrue_a4_b2_x12 = 0bin1 ELSE istrue_a4_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a4)] THEN istrue_a4_b2_x13 = 0bin1 ELSE istrue_a4_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a4)] THEN istrue_a4_b2_x14 = 0bin1 ELSE istrue_a4_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a4)] THEN istrue_a4_b2_x15 = 0bin1 ELSE istrue_a4_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b2 = BVPLUS(5, 0bin0000@istrue_a4_b2_x0, 0bin0000@istrue_a4_b2_x1, 0bin0000@istrue_a4_b2_x2, 0bin0000@istrue_a4_b2_x3, 0bin0000@istrue_a4_b2_x4, 0bin0000@istrue_a4_b2_x5, 0bin0000@istrue_a4_b2_x6, 0bin0000@istrue_a4_b2_x7, 0bin0000@istrue_a4_b2_x8, 0bin0000@istrue_a4_b2_x9, 0bin0000@istrue_a4_b2_x10, 0bin0000@istrue_a4_b2_x11, 0bin0000@istrue_a4_b2_x12, 0bin0000@istrue_a4_b2_x13, 0bin0000@istrue_a4_b2_x14, 0bin0000@istrue_a4_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a4)] THEN istrue_a4_b3_x0 = 0bin1 ELSE istrue_a4_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a4)] THEN istrue_a4_b3_x1 = 0bin1 ELSE istrue_a4_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a4)] THEN istrue_a4_b3_x2 = 0bin1 ELSE istrue_a4_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a4)] THEN istrue_a4_b3_x3 = 0bin1 ELSE istrue_a4_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a4)] THEN istrue_a4_b3_x4 = 0bin1 ELSE istrue_a4_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a4)] THEN istrue_a4_b3_x5 = 0bin1 ELSE istrue_a4_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a4)] THEN istrue_a4_b3_x6 = 0bin1 ELSE istrue_a4_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a4)] THEN istrue_a4_b3_x7 = 0bin1 ELSE istrue_a4_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a4)] THEN istrue_a4_b3_x8 = 0bin1 ELSE istrue_a4_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a4)] THEN istrue_a4_b3_x9 = 0bin1 ELSE istrue_a4_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a4)] THEN istrue_a4_b3_x10 = 0bin1 ELSE istrue_a4_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a4)] THEN istrue_a4_b3_x11 = 0bin1 ELSE istrue_a4_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a4)] THEN istrue_a4_b3_x12 = 0bin1 ELSE istrue_a4_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a4)] THEN istrue_a4_b3_x13 = 0bin1 ELSE istrue_a4_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a4)] THEN istrue_a4_b3_x14 = 0bin1 ELSE istrue_a4_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a4)] THEN istrue_a4_b3_x15 = 0bin1 ELSE istrue_a4_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b3 = BVPLUS(5, 0bin0000@istrue_a4_b3_x0, 0bin0000@istrue_a4_b3_x1, 0bin0000@istrue_a4_b3_x2, 0bin0000@istrue_a4_b3_x3, 0bin0000@istrue_a4_b3_x4, 0bin0000@istrue_a4_b3_x5, 0bin0000@istrue_a4_b3_x6, 0bin0000@istrue_a4_b3_x7, 0bin0000@istrue_a4_b3_x8, 0bin0000@istrue_a4_b3_x9, 0bin0000@istrue_a4_b3_x10, 0bin0000@istrue_a4_b3_x11, 0bin0000@istrue_a4_b3_x12, 0bin0000@istrue_a4_b3_x13, 0bin0000@istrue_a4_b3_x14, 0bin0000@istrue_a4_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a4)] THEN istrue_a4_b4_x0 = 0bin1 ELSE istrue_a4_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a4)] THEN istrue_a4_b4_x1 = 0bin1 ELSE istrue_a4_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a4)] THEN istrue_a4_b4_x2 = 0bin1 ELSE istrue_a4_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a4)] THEN istrue_a4_b4_x3 = 0bin1 ELSE istrue_a4_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a4)] THEN istrue_a4_b4_x4 = 0bin1 ELSE istrue_a4_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a4)] THEN istrue_a4_b4_x5 = 0bin1 ELSE istrue_a4_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a4)] THEN istrue_a4_b4_x6 = 0bin1 ELSE istrue_a4_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a4)] THEN istrue_a4_b4_x7 = 0bin1 ELSE istrue_a4_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a4)] THEN istrue_a4_b4_x8 = 0bin1 ELSE istrue_a4_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a4)] THEN istrue_a4_b4_x9 = 0bin1 ELSE istrue_a4_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a4)] THEN istrue_a4_b4_x10 = 0bin1 ELSE istrue_a4_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a4)] THEN istrue_a4_b4_x11 = 0bin1 ELSE istrue_a4_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a4)] THEN istrue_a4_b4_x12 = 0bin1 ELSE istrue_a4_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a4)] THEN istrue_a4_b4_x13 = 0bin1 ELSE istrue_a4_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a4)] THEN istrue_a4_b4_x14 = 0bin1 ELSE istrue_a4_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a4)] THEN istrue_a4_b4_x15 = 0bin1 ELSE istrue_a4_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b4 = BVPLUS(5, 0bin0000@istrue_a4_b4_x0, 0bin0000@istrue_a4_b4_x1, 0bin0000@istrue_a4_b4_x2, 0bin0000@istrue_a4_b4_x3, 0bin0000@istrue_a4_b4_x4, 0bin0000@istrue_a4_b4_x5, 0bin0000@istrue_a4_b4_x6, 0bin0000@istrue_a4_b4_x7, 0bin0000@istrue_a4_b4_x8, 0bin0000@istrue_a4_b4_x9, 0bin0000@istrue_a4_b4_x10, 0bin0000@istrue_a4_b4_x11, 0bin0000@istrue_a4_b4_x12, 0bin0000@istrue_a4_b4_x13, 0bin0000@istrue_a4_b4_x14, 0bin0000@istrue_a4_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a4)] THEN istrue_a4_b5_x0 = 0bin1 ELSE istrue_a4_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a4)] THEN istrue_a4_b5_x1 = 0bin1 ELSE istrue_a4_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a4)] THEN istrue_a4_b5_x2 = 0bin1 ELSE istrue_a4_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a4)] THEN istrue_a4_b5_x3 = 0bin1 ELSE istrue_a4_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a4)] THEN istrue_a4_b5_x4 = 0bin1 ELSE istrue_a4_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a4)] THEN istrue_a4_b5_x5 = 0bin1 ELSE istrue_a4_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a4)] THEN istrue_a4_b5_x6 = 0bin1 ELSE istrue_a4_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a4)] THEN istrue_a4_b5_x7 = 0bin1 ELSE istrue_a4_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a4)] THEN istrue_a4_b5_x8 = 0bin1 ELSE istrue_a4_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a4)] THEN istrue_a4_b5_x9 = 0bin1 ELSE istrue_a4_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a4)] THEN istrue_a4_b5_x10 = 0bin1 ELSE istrue_a4_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a4)] THEN istrue_a4_b5_x11 = 0bin1 ELSE istrue_a4_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a4)] THEN istrue_a4_b5_x12 = 0bin1 ELSE istrue_a4_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a4)] THEN istrue_a4_b5_x13 = 0bin1 ELSE istrue_a4_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a4)] THEN istrue_a4_b5_x14 = 0bin1 ELSE istrue_a4_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a4)] THEN istrue_a4_b5_x15 = 0bin1 ELSE istrue_a4_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b5 = BVPLUS(5, 0bin0000@istrue_a4_b5_x0, 0bin0000@istrue_a4_b5_x1, 0bin0000@istrue_a4_b5_x2, 0bin0000@istrue_a4_b5_x3, 0bin0000@istrue_a4_b5_x4, 0bin0000@istrue_a4_b5_x5, 0bin0000@istrue_a4_b5_x6, 0bin0000@istrue_a4_b5_x7, 0bin0000@istrue_a4_b5_x8, 0bin0000@istrue_a4_b5_x9, 0bin0000@istrue_a4_b5_x10, 0bin0000@istrue_a4_b5_x11, 0bin0000@istrue_a4_b5_x12, 0bin0000@istrue_a4_b5_x13, 0bin0000@istrue_a4_b5_x14, 0bin0000@istrue_a4_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a4)] THEN istrue_a4_b6_x0 = 0bin1 ELSE istrue_a4_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a4)] THEN istrue_a4_b6_x1 = 0bin1 ELSE istrue_a4_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a4)] THEN istrue_a4_b6_x2 = 0bin1 ELSE istrue_a4_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a4)] THEN istrue_a4_b6_x3 = 0bin1 ELSE istrue_a4_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a4)] THEN istrue_a4_b6_x4 = 0bin1 ELSE istrue_a4_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a4)] THEN istrue_a4_b6_x5 = 0bin1 ELSE istrue_a4_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a4)] THEN istrue_a4_b6_x6 = 0bin1 ELSE istrue_a4_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a4)] THEN istrue_a4_b6_x7 = 0bin1 ELSE istrue_a4_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a4)] THEN istrue_a4_b6_x8 = 0bin1 ELSE istrue_a4_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a4)] THEN istrue_a4_b6_x9 = 0bin1 ELSE istrue_a4_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a4)] THEN istrue_a4_b6_x10 = 0bin1 ELSE istrue_a4_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a4)] THEN istrue_a4_b6_x11 = 0bin1 ELSE istrue_a4_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a4)] THEN istrue_a4_b6_x12 = 0bin1 ELSE istrue_a4_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a4)] THEN istrue_a4_b6_x13 = 0bin1 ELSE istrue_a4_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a4)] THEN istrue_a4_b6_x14 = 0bin1 ELSE istrue_a4_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a4)] THEN istrue_a4_b6_x15 = 0bin1 ELSE istrue_a4_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b6 = BVPLUS(5, 0bin0000@istrue_a4_b6_x0, 0bin0000@istrue_a4_b6_x1, 0bin0000@istrue_a4_b6_x2, 0bin0000@istrue_a4_b6_x3, 0bin0000@istrue_a4_b6_x4, 0bin0000@istrue_a4_b6_x5, 0bin0000@istrue_a4_b6_x6, 0bin0000@istrue_a4_b6_x7, 0bin0000@istrue_a4_b6_x8, 0bin0000@istrue_a4_b6_x9, 0bin0000@istrue_a4_b6_x10, 0bin0000@istrue_a4_b6_x11, 0bin0000@istrue_a4_b6_x12, 0bin0000@istrue_a4_b6_x13, 0bin0000@istrue_a4_b6_x14, 0bin0000@istrue_a4_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a4)] THEN istrue_a4_b7_x0 = 0bin1 ELSE istrue_a4_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a4)] THEN istrue_a4_b7_x1 = 0bin1 ELSE istrue_a4_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a4)] THEN istrue_a4_b7_x2 = 0bin1 ELSE istrue_a4_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a4)] THEN istrue_a4_b7_x3 = 0bin1 ELSE istrue_a4_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a4)] THEN istrue_a4_b7_x4 = 0bin1 ELSE istrue_a4_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a4)] THEN istrue_a4_b7_x5 = 0bin1 ELSE istrue_a4_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a4)] THEN istrue_a4_b7_x6 = 0bin1 ELSE istrue_a4_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a4)] THEN istrue_a4_b7_x7 = 0bin1 ELSE istrue_a4_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a4)] THEN istrue_a4_b7_x8 = 0bin1 ELSE istrue_a4_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a4)] THEN istrue_a4_b7_x9 = 0bin1 ELSE istrue_a4_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a4)] THEN istrue_a4_b7_x10 = 0bin1 ELSE istrue_a4_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a4)] THEN istrue_a4_b7_x11 = 0bin1 ELSE istrue_a4_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a4)] THEN istrue_a4_b7_x12 = 0bin1 ELSE istrue_a4_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a4)] THEN istrue_a4_b7_x13 = 0bin1 ELSE istrue_a4_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a4)] THEN istrue_a4_b7_x14 = 0bin1 ELSE istrue_a4_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a4)] THEN istrue_a4_b7_x15 = 0bin1 ELSE istrue_a4_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b7 = BVPLUS(5, 0bin0000@istrue_a4_b7_x0, 0bin0000@istrue_a4_b7_x1, 0bin0000@istrue_a4_b7_x2, 0bin0000@istrue_a4_b7_x3, 0bin0000@istrue_a4_b7_x4, 0bin0000@istrue_a4_b7_x5, 0bin0000@istrue_a4_b7_x6, 0bin0000@istrue_a4_b7_x7, 0bin0000@istrue_a4_b7_x8, 0bin0000@istrue_a4_b7_x9, 0bin0000@istrue_a4_b7_x10, 0bin0000@istrue_a4_b7_x11, 0bin0000@istrue_a4_b7_x12, 0bin0000@istrue_a4_b7_x13, 0bin0000@istrue_a4_b7_x14, 0bin0000@istrue_a4_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a4)] THEN istrue_a4_b8_x0 = 0bin1 ELSE istrue_a4_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a4)] THEN istrue_a4_b8_x1 = 0bin1 ELSE istrue_a4_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a4)] THEN istrue_a4_b8_x2 = 0bin1 ELSE istrue_a4_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a4)] THEN istrue_a4_b8_x3 = 0bin1 ELSE istrue_a4_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a4)] THEN istrue_a4_b8_x4 = 0bin1 ELSE istrue_a4_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a4)] THEN istrue_a4_b8_x5 = 0bin1 ELSE istrue_a4_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a4)] THEN istrue_a4_b8_x6 = 0bin1 ELSE istrue_a4_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a4)] THEN istrue_a4_b8_x7 = 0bin1 ELSE istrue_a4_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a4)] THEN istrue_a4_b8_x8 = 0bin1 ELSE istrue_a4_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a4)] THEN istrue_a4_b8_x9 = 0bin1 ELSE istrue_a4_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a4)] THEN istrue_a4_b8_x10 = 0bin1 ELSE istrue_a4_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a4)] THEN istrue_a4_b8_x11 = 0bin1 ELSE istrue_a4_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a4)] THEN istrue_a4_b8_x12 = 0bin1 ELSE istrue_a4_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a4)] THEN istrue_a4_b8_x13 = 0bin1 ELSE istrue_a4_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a4)] THEN istrue_a4_b8_x14 = 0bin1 ELSE istrue_a4_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a4)] THEN istrue_a4_b8_x15 = 0bin1 ELSE istrue_a4_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b8 = BVPLUS(5, 0bin0000@istrue_a4_b8_x0, 0bin0000@istrue_a4_b8_x1, 0bin0000@istrue_a4_b8_x2, 0bin0000@istrue_a4_b8_x3, 0bin0000@istrue_a4_b8_x4, 0bin0000@istrue_a4_b8_x5, 0bin0000@istrue_a4_b8_x6, 0bin0000@istrue_a4_b8_x7, 0bin0000@istrue_a4_b8_x8, 0bin0000@istrue_a4_b8_x9, 0bin0000@istrue_a4_b8_x10, 0bin0000@istrue_a4_b8_x11, 0bin0000@istrue_a4_b8_x12, 0bin0000@istrue_a4_b8_x13, 0bin0000@istrue_a4_b8_x14, 0bin0000@istrue_a4_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a4)] THEN istrue_a4_b9_x0 = 0bin1 ELSE istrue_a4_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a4)] THEN istrue_a4_b9_x1 = 0bin1 ELSE istrue_a4_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a4)] THEN istrue_a4_b9_x2 = 0bin1 ELSE istrue_a4_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a4)] THEN istrue_a4_b9_x3 = 0bin1 ELSE istrue_a4_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a4)] THEN istrue_a4_b9_x4 = 0bin1 ELSE istrue_a4_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a4)] THEN istrue_a4_b9_x5 = 0bin1 ELSE istrue_a4_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a4)] THEN istrue_a4_b9_x6 = 0bin1 ELSE istrue_a4_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a4)] THEN istrue_a4_b9_x7 = 0bin1 ELSE istrue_a4_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a4)] THEN istrue_a4_b9_x8 = 0bin1 ELSE istrue_a4_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a4)] THEN istrue_a4_b9_x9 = 0bin1 ELSE istrue_a4_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a4)] THEN istrue_a4_b9_x10 = 0bin1 ELSE istrue_a4_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a4)] THEN istrue_a4_b9_x11 = 0bin1 ELSE istrue_a4_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a4)] THEN istrue_a4_b9_x12 = 0bin1 ELSE istrue_a4_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a4)] THEN istrue_a4_b9_x13 = 0bin1 ELSE istrue_a4_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a4)] THEN istrue_a4_b9_x14 = 0bin1 ELSE istrue_a4_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a4)] THEN istrue_a4_b9_x15 = 0bin1 ELSE istrue_a4_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b9 = BVPLUS(5, 0bin0000@istrue_a4_b9_x0, 0bin0000@istrue_a4_b9_x1, 0bin0000@istrue_a4_b9_x2, 0bin0000@istrue_a4_b9_x3, 0bin0000@istrue_a4_b9_x4, 0bin0000@istrue_a4_b9_x5, 0bin0000@istrue_a4_b9_x6, 0bin0000@istrue_a4_b9_x7, 0bin0000@istrue_a4_b9_x8, 0bin0000@istrue_a4_b9_x9, 0bin0000@istrue_a4_b9_x10, 0bin0000@istrue_a4_b9_x11, 0bin0000@istrue_a4_b9_x12, 0bin0000@istrue_a4_b9_x13, 0bin0000@istrue_a4_b9_x14, 0bin0000@istrue_a4_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a4)] THEN istrue_a4_b10_x0 = 0bin1 ELSE istrue_a4_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a4)] THEN istrue_a4_b10_x1 = 0bin1 ELSE istrue_a4_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a4)] THEN istrue_a4_b10_x2 = 0bin1 ELSE istrue_a4_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a4)] THEN istrue_a4_b10_x3 = 0bin1 ELSE istrue_a4_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a4)] THEN istrue_a4_b10_x4 = 0bin1 ELSE istrue_a4_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a4)] THEN istrue_a4_b10_x5 = 0bin1 ELSE istrue_a4_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a4)] THEN istrue_a4_b10_x6 = 0bin1 ELSE istrue_a4_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a4)] THEN istrue_a4_b10_x7 = 0bin1 ELSE istrue_a4_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a4)] THEN istrue_a4_b10_x8 = 0bin1 ELSE istrue_a4_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a4)] THEN istrue_a4_b10_x9 = 0bin1 ELSE istrue_a4_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a4)] THEN istrue_a4_b10_x10 = 0bin1 ELSE istrue_a4_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a4)] THEN istrue_a4_b10_x11 = 0bin1 ELSE istrue_a4_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a4)] THEN istrue_a4_b10_x12 = 0bin1 ELSE istrue_a4_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a4)] THEN istrue_a4_b10_x13 = 0bin1 ELSE istrue_a4_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a4)] THEN istrue_a4_b10_x14 = 0bin1 ELSE istrue_a4_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a4)] THEN istrue_a4_b10_x15 = 0bin1 ELSE istrue_a4_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b10 = BVPLUS(5, 0bin0000@istrue_a4_b10_x0, 0bin0000@istrue_a4_b10_x1, 0bin0000@istrue_a4_b10_x2, 0bin0000@istrue_a4_b10_x3, 0bin0000@istrue_a4_b10_x4, 0bin0000@istrue_a4_b10_x5, 0bin0000@istrue_a4_b10_x6, 0bin0000@istrue_a4_b10_x7, 0bin0000@istrue_a4_b10_x8, 0bin0000@istrue_a4_b10_x9, 0bin0000@istrue_a4_b10_x10, 0bin0000@istrue_a4_b10_x11, 0bin0000@istrue_a4_b10_x12, 0bin0000@istrue_a4_b10_x13, 0bin0000@istrue_a4_b10_x14, 0bin0000@istrue_a4_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a4)] THEN istrue_a4_b11_x0 = 0bin1 ELSE istrue_a4_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a4)] THEN istrue_a4_b11_x1 = 0bin1 ELSE istrue_a4_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a4)] THEN istrue_a4_b11_x2 = 0bin1 ELSE istrue_a4_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a4)] THEN istrue_a4_b11_x3 = 0bin1 ELSE istrue_a4_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a4)] THEN istrue_a4_b11_x4 = 0bin1 ELSE istrue_a4_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a4)] THEN istrue_a4_b11_x5 = 0bin1 ELSE istrue_a4_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a4)] THEN istrue_a4_b11_x6 = 0bin1 ELSE istrue_a4_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a4)] THEN istrue_a4_b11_x7 = 0bin1 ELSE istrue_a4_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a4)] THEN istrue_a4_b11_x8 = 0bin1 ELSE istrue_a4_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a4)] THEN istrue_a4_b11_x9 = 0bin1 ELSE istrue_a4_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a4)] THEN istrue_a4_b11_x10 = 0bin1 ELSE istrue_a4_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a4)] THEN istrue_a4_b11_x11 = 0bin1 ELSE istrue_a4_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a4)] THEN istrue_a4_b11_x12 = 0bin1 ELSE istrue_a4_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a4)] THEN istrue_a4_b11_x13 = 0bin1 ELSE istrue_a4_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a4)] THEN istrue_a4_b11_x14 = 0bin1 ELSE istrue_a4_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a4)] THEN istrue_a4_b11_x15 = 0bin1 ELSE istrue_a4_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b11 = BVPLUS(5, 0bin0000@istrue_a4_b11_x0, 0bin0000@istrue_a4_b11_x1, 0bin0000@istrue_a4_b11_x2, 0bin0000@istrue_a4_b11_x3, 0bin0000@istrue_a4_b11_x4, 0bin0000@istrue_a4_b11_x5, 0bin0000@istrue_a4_b11_x6, 0bin0000@istrue_a4_b11_x7, 0bin0000@istrue_a4_b11_x8, 0bin0000@istrue_a4_b11_x9, 0bin0000@istrue_a4_b11_x10, 0bin0000@istrue_a4_b11_x11, 0bin0000@istrue_a4_b11_x12, 0bin0000@istrue_a4_b11_x13, 0bin0000@istrue_a4_b11_x14, 0bin0000@istrue_a4_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a4)] THEN istrue_a4_b12_x0 = 0bin1 ELSE istrue_a4_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a4)] THEN istrue_a4_b12_x1 = 0bin1 ELSE istrue_a4_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a4)] THEN istrue_a4_b12_x2 = 0bin1 ELSE istrue_a4_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a4)] THEN istrue_a4_b12_x3 = 0bin1 ELSE istrue_a4_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a4)] THEN istrue_a4_b12_x4 = 0bin1 ELSE istrue_a4_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a4)] THEN istrue_a4_b12_x5 = 0bin1 ELSE istrue_a4_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a4)] THEN istrue_a4_b12_x6 = 0bin1 ELSE istrue_a4_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a4)] THEN istrue_a4_b12_x7 = 0bin1 ELSE istrue_a4_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a4)] THEN istrue_a4_b12_x8 = 0bin1 ELSE istrue_a4_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a4)] THEN istrue_a4_b12_x9 = 0bin1 ELSE istrue_a4_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a4)] THEN istrue_a4_b12_x10 = 0bin1 ELSE istrue_a4_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a4)] THEN istrue_a4_b12_x11 = 0bin1 ELSE istrue_a4_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a4)] THEN istrue_a4_b12_x12 = 0bin1 ELSE istrue_a4_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a4)] THEN istrue_a4_b12_x13 = 0bin1 ELSE istrue_a4_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a4)] THEN istrue_a4_b12_x14 = 0bin1 ELSE istrue_a4_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a4)] THEN istrue_a4_b12_x15 = 0bin1 ELSE istrue_a4_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b12 = BVPLUS(5, 0bin0000@istrue_a4_b12_x0, 0bin0000@istrue_a4_b12_x1, 0bin0000@istrue_a4_b12_x2, 0bin0000@istrue_a4_b12_x3, 0bin0000@istrue_a4_b12_x4, 0bin0000@istrue_a4_b12_x5, 0bin0000@istrue_a4_b12_x6, 0bin0000@istrue_a4_b12_x7, 0bin0000@istrue_a4_b12_x8, 0bin0000@istrue_a4_b12_x9, 0bin0000@istrue_a4_b12_x10, 0bin0000@istrue_a4_b12_x11, 0bin0000@istrue_a4_b12_x12, 0bin0000@istrue_a4_b12_x13, 0bin0000@istrue_a4_b12_x14, 0bin0000@istrue_a4_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a4)] THEN istrue_a4_b13_x0 = 0bin1 ELSE istrue_a4_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a4)] THEN istrue_a4_b13_x1 = 0bin1 ELSE istrue_a4_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a4)] THEN istrue_a4_b13_x2 = 0bin1 ELSE istrue_a4_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a4)] THEN istrue_a4_b13_x3 = 0bin1 ELSE istrue_a4_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a4)] THEN istrue_a4_b13_x4 = 0bin1 ELSE istrue_a4_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a4)] THEN istrue_a4_b13_x5 = 0bin1 ELSE istrue_a4_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a4)] THEN istrue_a4_b13_x6 = 0bin1 ELSE istrue_a4_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a4)] THEN istrue_a4_b13_x7 = 0bin1 ELSE istrue_a4_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a4)] THEN istrue_a4_b13_x8 = 0bin1 ELSE istrue_a4_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a4)] THEN istrue_a4_b13_x9 = 0bin1 ELSE istrue_a4_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a4)] THEN istrue_a4_b13_x10 = 0bin1 ELSE istrue_a4_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a4)] THEN istrue_a4_b13_x11 = 0bin1 ELSE istrue_a4_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a4)] THEN istrue_a4_b13_x12 = 0bin1 ELSE istrue_a4_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a4)] THEN istrue_a4_b13_x13 = 0bin1 ELSE istrue_a4_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a4)] THEN istrue_a4_b13_x14 = 0bin1 ELSE istrue_a4_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a4)] THEN istrue_a4_b13_x15 = 0bin1 ELSE istrue_a4_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b13 = BVPLUS(5, 0bin0000@istrue_a4_b13_x0, 0bin0000@istrue_a4_b13_x1, 0bin0000@istrue_a4_b13_x2, 0bin0000@istrue_a4_b13_x3, 0bin0000@istrue_a4_b13_x4, 0bin0000@istrue_a4_b13_x5, 0bin0000@istrue_a4_b13_x6, 0bin0000@istrue_a4_b13_x7, 0bin0000@istrue_a4_b13_x8, 0bin0000@istrue_a4_b13_x9, 0bin0000@istrue_a4_b13_x10, 0bin0000@istrue_a4_b13_x11, 0bin0000@istrue_a4_b13_x12, 0bin0000@istrue_a4_b13_x13, 0bin0000@istrue_a4_b13_x14, 0bin0000@istrue_a4_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a4)] THEN istrue_a4_b14_x0 = 0bin1 ELSE istrue_a4_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a4)] THEN istrue_a4_b14_x1 = 0bin1 ELSE istrue_a4_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a4)] THEN istrue_a4_b14_x2 = 0bin1 ELSE istrue_a4_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a4)] THEN istrue_a4_b14_x3 = 0bin1 ELSE istrue_a4_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a4)] THEN istrue_a4_b14_x4 = 0bin1 ELSE istrue_a4_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a4)] THEN istrue_a4_b14_x5 = 0bin1 ELSE istrue_a4_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a4)] THEN istrue_a4_b14_x6 = 0bin1 ELSE istrue_a4_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a4)] THEN istrue_a4_b14_x7 = 0bin1 ELSE istrue_a4_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a4)] THEN istrue_a4_b14_x8 = 0bin1 ELSE istrue_a4_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a4)] THEN istrue_a4_b14_x9 = 0bin1 ELSE istrue_a4_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a4)] THEN istrue_a4_b14_x10 = 0bin1 ELSE istrue_a4_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a4)] THEN istrue_a4_b14_x11 = 0bin1 ELSE istrue_a4_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a4)] THEN istrue_a4_b14_x12 = 0bin1 ELSE istrue_a4_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a4)] THEN istrue_a4_b14_x13 = 0bin1 ELSE istrue_a4_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a4)] THEN istrue_a4_b14_x14 = 0bin1 ELSE istrue_a4_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a4)] THEN istrue_a4_b14_x15 = 0bin1 ELSE istrue_a4_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b14 = BVPLUS(5, 0bin0000@istrue_a4_b14_x0, 0bin0000@istrue_a4_b14_x1, 0bin0000@istrue_a4_b14_x2, 0bin0000@istrue_a4_b14_x3, 0bin0000@istrue_a4_b14_x4, 0bin0000@istrue_a4_b14_x5, 0bin0000@istrue_a4_b14_x6, 0bin0000@istrue_a4_b14_x7, 0bin0000@istrue_a4_b14_x8, 0bin0000@istrue_a4_b14_x9, 0bin0000@istrue_a4_b14_x10, 0bin0000@istrue_a4_b14_x11, 0bin0000@istrue_a4_b14_x12, 0bin0000@istrue_a4_b14_x13, 0bin0000@istrue_a4_b14_x14, 0bin0000@istrue_a4_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a4)] THEN istrue_a4_b15_x0 = 0bin1 ELSE istrue_a4_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a4)] THEN istrue_a4_b15_x1 = 0bin1 ELSE istrue_a4_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a4)] THEN istrue_a4_b15_x2 = 0bin1 ELSE istrue_a4_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a4)] THEN istrue_a4_b15_x3 = 0bin1 ELSE istrue_a4_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a4)] THEN istrue_a4_b15_x4 = 0bin1 ELSE istrue_a4_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a4)] THEN istrue_a4_b15_x5 = 0bin1 ELSE istrue_a4_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a4)] THEN istrue_a4_b15_x6 = 0bin1 ELSE istrue_a4_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a4)] THEN istrue_a4_b15_x7 = 0bin1 ELSE istrue_a4_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a4)] THEN istrue_a4_b15_x8 = 0bin1 ELSE istrue_a4_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a4)] THEN istrue_a4_b15_x9 = 0bin1 ELSE istrue_a4_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a4)] THEN istrue_a4_b15_x10 = 0bin1 ELSE istrue_a4_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a4)] THEN istrue_a4_b15_x11 = 0bin1 ELSE istrue_a4_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a4)] THEN istrue_a4_b15_x12 = 0bin1 ELSE istrue_a4_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a4)] THEN istrue_a4_b15_x13 = 0bin1 ELSE istrue_a4_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a4)] THEN istrue_a4_b15_x14 = 0bin1 ELSE istrue_a4_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a4)] THEN istrue_a4_b15_x15 = 0bin1 ELSE istrue_a4_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a4_b15 = BVPLUS(5, 0bin0000@istrue_a4_b15_x0, 0bin0000@istrue_a4_b15_x1, 0bin0000@istrue_a4_b15_x2, 0bin0000@istrue_a4_b15_x3, 0bin0000@istrue_a4_b15_x4, 0bin0000@istrue_a4_b15_x5, 0bin0000@istrue_a4_b15_x6, 0bin0000@istrue_a4_b15_x7, 0bin0000@istrue_a4_b15_x8, 0bin0000@istrue_a4_b15_x9, 0bin0000@istrue_a4_b15_x10, 0bin0000@istrue_a4_b15_x11, 0bin0000@istrue_a4_b15_x12, 0bin0000@istrue_a4_b15_x13, 0bin0000@istrue_a4_b15_x14, 0bin0000@istrue_a4_b15_x15));
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a5)] THEN istrue_a5_b0_x0 = 0bin1 ELSE istrue_a5_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a5)] THEN istrue_a5_b0_x1 = 0bin1 ELSE istrue_a5_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a5)] THEN istrue_a5_b0_x2 = 0bin1 ELSE istrue_a5_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a5)] THEN istrue_a5_b0_x3 = 0bin1 ELSE istrue_a5_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a5)] THEN istrue_a5_b0_x4 = 0bin1 ELSE istrue_a5_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a5)] THEN istrue_a5_b0_x5 = 0bin1 ELSE istrue_a5_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a5)] THEN istrue_a5_b0_x6 = 0bin1 ELSE istrue_a5_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a5)] THEN istrue_a5_b0_x7 = 0bin1 ELSE istrue_a5_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a5)] THEN istrue_a5_b0_x8 = 0bin1 ELSE istrue_a5_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a5)] THEN istrue_a5_b0_x9 = 0bin1 ELSE istrue_a5_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a5)] THEN istrue_a5_b0_x10 = 0bin1 ELSE istrue_a5_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a5)] THEN istrue_a5_b0_x11 = 0bin1 ELSE istrue_a5_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a5)] THEN istrue_a5_b0_x12 = 0bin1 ELSE istrue_a5_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a5)] THEN istrue_a5_b0_x13 = 0bin1 ELSE istrue_a5_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a5)] THEN istrue_a5_b0_x14 = 0bin1 ELSE istrue_a5_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a5)] THEN istrue_a5_b0_x15 = 0bin1 ELSE istrue_a5_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b0 = BVPLUS(5, 0bin0000@istrue_a5_b0_x0, 0bin0000@istrue_a5_b0_x1, 0bin0000@istrue_a5_b0_x2, 0bin0000@istrue_a5_b0_x3, 0bin0000@istrue_a5_b0_x4, 0bin0000@istrue_a5_b0_x5, 0bin0000@istrue_a5_b0_x6, 0bin0000@istrue_a5_b0_x7, 0bin0000@istrue_a5_b0_x8, 0bin0000@istrue_a5_b0_x9, 0bin0000@istrue_a5_b0_x10, 0bin0000@istrue_a5_b0_x11, 0bin0000@istrue_a5_b0_x12, 0bin0000@istrue_a5_b0_x13, 0bin0000@istrue_a5_b0_x14, 0bin0000@istrue_a5_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a5)] THEN istrue_a5_b1_x0 = 0bin1 ELSE istrue_a5_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a5)] THEN istrue_a5_b1_x1 = 0bin1 ELSE istrue_a5_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a5)] THEN istrue_a5_b1_x2 = 0bin1 ELSE istrue_a5_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a5)] THEN istrue_a5_b1_x3 = 0bin1 ELSE istrue_a5_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a5)] THEN istrue_a5_b1_x4 = 0bin1 ELSE istrue_a5_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a5)] THEN istrue_a5_b1_x5 = 0bin1 ELSE istrue_a5_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a5)] THEN istrue_a5_b1_x6 = 0bin1 ELSE istrue_a5_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a5)] THEN istrue_a5_b1_x7 = 0bin1 ELSE istrue_a5_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a5)] THEN istrue_a5_b1_x8 = 0bin1 ELSE istrue_a5_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a5)] THEN istrue_a5_b1_x9 = 0bin1 ELSE istrue_a5_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a5)] THEN istrue_a5_b1_x10 = 0bin1 ELSE istrue_a5_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a5)] THEN istrue_a5_b1_x11 = 0bin1 ELSE istrue_a5_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a5)] THEN istrue_a5_b1_x12 = 0bin1 ELSE istrue_a5_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a5)] THEN istrue_a5_b1_x13 = 0bin1 ELSE istrue_a5_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a5)] THEN istrue_a5_b1_x14 = 0bin1 ELSE istrue_a5_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a5)] THEN istrue_a5_b1_x15 = 0bin1 ELSE istrue_a5_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b1 = BVPLUS(5, 0bin0000@istrue_a5_b1_x0, 0bin0000@istrue_a5_b1_x1, 0bin0000@istrue_a5_b1_x2, 0bin0000@istrue_a5_b1_x3, 0bin0000@istrue_a5_b1_x4, 0bin0000@istrue_a5_b1_x5, 0bin0000@istrue_a5_b1_x6, 0bin0000@istrue_a5_b1_x7, 0bin0000@istrue_a5_b1_x8, 0bin0000@istrue_a5_b1_x9, 0bin0000@istrue_a5_b1_x10, 0bin0000@istrue_a5_b1_x11, 0bin0000@istrue_a5_b1_x12, 0bin0000@istrue_a5_b1_x13, 0bin0000@istrue_a5_b1_x14, 0bin0000@istrue_a5_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a5)] THEN istrue_a5_b2_x0 = 0bin1 ELSE istrue_a5_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a5)] THEN istrue_a5_b2_x1 = 0bin1 ELSE istrue_a5_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a5)] THEN istrue_a5_b2_x2 = 0bin1 ELSE istrue_a5_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a5)] THEN istrue_a5_b2_x3 = 0bin1 ELSE istrue_a5_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a5)] THEN istrue_a5_b2_x4 = 0bin1 ELSE istrue_a5_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a5)] THEN istrue_a5_b2_x5 = 0bin1 ELSE istrue_a5_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a5)] THEN istrue_a5_b2_x6 = 0bin1 ELSE istrue_a5_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a5)] THEN istrue_a5_b2_x7 = 0bin1 ELSE istrue_a5_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a5)] THEN istrue_a5_b2_x8 = 0bin1 ELSE istrue_a5_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a5)] THEN istrue_a5_b2_x9 = 0bin1 ELSE istrue_a5_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a5)] THEN istrue_a5_b2_x10 = 0bin1 ELSE istrue_a5_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a5)] THEN istrue_a5_b2_x11 = 0bin1 ELSE istrue_a5_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a5)] THEN istrue_a5_b2_x12 = 0bin1 ELSE istrue_a5_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a5)] THEN istrue_a5_b2_x13 = 0bin1 ELSE istrue_a5_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a5)] THEN istrue_a5_b2_x14 = 0bin1 ELSE istrue_a5_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a5)] THEN istrue_a5_b2_x15 = 0bin1 ELSE istrue_a5_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b2 = BVPLUS(5, 0bin0000@istrue_a5_b2_x0, 0bin0000@istrue_a5_b2_x1, 0bin0000@istrue_a5_b2_x2, 0bin0000@istrue_a5_b2_x3, 0bin0000@istrue_a5_b2_x4, 0bin0000@istrue_a5_b2_x5, 0bin0000@istrue_a5_b2_x6, 0bin0000@istrue_a5_b2_x7, 0bin0000@istrue_a5_b2_x8, 0bin0000@istrue_a5_b2_x9, 0bin0000@istrue_a5_b2_x10, 0bin0000@istrue_a5_b2_x11, 0bin0000@istrue_a5_b2_x12, 0bin0000@istrue_a5_b2_x13, 0bin0000@istrue_a5_b2_x14, 0bin0000@istrue_a5_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a5)] THEN istrue_a5_b3_x0 = 0bin1 ELSE istrue_a5_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a5)] THEN istrue_a5_b3_x1 = 0bin1 ELSE istrue_a5_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a5)] THEN istrue_a5_b3_x2 = 0bin1 ELSE istrue_a5_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a5)] THEN istrue_a5_b3_x3 = 0bin1 ELSE istrue_a5_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a5)] THEN istrue_a5_b3_x4 = 0bin1 ELSE istrue_a5_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a5)] THEN istrue_a5_b3_x5 = 0bin1 ELSE istrue_a5_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a5)] THEN istrue_a5_b3_x6 = 0bin1 ELSE istrue_a5_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a5)] THEN istrue_a5_b3_x7 = 0bin1 ELSE istrue_a5_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a5)] THEN istrue_a5_b3_x8 = 0bin1 ELSE istrue_a5_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a5)] THEN istrue_a5_b3_x9 = 0bin1 ELSE istrue_a5_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a5)] THEN istrue_a5_b3_x10 = 0bin1 ELSE istrue_a5_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a5)] THEN istrue_a5_b3_x11 = 0bin1 ELSE istrue_a5_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a5)] THEN istrue_a5_b3_x12 = 0bin1 ELSE istrue_a5_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a5)] THEN istrue_a5_b3_x13 = 0bin1 ELSE istrue_a5_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a5)] THEN istrue_a5_b3_x14 = 0bin1 ELSE istrue_a5_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a5)] THEN istrue_a5_b3_x15 = 0bin1 ELSE istrue_a5_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b3 = BVPLUS(5, 0bin0000@istrue_a5_b3_x0, 0bin0000@istrue_a5_b3_x1, 0bin0000@istrue_a5_b3_x2, 0bin0000@istrue_a5_b3_x3, 0bin0000@istrue_a5_b3_x4, 0bin0000@istrue_a5_b3_x5, 0bin0000@istrue_a5_b3_x6, 0bin0000@istrue_a5_b3_x7, 0bin0000@istrue_a5_b3_x8, 0bin0000@istrue_a5_b3_x9, 0bin0000@istrue_a5_b3_x10, 0bin0000@istrue_a5_b3_x11, 0bin0000@istrue_a5_b3_x12, 0bin0000@istrue_a5_b3_x13, 0bin0000@istrue_a5_b3_x14, 0bin0000@istrue_a5_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a5)] THEN istrue_a5_b4_x0 = 0bin1 ELSE istrue_a5_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a5)] THEN istrue_a5_b4_x1 = 0bin1 ELSE istrue_a5_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a5)] THEN istrue_a5_b4_x2 = 0bin1 ELSE istrue_a5_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a5)] THEN istrue_a5_b4_x3 = 0bin1 ELSE istrue_a5_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a5)] THEN istrue_a5_b4_x4 = 0bin1 ELSE istrue_a5_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a5)] THEN istrue_a5_b4_x5 = 0bin1 ELSE istrue_a5_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a5)] THEN istrue_a5_b4_x6 = 0bin1 ELSE istrue_a5_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a5)] THEN istrue_a5_b4_x7 = 0bin1 ELSE istrue_a5_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a5)] THEN istrue_a5_b4_x8 = 0bin1 ELSE istrue_a5_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a5)] THEN istrue_a5_b4_x9 = 0bin1 ELSE istrue_a5_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a5)] THEN istrue_a5_b4_x10 = 0bin1 ELSE istrue_a5_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a5)] THEN istrue_a5_b4_x11 = 0bin1 ELSE istrue_a5_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a5)] THEN istrue_a5_b4_x12 = 0bin1 ELSE istrue_a5_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a5)] THEN istrue_a5_b4_x13 = 0bin1 ELSE istrue_a5_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a5)] THEN istrue_a5_b4_x14 = 0bin1 ELSE istrue_a5_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a5)] THEN istrue_a5_b4_x15 = 0bin1 ELSE istrue_a5_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b4 = BVPLUS(5, 0bin0000@istrue_a5_b4_x0, 0bin0000@istrue_a5_b4_x1, 0bin0000@istrue_a5_b4_x2, 0bin0000@istrue_a5_b4_x3, 0bin0000@istrue_a5_b4_x4, 0bin0000@istrue_a5_b4_x5, 0bin0000@istrue_a5_b4_x6, 0bin0000@istrue_a5_b4_x7, 0bin0000@istrue_a5_b4_x8, 0bin0000@istrue_a5_b4_x9, 0bin0000@istrue_a5_b4_x10, 0bin0000@istrue_a5_b4_x11, 0bin0000@istrue_a5_b4_x12, 0bin0000@istrue_a5_b4_x13, 0bin0000@istrue_a5_b4_x14, 0bin0000@istrue_a5_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a5)] THEN istrue_a5_b5_x0 = 0bin1 ELSE istrue_a5_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a5)] THEN istrue_a5_b5_x1 = 0bin1 ELSE istrue_a5_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a5)] THEN istrue_a5_b5_x2 = 0bin1 ELSE istrue_a5_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a5)] THEN istrue_a5_b5_x3 = 0bin1 ELSE istrue_a5_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a5)] THEN istrue_a5_b5_x4 = 0bin1 ELSE istrue_a5_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a5)] THEN istrue_a5_b5_x5 = 0bin1 ELSE istrue_a5_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a5)] THEN istrue_a5_b5_x6 = 0bin1 ELSE istrue_a5_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a5)] THEN istrue_a5_b5_x7 = 0bin1 ELSE istrue_a5_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a5)] THEN istrue_a5_b5_x8 = 0bin1 ELSE istrue_a5_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a5)] THEN istrue_a5_b5_x9 = 0bin1 ELSE istrue_a5_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a5)] THEN istrue_a5_b5_x10 = 0bin1 ELSE istrue_a5_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a5)] THEN istrue_a5_b5_x11 = 0bin1 ELSE istrue_a5_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a5)] THEN istrue_a5_b5_x12 = 0bin1 ELSE istrue_a5_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a5)] THEN istrue_a5_b5_x13 = 0bin1 ELSE istrue_a5_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a5)] THEN istrue_a5_b5_x14 = 0bin1 ELSE istrue_a5_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a5)] THEN istrue_a5_b5_x15 = 0bin1 ELSE istrue_a5_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b5 = BVPLUS(5, 0bin0000@istrue_a5_b5_x0, 0bin0000@istrue_a5_b5_x1, 0bin0000@istrue_a5_b5_x2, 0bin0000@istrue_a5_b5_x3, 0bin0000@istrue_a5_b5_x4, 0bin0000@istrue_a5_b5_x5, 0bin0000@istrue_a5_b5_x6, 0bin0000@istrue_a5_b5_x7, 0bin0000@istrue_a5_b5_x8, 0bin0000@istrue_a5_b5_x9, 0bin0000@istrue_a5_b5_x10, 0bin0000@istrue_a5_b5_x11, 0bin0000@istrue_a5_b5_x12, 0bin0000@istrue_a5_b5_x13, 0bin0000@istrue_a5_b5_x14, 0bin0000@istrue_a5_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a5)] THEN istrue_a5_b6_x0 = 0bin1 ELSE istrue_a5_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a5)] THEN istrue_a5_b6_x1 = 0bin1 ELSE istrue_a5_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a5)] THEN istrue_a5_b6_x2 = 0bin1 ELSE istrue_a5_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a5)] THEN istrue_a5_b6_x3 = 0bin1 ELSE istrue_a5_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a5)] THEN istrue_a5_b6_x4 = 0bin1 ELSE istrue_a5_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a5)] THEN istrue_a5_b6_x5 = 0bin1 ELSE istrue_a5_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a5)] THEN istrue_a5_b6_x6 = 0bin1 ELSE istrue_a5_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a5)] THEN istrue_a5_b6_x7 = 0bin1 ELSE istrue_a5_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a5)] THEN istrue_a5_b6_x8 = 0bin1 ELSE istrue_a5_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a5)] THEN istrue_a5_b6_x9 = 0bin1 ELSE istrue_a5_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a5)] THEN istrue_a5_b6_x10 = 0bin1 ELSE istrue_a5_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a5)] THEN istrue_a5_b6_x11 = 0bin1 ELSE istrue_a5_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a5)] THEN istrue_a5_b6_x12 = 0bin1 ELSE istrue_a5_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a5)] THEN istrue_a5_b6_x13 = 0bin1 ELSE istrue_a5_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a5)] THEN istrue_a5_b6_x14 = 0bin1 ELSE istrue_a5_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a5)] THEN istrue_a5_b6_x15 = 0bin1 ELSE istrue_a5_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b6 = BVPLUS(5, 0bin0000@istrue_a5_b6_x0, 0bin0000@istrue_a5_b6_x1, 0bin0000@istrue_a5_b6_x2, 0bin0000@istrue_a5_b6_x3, 0bin0000@istrue_a5_b6_x4, 0bin0000@istrue_a5_b6_x5, 0bin0000@istrue_a5_b6_x6, 0bin0000@istrue_a5_b6_x7, 0bin0000@istrue_a5_b6_x8, 0bin0000@istrue_a5_b6_x9, 0bin0000@istrue_a5_b6_x10, 0bin0000@istrue_a5_b6_x11, 0bin0000@istrue_a5_b6_x12, 0bin0000@istrue_a5_b6_x13, 0bin0000@istrue_a5_b6_x14, 0bin0000@istrue_a5_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a5)] THEN istrue_a5_b7_x0 = 0bin1 ELSE istrue_a5_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a5)] THEN istrue_a5_b7_x1 = 0bin1 ELSE istrue_a5_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a5)] THEN istrue_a5_b7_x2 = 0bin1 ELSE istrue_a5_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a5)] THEN istrue_a5_b7_x3 = 0bin1 ELSE istrue_a5_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a5)] THEN istrue_a5_b7_x4 = 0bin1 ELSE istrue_a5_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a5)] THEN istrue_a5_b7_x5 = 0bin1 ELSE istrue_a5_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a5)] THEN istrue_a5_b7_x6 = 0bin1 ELSE istrue_a5_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a5)] THEN istrue_a5_b7_x7 = 0bin1 ELSE istrue_a5_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a5)] THEN istrue_a5_b7_x8 = 0bin1 ELSE istrue_a5_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a5)] THEN istrue_a5_b7_x9 = 0bin1 ELSE istrue_a5_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a5)] THEN istrue_a5_b7_x10 = 0bin1 ELSE istrue_a5_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a5)] THEN istrue_a5_b7_x11 = 0bin1 ELSE istrue_a5_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a5)] THEN istrue_a5_b7_x12 = 0bin1 ELSE istrue_a5_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a5)] THEN istrue_a5_b7_x13 = 0bin1 ELSE istrue_a5_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a5)] THEN istrue_a5_b7_x14 = 0bin1 ELSE istrue_a5_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a5)] THEN istrue_a5_b7_x15 = 0bin1 ELSE istrue_a5_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b7 = BVPLUS(5, 0bin0000@istrue_a5_b7_x0, 0bin0000@istrue_a5_b7_x1, 0bin0000@istrue_a5_b7_x2, 0bin0000@istrue_a5_b7_x3, 0bin0000@istrue_a5_b7_x4, 0bin0000@istrue_a5_b7_x5, 0bin0000@istrue_a5_b7_x6, 0bin0000@istrue_a5_b7_x7, 0bin0000@istrue_a5_b7_x8, 0bin0000@istrue_a5_b7_x9, 0bin0000@istrue_a5_b7_x10, 0bin0000@istrue_a5_b7_x11, 0bin0000@istrue_a5_b7_x12, 0bin0000@istrue_a5_b7_x13, 0bin0000@istrue_a5_b7_x14, 0bin0000@istrue_a5_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a5)] THEN istrue_a5_b8_x0 = 0bin1 ELSE istrue_a5_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a5)] THEN istrue_a5_b8_x1 = 0bin1 ELSE istrue_a5_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a5)] THEN istrue_a5_b8_x2 = 0bin1 ELSE istrue_a5_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a5)] THEN istrue_a5_b8_x3 = 0bin1 ELSE istrue_a5_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a5)] THEN istrue_a5_b8_x4 = 0bin1 ELSE istrue_a5_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a5)] THEN istrue_a5_b8_x5 = 0bin1 ELSE istrue_a5_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a5)] THEN istrue_a5_b8_x6 = 0bin1 ELSE istrue_a5_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a5)] THEN istrue_a5_b8_x7 = 0bin1 ELSE istrue_a5_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a5)] THEN istrue_a5_b8_x8 = 0bin1 ELSE istrue_a5_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a5)] THEN istrue_a5_b8_x9 = 0bin1 ELSE istrue_a5_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a5)] THEN istrue_a5_b8_x10 = 0bin1 ELSE istrue_a5_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a5)] THEN istrue_a5_b8_x11 = 0bin1 ELSE istrue_a5_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a5)] THEN istrue_a5_b8_x12 = 0bin1 ELSE istrue_a5_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a5)] THEN istrue_a5_b8_x13 = 0bin1 ELSE istrue_a5_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a5)] THEN istrue_a5_b8_x14 = 0bin1 ELSE istrue_a5_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a5)] THEN istrue_a5_b8_x15 = 0bin1 ELSE istrue_a5_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b8 = BVPLUS(5, 0bin0000@istrue_a5_b8_x0, 0bin0000@istrue_a5_b8_x1, 0bin0000@istrue_a5_b8_x2, 0bin0000@istrue_a5_b8_x3, 0bin0000@istrue_a5_b8_x4, 0bin0000@istrue_a5_b8_x5, 0bin0000@istrue_a5_b8_x6, 0bin0000@istrue_a5_b8_x7, 0bin0000@istrue_a5_b8_x8, 0bin0000@istrue_a5_b8_x9, 0bin0000@istrue_a5_b8_x10, 0bin0000@istrue_a5_b8_x11, 0bin0000@istrue_a5_b8_x12, 0bin0000@istrue_a5_b8_x13, 0bin0000@istrue_a5_b8_x14, 0bin0000@istrue_a5_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a5)] THEN istrue_a5_b9_x0 = 0bin1 ELSE istrue_a5_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a5)] THEN istrue_a5_b9_x1 = 0bin1 ELSE istrue_a5_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a5)] THEN istrue_a5_b9_x2 = 0bin1 ELSE istrue_a5_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a5)] THEN istrue_a5_b9_x3 = 0bin1 ELSE istrue_a5_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a5)] THEN istrue_a5_b9_x4 = 0bin1 ELSE istrue_a5_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a5)] THEN istrue_a5_b9_x5 = 0bin1 ELSE istrue_a5_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a5)] THEN istrue_a5_b9_x6 = 0bin1 ELSE istrue_a5_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a5)] THEN istrue_a5_b9_x7 = 0bin1 ELSE istrue_a5_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a5)] THEN istrue_a5_b9_x8 = 0bin1 ELSE istrue_a5_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a5)] THEN istrue_a5_b9_x9 = 0bin1 ELSE istrue_a5_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a5)] THEN istrue_a5_b9_x10 = 0bin1 ELSE istrue_a5_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a5)] THEN istrue_a5_b9_x11 = 0bin1 ELSE istrue_a5_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a5)] THEN istrue_a5_b9_x12 = 0bin1 ELSE istrue_a5_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a5)] THEN istrue_a5_b9_x13 = 0bin1 ELSE istrue_a5_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a5)] THEN istrue_a5_b9_x14 = 0bin1 ELSE istrue_a5_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a5)] THEN istrue_a5_b9_x15 = 0bin1 ELSE istrue_a5_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b9 = BVPLUS(5, 0bin0000@istrue_a5_b9_x0, 0bin0000@istrue_a5_b9_x1, 0bin0000@istrue_a5_b9_x2, 0bin0000@istrue_a5_b9_x3, 0bin0000@istrue_a5_b9_x4, 0bin0000@istrue_a5_b9_x5, 0bin0000@istrue_a5_b9_x6, 0bin0000@istrue_a5_b9_x7, 0bin0000@istrue_a5_b9_x8, 0bin0000@istrue_a5_b9_x9, 0bin0000@istrue_a5_b9_x10, 0bin0000@istrue_a5_b9_x11, 0bin0000@istrue_a5_b9_x12, 0bin0000@istrue_a5_b9_x13, 0bin0000@istrue_a5_b9_x14, 0bin0000@istrue_a5_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a5)] THEN istrue_a5_b10_x0 = 0bin1 ELSE istrue_a5_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a5)] THEN istrue_a5_b10_x1 = 0bin1 ELSE istrue_a5_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a5)] THEN istrue_a5_b10_x2 = 0bin1 ELSE istrue_a5_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a5)] THEN istrue_a5_b10_x3 = 0bin1 ELSE istrue_a5_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a5)] THEN istrue_a5_b10_x4 = 0bin1 ELSE istrue_a5_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a5)] THEN istrue_a5_b10_x5 = 0bin1 ELSE istrue_a5_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a5)] THEN istrue_a5_b10_x6 = 0bin1 ELSE istrue_a5_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a5)] THEN istrue_a5_b10_x7 = 0bin1 ELSE istrue_a5_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a5)] THEN istrue_a5_b10_x8 = 0bin1 ELSE istrue_a5_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a5)] THEN istrue_a5_b10_x9 = 0bin1 ELSE istrue_a5_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a5)] THEN istrue_a5_b10_x10 = 0bin1 ELSE istrue_a5_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a5)] THEN istrue_a5_b10_x11 = 0bin1 ELSE istrue_a5_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a5)] THEN istrue_a5_b10_x12 = 0bin1 ELSE istrue_a5_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a5)] THEN istrue_a5_b10_x13 = 0bin1 ELSE istrue_a5_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a5)] THEN istrue_a5_b10_x14 = 0bin1 ELSE istrue_a5_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a5)] THEN istrue_a5_b10_x15 = 0bin1 ELSE istrue_a5_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b10 = BVPLUS(5, 0bin0000@istrue_a5_b10_x0, 0bin0000@istrue_a5_b10_x1, 0bin0000@istrue_a5_b10_x2, 0bin0000@istrue_a5_b10_x3, 0bin0000@istrue_a5_b10_x4, 0bin0000@istrue_a5_b10_x5, 0bin0000@istrue_a5_b10_x6, 0bin0000@istrue_a5_b10_x7, 0bin0000@istrue_a5_b10_x8, 0bin0000@istrue_a5_b10_x9, 0bin0000@istrue_a5_b10_x10, 0bin0000@istrue_a5_b10_x11, 0bin0000@istrue_a5_b10_x12, 0bin0000@istrue_a5_b10_x13, 0bin0000@istrue_a5_b10_x14, 0bin0000@istrue_a5_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a5)] THEN istrue_a5_b11_x0 = 0bin1 ELSE istrue_a5_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a5)] THEN istrue_a5_b11_x1 = 0bin1 ELSE istrue_a5_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a5)] THEN istrue_a5_b11_x2 = 0bin1 ELSE istrue_a5_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a5)] THEN istrue_a5_b11_x3 = 0bin1 ELSE istrue_a5_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a5)] THEN istrue_a5_b11_x4 = 0bin1 ELSE istrue_a5_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a5)] THEN istrue_a5_b11_x5 = 0bin1 ELSE istrue_a5_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a5)] THEN istrue_a5_b11_x6 = 0bin1 ELSE istrue_a5_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a5)] THEN istrue_a5_b11_x7 = 0bin1 ELSE istrue_a5_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a5)] THEN istrue_a5_b11_x8 = 0bin1 ELSE istrue_a5_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a5)] THEN istrue_a5_b11_x9 = 0bin1 ELSE istrue_a5_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a5)] THEN istrue_a5_b11_x10 = 0bin1 ELSE istrue_a5_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a5)] THEN istrue_a5_b11_x11 = 0bin1 ELSE istrue_a5_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a5)] THEN istrue_a5_b11_x12 = 0bin1 ELSE istrue_a5_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a5)] THEN istrue_a5_b11_x13 = 0bin1 ELSE istrue_a5_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a5)] THEN istrue_a5_b11_x14 = 0bin1 ELSE istrue_a5_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a5)] THEN istrue_a5_b11_x15 = 0bin1 ELSE istrue_a5_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b11 = BVPLUS(5, 0bin0000@istrue_a5_b11_x0, 0bin0000@istrue_a5_b11_x1, 0bin0000@istrue_a5_b11_x2, 0bin0000@istrue_a5_b11_x3, 0bin0000@istrue_a5_b11_x4, 0bin0000@istrue_a5_b11_x5, 0bin0000@istrue_a5_b11_x6, 0bin0000@istrue_a5_b11_x7, 0bin0000@istrue_a5_b11_x8, 0bin0000@istrue_a5_b11_x9, 0bin0000@istrue_a5_b11_x10, 0bin0000@istrue_a5_b11_x11, 0bin0000@istrue_a5_b11_x12, 0bin0000@istrue_a5_b11_x13, 0bin0000@istrue_a5_b11_x14, 0bin0000@istrue_a5_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a5)] THEN istrue_a5_b12_x0 = 0bin1 ELSE istrue_a5_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a5)] THEN istrue_a5_b12_x1 = 0bin1 ELSE istrue_a5_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a5)] THEN istrue_a5_b12_x2 = 0bin1 ELSE istrue_a5_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a5)] THEN istrue_a5_b12_x3 = 0bin1 ELSE istrue_a5_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a5)] THEN istrue_a5_b12_x4 = 0bin1 ELSE istrue_a5_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a5)] THEN istrue_a5_b12_x5 = 0bin1 ELSE istrue_a5_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a5)] THEN istrue_a5_b12_x6 = 0bin1 ELSE istrue_a5_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a5)] THEN istrue_a5_b12_x7 = 0bin1 ELSE istrue_a5_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a5)] THEN istrue_a5_b12_x8 = 0bin1 ELSE istrue_a5_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a5)] THEN istrue_a5_b12_x9 = 0bin1 ELSE istrue_a5_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a5)] THEN istrue_a5_b12_x10 = 0bin1 ELSE istrue_a5_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a5)] THEN istrue_a5_b12_x11 = 0bin1 ELSE istrue_a5_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a5)] THEN istrue_a5_b12_x12 = 0bin1 ELSE istrue_a5_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a5)] THEN istrue_a5_b12_x13 = 0bin1 ELSE istrue_a5_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a5)] THEN istrue_a5_b12_x14 = 0bin1 ELSE istrue_a5_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a5)] THEN istrue_a5_b12_x15 = 0bin1 ELSE istrue_a5_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b12 = BVPLUS(5, 0bin0000@istrue_a5_b12_x0, 0bin0000@istrue_a5_b12_x1, 0bin0000@istrue_a5_b12_x2, 0bin0000@istrue_a5_b12_x3, 0bin0000@istrue_a5_b12_x4, 0bin0000@istrue_a5_b12_x5, 0bin0000@istrue_a5_b12_x6, 0bin0000@istrue_a5_b12_x7, 0bin0000@istrue_a5_b12_x8, 0bin0000@istrue_a5_b12_x9, 0bin0000@istrue_a5_b12_x10, 0bin0000@istrue_a5_b12_x11, 0bin0000@istrue_a5_b12_x12, 0bin0000@istrue_a5_b12_x13, 0bin0000@istrue_a5_b12_x14, 0bin0000@istrue_a5_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a5)] THEN istrue_a5_b13_x0 = 0bin1 ELSE istrue_a5_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a5)] THEN istrue_a5_b13_x1 = 0bin1 ELSE istrue_a5_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a5)] THEN istrue_a5_b13_x2 = 0bin1 ELSE istrue_a5_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a5)] THEN istrue_a5_b13_x3 = 0bin1 ELSE istrue_a5_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a5)] THEN istrue_a5_b13_x4 = 0bin1 ELSE istrue_a5_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a5)] THEN istrue_a5_b13_x5 = 0bin1 ELSE istrue_a5_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a5)] THEN istrue_a5_b13_x6 = 0bin1 ELSE istrue_a5_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a5)] THEN istrue_a5_b13_x7 = 0bin1 ELSE istrue_a5_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a5)] THEN istrue_a5_b13_x8 = 0bin1 ELSE istrue_a5_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a5)] THEN istrue_a5_b13_x9 = 0bin1 ELSE istrue_a5_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a5)] THEN istrue_a5_b13_x10 = 0bin1 ELSE istrue_a5_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a5)] THEN istrue_a5_b13_x11 = 0bin1 ELSE istrue_a5_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a5)] THEN istrue_a5_b13_x12 = 0bin1 ELSE istrue_a5_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a5)] THEN istrue_a5_b13_x13 = 0bin1 ELSE istrue_a5_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a5)] THEN istrue_a5_b13_x14 = 0bin1 ELSE istrue_a5_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a5)] THEN istrue_a5_b13_x15 = 0bin1 ELSE istrue_a5_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b13 = BVPLUS(5, 0bin0000@istrue_a5_b13_x0, 0bin0000@istrue_a5_b13_x1, 0bin0000@istrue_a5_b13_x2, 0bin0000@istrue_a5_b13_x3, 0bin0000@istrue_a5_b13_x4, 0bin0000@istrue_a5_b13_x5, 0bin0000@istrue_a5_b13_x6, 0bin0000@istrue_a5_b13_x7, 0bin0000@istrue_a5_b13_x8, 0bin0000@istrue_a5_b13_x9, 0bin0000@istrue_a5_b13_x10, 0bin0000@istrue_a5_b13_x11, 0bin0000@istrue_a5_b13_x12, 0bin0000@istrue_a5_b13_x13, 0bin0000@istrue_a5_b13_x14, 0bin0000@istrue_a5_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a5)] THEN istrue_a5_b14_x0 = 0bin1 ELSE istrue_a5_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a5)] THEN istrue_a5_b14_x1 = 0bin1 ELSE istrue_a5_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a5)] THEN istrue_a5_b14_x2 = 0bin1 ELSE istrue_a5_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a5)] THEN istrue_a5_b14_x3 = 0bin1 ELSE istrue_a5_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a5)] THEN istrue_a5_b14_x4 = 0bin1 ELSE istrue_a5_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a5)] THEN istrue_a5_b14_x5 = 0bin1 ELSE istrue_a5_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a5)] THEN istrue_a5_b14_x6 = 0bin1 ELSE istrue_a5_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a5)] THEN istrue_a5_b14_x7 = 0bin1 ELSE istrue_a5_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a5)] THEN istrue_a5_b14_x8 = 0bin1 ELSE istrue_a5_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a5)] THEN istrue_a5_b14_x9 = 0bin1 ELSE istrue_a5_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a5)] THEN istrue_a5_b14_x10 = 0bin1 ELSE istrue_a5_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a5)] THEN istrue_a5_b14_x11 = 0bin1 ELSE istrue_a5_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a5)] THEN istrue_a5_b14_x12 = 0bin1 ELSE istrue_a5_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a5)] THEN istrue_a5_b14_x13 = 0bin1 ELSE istrue_a5_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a5)] THEN istrue_a5_b14_x14 = 0bin1 ELSE istrue_a5_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a5)] THEN istrue_a5_b14_x15 = 0bin1 ELSE istrue_a5_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b14 = BVPLUS(5, 0bin0000@istrue_a5_b14_x0, 0bin0000@istrue_a5_b14_x1, 0bin0000@istrue_a5_b14_x2, 0bin0000@istrue_a5_b14_x3, 0bin0000@istrue_a5_b14_x4, 0bin0000@istrue_a5_b14_x5, 0bin0000@istrue_a5_b14_x6, 0bin0000@istrue_a5_b14_x7, 0bin0000@istrue_a5_b14_x8, 0bin0000@istrue_a5_b14_x9, 0bin0000@istrue_a5_b14_x10, 0bin0000@istrue_a5_b14_x11, 0bin0000@istrue_a5_b14_x12, 0bin0000@istrue_a5_b14_x13, 0bin0000@istrue_a5_b14_x14, 0bin0000@istrue_a5_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a5)] THEN istrue_a5_b15_x0 = 0bin1 ELSE istrue_a5_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a5)] THEN istrue_a5_b15_x1 = 0bin1 ELSE istrue_a5_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a5)] THEN istrue_a5_b15_x2 = 0bin1 ELSE istrue_a5_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a5)] THEN istrue_a5_b15_x3 = 0bin1 ELSE istrue_a5_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a5)] THEN istrue_a5_b15_x4 = 0bin1 ELSE istrue_a5_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a5)] THEN istrue_a5_b15_x5 = 0bin1 ELSE istrue_a5_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a5)] THEN istrue_a5_b15_x6 = 0bin1 ELSE istrue_a5_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a5)] THEN istrue_a5_b15_x7 = 0bin1 ELSE istrue_a5_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a5)] THEN istrue_a5_b15_x8 = 0bin1 ELSE istrue_a5_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a5)] THEN istrue_a5_b15_x9 = 0bin1 ELSE istrue_a5_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a5)] THEN istrue_a5_b15_x10 = 0bin1 ELSE istrue_a5_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a5)] THEN istrue_a5_b15_x11 = 0bin1 ELSE istrue_a5_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a5)] THEN istrue_a5_b15_x12 = 0bin1 ELSE istrue_a5_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a5)] THEN istrue_a5_b15_x13 = 0bin1 ELSE istrue_a5_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a5)] THEN istrue_a5_b15_x14 = 0bin1 ELSE istrue_a5_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a5)] THEN istrue_a5_b15_x15 = 0bin1 ELSE istrue_a5_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a5_b15 = BVPLUS(5, 0bin0000@istrue_a5_b15_x0, 0bin0000@istrue_a5_b15_x1, 0bin0000@istrue_a5_b15_x2, 0bin0000@istrue_a5_b15_x3, 0bin0000@istrue_a5_b15_x4, 0bin0000@istrue_a5_b15_x5, 0bin0000@istrue_a5_b15_x6, 0bin0000@istrue_a5_b15_x7, 0bin0000@istrue_a5_b15_x8, 0bin0000@istrue_a5_b15_x9, 0bin0000@istrue_a5_b15_x10, 0bin0000@istrue_a5_b15_x11, 0bin0000@istrue_a5_b15_x12, 0bin0000@istrue_a5_b15_x13, 0bin0000@istrue_a5_b15_x14, 0bin0000@istrue_a5_b15_x15));
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a6)] THEN istrue_a6_b0_x0 = 0bin1 ELSE istrue_a6_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a6)] THEN istrue_a6_b0_x1 = 0bin1 ELSE istrue_a6_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a6)] THEN istrue_a6_b0_x2 = 0bin1 ELSE istrue_a6_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a6)] THEN istrue_a6_b0_x3 = 0bin1 ELSE istrue_a6_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a6)] THEN istrue_a6_b0_x4 = 0bin1 ELSE istrue_a6_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a6)] THEN istrue_a6_b0_x5 = 0bin1 ELSE istrue_a6_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a6)] THEN istrue_a6_b0_x6 = 0bin1 ELSE istrue_a6_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a6)] THEN istrue_a6_b0_x7 = 0bin1 ELSE istrue_a6_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a6)] THEN istrue_a6_b0_x8 = 0bin1 ELSE istrue_a6_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a6)] THEN istrue_a6_b0_x9 = 0bin1 ELSE istrue_a6_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a6)] THEN istrue_a6_b0_x10 = 0bin1 ELSE istrue_a6_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a6)] THEN istrue_a6_b0_x11 = 0bin1 ELSE istrue_a6_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a6)] THEN istrue_a6_b0_x12 = 0bin1 ELSE istrue_a6_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a6)] THEN istrue_a6_b0_x13 = 0bin1 ELSE istrue_a6_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a6)] THEN istrue_a6_b0_x14 = 0bin1 ELSE istrue_a6_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a6)] THEN istrue_a6_b0_x15 = 0bin1 ELSE istrue_a6_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b0 = BVPLUS(5, 0bin0000@istrue_a6_b0_x0, 0bin0000@istrue_a6_b0_x1, 0bin0000@istrue_a6_b0_x2, 0bin0000@istrue_a6_b0_x3, 0bin0000@istrue_a6_b0_x4, 0bin0000@istrue_a6_b0_x5, 0bin0000@istrue_a6_b0_x6, 0bin0000@istrue_a6_b0_x7, 0bin0000@istrue_a6_b0_x8, 0bin0000@istrue_a6_b0_x9, 0bin0000@istrue_a6_b0_x10, 0bin0000@istrue_a6_b0_x11, 0bin0000@istrue_a6_b0_x12, 0bin0000@istrue_a6_b0_x13, 0bin0000@istrue_a6_b0_x14, 0bin0000@istrue_a6_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a6)] THEN istrue_a6_b1_x0 = 0bin1 ELSE istrue_a6_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a6)] THEN istrue_a6_b1_x1 = 0bin1 ELSE istrue_a6_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a6)] THEN istrue_a6_b1_x2 = 0bin1 ELSE istrue_a6_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a6)] THEN istrue_a6_b1_x3 = 0bin1 ELSE istrue_a6_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a6)] THEN istrue_a6_b1_x4 = 0bin1 ELSE istrue_a6_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a6)] THEN istrue_a6_b1_x5 = 0bin1 ELSE istrue_a6_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a6)] THEN istrue_a6_b1_x6 = 0bin1 ELSE istrue_a6_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a6)] THEN istrue_a6_b1_x7 = 0bin1 ELSE istrue_a6_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a6)] THEN istrue_a6_b1_x8 = 0bin1 ELSE istrue_a6_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a6)] THEN istrue_a6_b1_x9 = 0bin1 ELSE istrue_a6_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a6)] THEN istrue_a6_b1_x10 = 0bin1 ELSE istrue_a6_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a6)] THEN istrue_a6_b1_x11 = 0bin1 ELSE istrue_a6_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a6)] THEN istrue_a6_b1_x12 = 0bin1 ELSE istrue_a6_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a6)] THEN istrue_a6_b1_x13 = 0bin1 ELSE istrue_a6_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a6)] THEN istrue_a6_b1_x14 = 0bin1 ELSE istrue_a6_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a6)] THEN istrue_a6_b1_x15 = 0bin1 ELSE istrue_a6_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b1 = BVPLUS(5, 0bin0000@istrue_a6_b1_x0, 0bin0000@istrue_a6_b1_x1, 0bin0000@istrue_a6_b1_x2, 0bin0000@istrue_a6_b1_x3, 0bin0000@istrue_a6_b1_x4, 0bin0000@istrue_a6_b1_x5, 0bin0000@istrue_a6_b1_x6, 0bin0000@istrue_a6_b1_x7, 0bin0000@istrue_a6_b1_x8, 0bin0000@istrue_a6_b1_x9, 0bin0000@istrue_a6_b1_x10, 0bin0000@istrue_a6_b1_x11, 0bin0000@istrue_a6_b1_x12, 0bin0000@istrue_a6_b1_x13, 0bin0000@istrue_a6_b1_x14, 0bin0000@istrue_a6_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a6)] THEN istrue_a6_b2_x0 = 0bin1 ELSE istrue_a6_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a6)] THEN istrue_a6_b2_x1 = 0bin1 ELSE istrue_a6_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a6)] THEN istrue_a6_b2_x2 = 0bin1 ELSE istrue_a6_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a6)] THEN istrue_a6_b2_x3 = 0bin1 ELSE istrue_a6_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a6)] THEN istrue_a6_b2_x4 = 0bin1 ELSE istrue_a6_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a6)] THEN istrue_a6_b2_x5 = 0bin1 ELSE istrue_a6_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a6)] THEN istrue_a6_b2_x6 = 0bin1 ELSE istrue_a6_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a6)] THEN istrue_a6_b2_x7 = 0bin1 ELSE istrue_a6_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a6)] THEN istrue_a6_b2_x8 = 0bin1 ELSE istrue_a6_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a6)] THEN istrue_a6_b2_x9 = 0bin1 ELSE istrue_a6_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a6)] THEN istrue_a6_b2_x10 = 0bin1 ELSE istrue_a6_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a6)] THEN istrue_a6_b2_x11 = 0bin1 ELSE istrue_a6_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a6)] THEN istrue_a6_b2_x12 = 0bin1 ELSE istrue_a6_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a6)] THEN istrue_a6_b2_x13 = 0bin1 ELSE istrue_a6_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a6)] THEN istrue_a6_b2_x14 = 0bin1 ELSE istrue_a6_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a6)] THEN istrue_a6_b2_x15 = 0bin1 ELSE istrue_a6_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b2 = BVPLUS(5, 0bin0000@istrue_a6_b2_x0, 0bin0000@istrue_a6_b2_x1, 0bin0000@istrue_a6_b2_x2, 0bin0000@istrue_a6_b2_x3, 0bin0000@istrue_a6_b2_x4, 0bin0000@istrue_a6_b2_x5, 0bin0000@istrue_a6_b2_x6, 0bin0000@istrue_a6_b2_x7, 0bin0000@istrue_a6_b2_x8, 0bin0000@istrue_a6_b2_x9, 0bin0000@istrue_a6_b2_x10, 0bin0000@istrue_a6_b2_x11, 0bin0000@istrue_a6_b2_x12, 0bin0000@istrue_a6_b2_x13, 0bin0000@istrue_a6_b2_x14, 0bin0000@istrue_a6_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a6)] THEN istrue_a6_b3_x0 = 0bin1 ELSE istrue_a6_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a6)] THEN istrue_a6_b3_x1 = 0bin1 ELSE istrue_a6_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a6)] THEN istrue_a6_b3_x2 = 0bin1 ELSE istrue_a6_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a6)] THEN istrue_a6_b3_x3 = 0bin1 ELSE istrue_a6_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a6)] THEN istrue_a6_b3_x4 = 0bin1 ELSE istrue_a6_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a6)] THEN istrue_a6_b3_x5 = 0bin1 ELSE istrue_a6_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a6)] THEN istrue_a6_b3_x6 = 0bin1 ELSE istrue_a6_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a6)] THEN istrue_a6_b3_x7 = 0bin1 ELSE istrue_a6_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a6)] THEN istrue_a6_b3_x8 = 0bin1 ELSE istrue_a6_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a6)] THEN istrue_a6_b3_x9 = 0bin1 ELSE istrue_a6_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a6)] THEN istrue_a6_b3_x10 = 0bin1 ELSE istrue_a6_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a6)] THEN istrue_a6_b3_x11 = 0bin1 ELSE istrue_a6_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a6)] THEN istrue_a6_b3_x12 = 0bin1 ELSE istrue_a6_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a6)] THEN istrue_a6_b3_x13 = 0bin1 ELSE istrue_a6_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a6)] THEN istrue_a6_b3_x14 = 0bin1 ELSE istrue_a6_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a6)] THEN istrue_a6_b3_x15 = 0bin1 ELSE istrue_a6_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b3 = BVPLUS(5, 0bin0000@istrue_a6_b3_x0, 0bin0000@istrue_a6_b3_x1, 0bin0000@istrue_a6_b3_x2, 0bin0000@istrue_a6_b3_x3, 0bin0000@istrue_a6_b3_x4, 0bin0000@istrue_a6_b3_x5, 0bin0000@istrue_a6_b3_x6, 0bin0000@istrue_a6_b3_x7, 0bin0000@istrue_a6_b3_x8, 0bin0000@istrue_a6_b3_x9, 0bin0000@istrue_a6_b3_x10, 0bin0000@istrue_a6_b3_x11, 0bin0000@istrue_a6_b3_x12, 0bin0000@istrue_a6_b3_x13, 0bin0000@istrue_a6_b3_x14, 0bin0000@istrue_a6_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a6)] THEN istrue_a6_b4_x0 = 0bin1 ELSE istrue_a6_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a6)] THEN istrue_a6_b4_x1 = 0bin1 ELSE istrue_a6_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a6)] THEN istrue_a6_b4_x2 = 0bin1 ELSE istrue_a6_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a6)] THEN istrue_a6_b4_x3 = 0bin1 ELSE istrue_a6_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a6)] THEN istrue_a6_b4_x4 = 0bin1 ELSE istrue_a6_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a6)] THEN istrue_a6_b4_x5 = 0bin1 ELSE istrue_a6_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a6)] THEN istrue_a6_b4_x6 = 0bin1 ELSE istrue_a6_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a6)] THEN istrue_a6_b4_x7 = 0bin1 ELSE istrue_a6_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a6)] THEN istrue_a6_b4_x8 = 0bin1 ELSE istrue_a6_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a6)] THEN istrue_a6_b4_x9 = 0bin1 ELSE istrue_a6_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a6)] THEN istrue_a6_b4_x10 = 0bin1 ELSE istrue_a6_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a6)] THEN istrue_a6_b4_x11 = 0bin1 ELSE istrue_a6_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a6)] THEN istrue_a6_b4_x12 = 0bin1 ELSE istrue_a6_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a6)] THEN istrue_a6_b4_x13 = 0bin1 ELSE istrue_a6_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a6)] THEN istrue_a6_b4_x14 = 0bin1 ELSE istrue_a6_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a6)] THEN istrue_a6_b4_x15 = 0bin1 ELSE istrue_a6_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b4 = BVPLUS(5, 0bin0000@istrue_a6_b4_x0, 0bin0000@istrue_a6_b4_x1, 0bin0000@istrue_a6_b4_x2, 0bin0000@istrue_a6_b4_x3, 0bin0000@istrue_a6_b4_x4, 0bin0000@istrue_a6_b4_x5, 0bin0000@istrue_a6_b4_x6, 0bin0000@istrue_a6_b4_x7, 0bin0000@istrue_a6_b4_x8, 0bin0000@istrue_a6_b4_x9, 0bin0000@istrue_a6_b4_x10, 0bin0000@istrue_a6_b4_x11, 0bin0000@istrue_a6_b4_x12, 0bin0000@istrue_a6_b4_x13, 0bin0000@istrue_a6_b4_x14, 0bin0000@istrue_a6_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a6)] THEN istrue_a6_b5_x0 = 0bin1 ELSE istrue_a6_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a6)] THEN istrue_a6_b5_x1 = 0bin1 ELSE istrue_a6_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a6)] THEN istrue_a6_b5_x2 = 0bin1 ELSE istrue_a6_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a6)] THEN istrue_a6_b5_x3 = 0bin1 ELSE istrue_a6_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a6)] THEN istrue_a6_b5_x4 = 0bin1 ELSE istrue_a6_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a6)] THEN istrue_a6_b5_x5 = 0bin1 ELSE istrue_a6_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a6)] THEN istrue_a6_b5_x6 = 0bin1 ELSE istrue_a6_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a6)] THEN istrue_a6_b5_x7 = 0bin1 ELSE istrue_a6_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a6)] THEN istrue_a6_b5_x8 = 0bin1 ELSE istrue_a6_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a6)] THEN istrue_a6_b5_x9 = 0bin1 ELSE istrue_a6_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a6)] THEN istrue_a6_b5_x10 = 0bin1 ELSE istrue_a6_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a6)] THEN istrue_a6_b5_x11 = 0bin1 ELSE istrue_a6_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a6)] THEN istrue_a6_b5_x12 = 0bin1 ELSE istrue_a6_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a6)] THEN istrue_a6_b5_x13 = 0bin1 ELSE istrue_a6_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a6)] THEN istrue_a6_b5_x14 = 0bin1 ELSE istrue_a6_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a6)] THEN istrue_a6_b5_x15 = 0bin1 ELSE istrue_a6_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b5 = BVPLUS(5, 0bin0000@istrue_a6_b5_x0, 0bin0000@istrue_a6_b5_x1, 0bin0000@istrue_a6_b5_x2, 0bin0000@istrue_a6_b5_x3, 0bin0000@istrue_a6_b5_x4, 0bin0000@istrue_a6_b5_x5, 0bin0000@istrue_a6_b5_x6, 0bin0000@istrue_a6_b5_x7, 0bin0000@istrue_a6_b5_x8, 0bin0000@istrue_a6_b5_x9, 0bin0000@istrue_a6_b5_x10, 0bin0000@istrue_a6_b5_x11, 0bin0000@istrue_a6_b5_x12, 0bin0000@istrue_a6_b5_x13, 0bin0000@istrue_a6_b5_x14, 0bin0000@istrue_a6_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a6)] THEN istrue_a6_b6_x0 = 0bin1 ELSE istrue_a6_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a6)] THEN istrue_a6_b6_x1 = 0bin1 ELSE istrue_a6_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a6)] THEN istrue_a6_b6_x2 = 0bin1 ELSE istrue_a6_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a6)] THEN istrue_a6_b6_x3 = 0bin1 ELSE istrue_a6_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a6)] THEN istrue_a6_b6_x4 = 0bin1 ELSE istrue_a6_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a6)] THEN istrue_a6_b6_x5 = 0bin1 ELSE istrue_a6_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a6)] THEN istrue_a6_b6_x6 = 0bin1 ELSE istrue_a6_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a6)] THEN istrue_a6_b6_x7 = 0bin1 ELSE istrue_a6_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a6)] THEN istrue_a6_b6_x8 = 0bin1 ELSE istrue_a6_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a6)] THEN istrue_a6_b6_x9 = 0bin1 ELSE istrue_a6_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a6)] THEN istrue_a6_b6_x10 = 0bin1 ELSE istrue_a6_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a6)] THEN istrue_a6_b6_x11 = 0bin1 ELSE istrue_a6_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a6)] THEN istrue_a6_b6_x12 = 0bin1 ELSE istrue_a6_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a6)] THEN istrue_a6_b6_x13 = 0bin1 ELSE istrue_a6_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a6)] THEN istrue_a6_b6_x14 = 0bin1 ELSE istrue_a6_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a6)] THEN istrue_a6_b6_x15 = 0bin1 ELSE istrue_a6_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b6 = BVPLUS(5, 0bin0000@istrue_a6_b6_x0, 0bin0000@istrue_a6_b6_x1, 0bin0000@istrue_a6_b6_x2, 0bin0000@istrue_a6_b6_x3, 0bin0000@istrue_a6_b6_x4, 0bin0000@istrue_a6_b6_x5, 0bin0000@istrue_a6_b6_x6, 0bin0000@istrue_a6_b6_x7, 0bin0000@istrue_a6_b6_x8, 0bin0000@istrue_a6_b6_x9, 0bin0000@istrue_a6_b6_x10, 0bin0000@istrue_a6_b6_x11, 0bin0000@istrue_a6_b6_x12, 0bin0000@istrue_a6_b6_x13, 0bin0000@istrue_a6_b6_x14, 0bin0000@istrue_a6_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a6)] THEN istrue_a6_b7_x0 = 0bin1 ELSE istrue_a6_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a6)] THEN istrue_a6_b7_x1 = 0bin1 ELSE istrue_a6_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a6)] THEN istrue_a6_b7_x2 = 0bin1 ELSE istrue_a6_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a6)] THEN istrue_a6_b7_x3 = 0bin1 ELSE istrue_a6_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a6)] THEN istrue_a6_b7_x4 = 0bin1 ELSE istrue_a6_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a6)] THEN istrue_a6_b7_x5 = 0bin1 ELSE istrue_a6_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a6)] THEN istrue_a6_b7_x6 = 0bin1 ELSE istrue_a6_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a6)] THEN istrue_a6_b7_x7 = 0bin1 ELSE istrue_a6_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a6)] THEN istrue_a6_b7_x8 = 0bin1 ELSE istrue_a6_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a6)] THEN istrue_a6_b7_x9 = 0bin1 ELSE istrue_a6_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a6)] THEN istrue_a6_b7_x10 = 0bin1 ELSE istrue_a6_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a6)] THEN istrue_a6_b7_x11 = 0bin1 ELSE istrue_a6_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a6)] THEN istrue_a6_b7_x12 = 0bin1 ELSE istrue_a6_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a6)] THEN istrue_a6_b7_x13 = 0bin1 ELSE istrue_a6_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a6)] THEN istrue_a6_b7_x14 = 0bin1 ELSE istrue_a6_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a6)] THEN istrue_a6_b7_x15 = 0bin1 ELSE istrue_a6_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b7 = BVPLUS(5, 0bin0000@istrue_a6_b7_x0, 0bin0000@istrue_a6_b7_x1, 0bin0000@istrue_a6_b7_x2, 0bin0000@istrue_a6_b7_x3, 0bin0000@istrue_a6_b7_x4, 0bin0000@istrue_a6_b7_x5, 0bin0000@istrue_a6_b7_x6, 0bin0000@istrue_a6_b7_x7, 0bin0000@istrue_a6_b7_x8, 0bin0000@istrue_a6_b7_x9, 0bin0000@istrue_a6_b7_x10, 0bin0000@istrue_a6_b7_x11, 0bin0000@istrue_a6_b7_x12, 0bin0000@istrue_a6_b7_x13, 0bin0000@istrue_a6_b7_x14, 0bin0000@istrue_a6_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a6)] THEN istrue_a6_b8_x0 = 0bin1 ELSE istrue_a6_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a6)] THEN istrue_a6_b8_x1 = 0bin1 ELSE istrue_a6_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a6)] THEN istrue_a6_b8_x2 = 0bin1 ELSE istrue_a6_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a6)] THEN istrue_a6_b8_x3 = 0bin1 ELSE istrue_a6_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a6)] THEN istrue_a6_b8_x4 = 0bin1 ELSE istrue_a6_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a6)] THEN istrue_a6_b8_x5 = 0bin1 ELSE istrue_a6_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a6)] THEN istrue_a6_b8_x6 = 0bin1 ELSE istrue_a6_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a6)] THEN istrue_a6_b8_x7 = 0bin1 ELSE istrue_a6_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a6)] THEN istrue_a6_b8_x8 = 0bin1 ELSE istrue_a6_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a6)] THEN istrue_a6_b8_x9 = 0bin1 ELSE istrue_a6_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a6)] THEN istrue_a6_b8_x10 = 0bin1 ELSE istrue_a6_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a6)] THEN istrue_a6_b8_x11 = 0bin1 ELSE istrue_a6_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a6)] THEN istrue_a6_b8_x12 = 0bin1 ELSE istrue_a6_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a6)] THEN istrue_a6_b8_x13 = 0bin1 ELSE istrue_a6_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a6)] THEN istrue_a6_b8_x14 = 0bin1 ELSE istrue_a6_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a6)] THEN istrue_a6_b8_x15 = 0bin1 ELSE istrue_a6_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b8 = BVPLUS(5, 0bin0000@istrue_a6_b8_x0, 0bin0000@istrue_a6_b8_x1, 0bin0000@istrue_a6_b8_x2, 0bin0000@istrue_a6_b8_x3, 0bin0000@istrue_a6_b8_x4, 0bin0000@istrue_a6_b8_x5, 0bin0000@istrue_a6_b8_x6, 0bin0000@istrue_a6_b8_x7, 0bin0000@istrue_a6_b8_x8, 0bin0000@istrue_a6_b8_x9, 0bin0000@istrue_a6_b8_x10, 0bin0000@istrue_a6_b8_x11, 0bin0000@istrue_a6_b8_x12, 0bin0000@istrue_a6_b8_x13, 0bin0000@istrue_a6_b8_x14, 0bin0000@istrue_a6_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a6)] THEN istrue_a6_b9_x0 = 0bin1 ELSE istrue_a6_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a6)] THEN istrue_a6_b9_x1 = 0bin1 ELSE istrue_a6_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a6)] THEN istrue_a6_b9_x2 = 0bin1 ELSE istrue_a6_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a6)] THEN istrue_a6_b9_x3 = 0bin1 ELSE istrue_a6_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a6)] THEN istrue_a6_b9_x4 = 0bin1 ELSE istrue_a6_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a6)] THEN istrue_a6_b9_x5 = 0bin1 ELSE istrue_a6_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a6)] THEN istrue_a6_b9_x6 = 0bin1 ELSE istrue_a6_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a6)] THEN istrue_a6_b9_x7 = 0bin1 ELSE istrue_a6_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a6)] THEN istrue_a6_b9_x8 = 0bin1 ELSE istrue_a6_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a6)] THEN istrue_a6_b9_x9 = 0bin1 ELSE istrue_a6_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a6)] THEN istrue_a6_b9_x10 = 0bin1 ELSE istrue_a6_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a6)] THEN istrue_a6_b9_x11 = 0bin1 ELSE istrue_a6_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a6)] THEN istrue_a6_b9_x12 = 0bin1 ELSE istrue_a6_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a6)] THEN istrue_a6_b9_x13 = 0bin1 ELSE istrue_a6_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a6)] THEN istrue_a6_b9_x14 = 0bin1 ELSE istrue_a6_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a6)] THEN istrue_a6_b9_x15 = 0bin1 ELSE istrue_a6_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b9 = BVPLUS(5, 0bin0000@istrue_a6_b9_x0, 0bin0000@istrue_a6_b9_x1, 0bin0000@istrue_a6_b9_x2, 0bin0000@istrue_a6_b9_x3, 0bin0000@istrue_a6_b9_x4, 0bin0000@istrue_a6_b9_x5, 0bin0000@istrue_a6_b9_x6, 0bin0000@istrue_a6_b9_x7, 0bin0000@istrue_a6_b9_x8, 0bin0000@istrue_a6_b9_x9, 0bin0000@istrue_a6_b9_x10, 0bin0000@istrue_a6_b9_x11, 0bin0000@istrue_a6_b9_x12, 0bin0000@istrue_a6_b9_x13, 0bin0000@istrue_a6_b9_x14, 0bin0000@istrue_a6_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a6)] THEN istrue_a6_b10_x0 = 0bin1 ELSE istrue_a6_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a6)] THEN istrue_a6_b10_x1 = 0bin1 ELSE istrue_a6_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a6)] THEN istrue_a6_b10_x2 = 0bin1 ELSE istrue_a6_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a6)] THEN istrue_a6_b10_x3 = 0bin1 ELSE istrue_a6_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a6)] THEN istrue_a6_b10_x4 = 0bin1 ELSE istrue_a6_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a6)] THEN istrue_a6_b10_x5 = 0bin1 ELSE istrue_a6_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a6)] THEN istrue_a6_b10_x6 = 0bin1 ELSE istrue_a6_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a6)] THEN istrue_a6_b10_x7 = 0bin1 ELSE istrue_a6_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a6)] THEN istrue_a6_b10_x8 = 0bin1 ELSE istrue_a6_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a6)] THEN istrue_a6_b10_x9 = 0bin1 ELSE istrue_a6_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a6)] THEN istrue_a6_b10_x10 = 0bin1 ELSE istrue_a6_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a6)] THEN istrue_a6_b10_x11 = 0bin1 ELSE istrue_a6_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a6)] THEN istrue_a6_b10_x12 = 0bin1 ELSE istrue_a6_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a6)] THEN istrue_a6_b10_x13 = 0bin1 ELSE istrue_a6_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a6)] THEN istrue_a6_b10_x14 = 0bin1 ELSE istrue_a6_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a6)] THEN istrue_a6_b10_x15 = 0bin1 ELSE istrue_a6_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b10 = BVPLUS(5, 0bin0000@istrue_a6_b10_x0, 0bin0000@istrue_a6_b10_x1, 0bin0000@istrue_a6_b10_x2, 0bin0000@istrue_a6_b10_x3, 0bin0000@istrue_a6_b10_x4, 0bin0000@istrue_a6_b10_x5, 0bin0000@istrue_a6_b10_x6, 0bin0000@istrue_a6_b10_x7, 0bin0000@istrue_a6_b10_x8, 0bin0000@istrue_a6_b10_x9, 0bin0000@istrue_a6_b10_x10, 0bin0000@istrue_a6_b10_x11, 0bin0000@istrue_a6_b10_x12, 0bin0000@istrue_a6_b10_x13, 0bin0000@istrue_a6_b10_x14, 0bin0000@istrue_a6_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a6)] THEN istrue_a6_b11_x0 = 0bin1 ELSE istrue_a6_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a6)] THEN istrue_a6_b11_x1 = 0bin1 ELSE istrue_a6_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a6)] THEN istrue_a6_b11_x2 = 0bin1 ELSE istrue_a6_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a6)] THEN istrue_a6_b11_x3 = 0bin1 ELSE istrue_a6_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a6)] THEN istrue_a6_b11_x4 = 0bin1 ELSE istrue_a6_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a6)] THEN istrue_a6_b11_x5 = 0bin1 ELSE istrue_a6_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a6)] THEN istrue_a6_b11_x6 = 0bin1 ELSE istrue_a6_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a6)] THEN istrue_a6_b11_x7 = 0bin1 ELSE istrue_a6_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a6)] THEN istrue_a6_b11_x8 = 0bin1 ELSE istrue_a6_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a6)] THEN istrue_a6_b11_x9 = 0bin1 ELSE istrue_a6_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a6)] THEN istrue_a6_b11_x10 = 0bin1 ELSE istrue_a6_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a6)] THEN istrue_a6_b11_x11 = 0bin1 ELSE istrue_a6_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a6)] THEN istrue_a6_b11_x12 = 0bin1 ELSE istrue_a6_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a6)] THEN istrue_a6_b11_x13 = 0bin1 ELSE istrue_a6_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a6)] THEN istrue_a6_b11_x14 = 0bin1 ELSE istrue_a6_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a6)] THEN istrue_a6_b11_x15 = 0bin1 ELSE istrue_a6_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b11 = BVPLUS(5, 0bin0000@istrue_a6_b11_x0, 0bin0000@istrue_a6_b11_x1, 0bin0000@istrue_a6_b11_x2, 0bin0000@istrue_a6_b11_x3, 0bin0000@istrue_a6_b11_x4, 0bin0000@istrue_a6_b11_x5, 0bin0000@istrue_a6_b11_x6, 0bin0000@istrue_a6_b11_x7, 0bin0000@istrue_a6_b11_x8, 0bin0000@istrue_a6_b11_x9, 0bin0000@istrue_a6_b11_x10, 0bin0000@istrue_a6_b11_x11, 0bin0000@istrue_a6_b11_x12, 0bin0000@istrue_a6_b11_x13, 0bin0000@istrue_a6_b11_x14, 0bin0000@istrue_a6_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a6)] THEN istrue_a6_b12_x0 = 0bin1 ELSE istrue_a6_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a6)] THEN istrue_a6_b12_x1 = 0bin1 ELSE istrue_a6_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a6)] THEN istrue_a6_b12_x2 = 0bin1 ELSE istrue_a6_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a6)] THEN istrue_a6_b12_x3 = 0bin1 ELSE istrue_a6_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a6)] THEN istrue_a6_b12_x4 = 0bin1 ELSE istrue_a6_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a6)] THEN istrue_a6_b12_x5 = 0bin1 ELSE istrue_a6_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a6)] THEN istrue_a6_b12_x6 = 0bin1 ELSE istrue_a6_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a6)] THEN istrue_a6_b12_x7 = 0bin1 ELSE istrue_a6_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a6)] THEN istrue_a6_b12_x8 = 0bin1 ELSE istrue_a6_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a6)] THEN istrue_a6_b12_x9 = 0bin1 ELSE istrue_a6_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a6)] THEN istrue_a6_b12_x10 = 0bin1 ELSE istrue_a6_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a6)] THEN istrue_a6_b12_x11 = 0bin1 ELSE istrue_a6_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a6)] THEN istrue_a6_b12_x12 = 0bin1 ELSE istrue_a6_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a6)] THEN istrue_a6_b12_x13 = 0bin1 ELSE istrue_a6_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a6)] THEN istrue_a6_b12_x14 = 0bin1 ELSE istrue_a6_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a6)] THEN istrue_a6_b12_x15 = 0bin1 ELSE istrue_a6_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b12 = BVPLUS(5, 0bin0000@istrue_a6_b12_x0, 0bin0000@istrue_a6_b12_x1, 0bin0000@istrue_a6_b12_x2, 0bin0000@istrue_a6_b12_x3, 0bin0000@istrue_a6_b12_x4, 0bin0000@istrue_a6_b12_x5, 0bin0000@istrue_a6_b12_x6, 0bin0000@istrue_a6_b12_x7, 0bin0000@istrue_a6_b12_x8, 0bin0000@istrue_a6_b12_x9, 0bin0000@istrue_a6_b12_x10, 0bin0000@istrue_a6_b12_x11, 0bin0000@istrue_a6_b12_x12, 0bin0000@istrue_a6_b12_x13, 0bin0000@istrue_a6_b12_x14, 0bin0000@istrue_a6_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a6)] THEN istrue_a6_b13_x0 = 0bin1 ELSE istrue_a6_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a6)] THEN istrue_a6_b13_x1 = 0bin1 ELSE istrue_a6_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a6)] THEN istrue_a6_b13_x2 = 0bin1 ELSE istrue_a6_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a6)] THEN istrue_a6_b13_x3 = 0bin1 ELSE istrue_a6_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a6)] THEN istrue_a6_b13_x4 = 0bin1 ELSE istrue_a6_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a6)] THEN istrue_a6_b13_x5 = 0bin1 ELSE istrue_a6_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a6)] THEN istrue_a6_b13_x6 = 0bin1 ELSE istrue_a6_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a6)] THEN istrue_a6_b13_x7 = 0bin1 ELSE istrue_a6_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a6)] THEN istrue_a6_b13_x8 = 0bin1 ELSE istrue_a6_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a6)] THEN istrue_a6_b13_x9 = 0bin1 ELSE istrue_a6_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a6)] THEN istrue_a6_b13_x10 = 0bin1 ELSE istrue_a6_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a6)] THEN istrue_a6_b13_x11 = 0bin1 ELSE istrue_a6_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a6)] THEN istrue_a6_b13_x12 = 0bin1 ELSE istrue_a6_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a6)] THEN istrue_a6_b13_x13 = 0bin1 ELSE istrue_a6_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a6)] THEN istrue_a6_b13_x14 = 0bin1 ELSE istrue_a6_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a6)] THEN istrue_a6_b13_x15 = 0bin1 ELSE istrue_a6_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b13 = BVPLUS(5, 0bin0000@istrue_a6_b13_x0, 0bin0000@istrue_a6_b13_x1, 0bin0000@istrue_a6_b13_x2, 0bin0000@istrue_a6_b13_x3, 0bin0000@istrue_a6_b13_x4, 0bin0000@istrue_a6_b13_x5, 0bin0000@istrue_a6_b13_x6, 0bin0000@istrue_a6_b13_x7, 0bin0000@istrue_a6_b13_x8, 0bin0000@istrue_a6_b13_x9, 0bin0000@istrue_a6_b13_x10, 0bin0000@istrue_a6_b13_x11, 0bin0000@istrue_a6_b13_x12, 0bin0000@istrue_a6_b13_x13, 0bin0000@istrue_a6_b13_x14, 0bin0000@istrue_a6_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a6)] THEN istrue_a6_b14_x0 = 0bin1 ELSE istrue_a6_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a6)] THEN istrue_a6_b14_x1 = 0bin1 ELSE istrue_a6_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a6)] THEN istrue_a6_b14_x2 = 0bin1 ELSE istrue_a6_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a6)] THEN istrue_a6_b14_x3 = 0bin1 ELSE istrue_a6_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a6)] THEN istrue_a6_b14_x4 = 0bin1 ELSE istrue_a6_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a6)] THEN istrue_a6_b14_x5 = 0bin1 ELSE istrue_a6_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a6)] THEN istrue_a6_b14_x6 = 0bin1 ELSE istrue_a6_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a6)] THEN istrue_a6_b14_x7 = 0bin1 ELSE istrue_a6_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a6)] THEN istrue_a6_b14_x8 = 0bin1 ELSE istrue_a6_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a6)] THEN istrue_a6_b14_x9 = 0bin1 ELSE istrue_a6_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a6)] THEN istrue_a6_b14_x10 = 0bin1 ELSE istrue_a6_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a6)] THEN istrue_a6_b14_x11 = 0bin1 ELSE istrue_a6_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a6)] THEN istrue_a6_b14_x12 = 0bin1 ELSE istrue_a6_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a6)] THEN istrue_a6_b14_x13 = 0bin1 ELSE istrue_a6_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a6)] THEN istrue_a6_b14_x14 = 0bin1 ELSE istrue_a6_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a6)] THEN istrue_a6_b14_x15 = 0bin1 ELSE istrue_a6_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b14 = BVPLUS(5, 0bin0000@istrue_a6_b14_x0, 0bin0000@istrue_a6_b14_x1, 0bin0000@istrue_a6_b14_x2, 0bin0000@istrue_a6_b14_x3, 0bin0000@istrue_a6_b14_x4, 0bin0000@istrue_a6_b14_x5, 0bin0000@istrue_a6_b14_x6, 0bin0000@istrue_a6_b14_x7, 0bin0000@istrue_a6_b14_x8, 0bin0000@istrue_a6_b14_x9, 0bin0000@istrue_a6_b14_x10, 0bin0000@istrue_a6_b14_x11, 0bin0000@istrue_a6_b14_x12, 0bin0000@istrue_a6_b14_x13, 0bin0000@istrue_a6_b14_x14, 0bin0000@istrue_a6_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a6)] THEN istrue_a6_b15_x0 = 0bin1 ELSE istrue_a6_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a6)] THEN istrue_a6_b15_x1 = 0bin1 ELSE istrue_a6_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a6)] THEN istrue_a6_b15_x2 = 0bin1 ELSE istrue_a6_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a6)] THEN istrue_a6_b15_x3 = 0bin1 ELSE istrue_a6_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a6)] THEN istrue_a6_b15_x4 = 0bin1 ELSE istrue_a6_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a6)] THEN istrue_a6_b15_x5 = 0bin1 ELSE istrue_a6_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a6)] THEN istrue_a6_b15_x6 = 0bin1 ELSE istrue_a6_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a6)] THEN istrue_a6_b15_x7 = 0bin1 ELSE istrue_a6_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a6)] THEN istrue_a6_b15_x8 = 0bin1 ELSE istrue_a6_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a6)] THEN istrue_a6_b15_x9 = 0bin1 ELSE istrue_a6_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a6)] THEN istrue_a6_b15_x10 = 0bin1 ELSE istrue_a6_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a6)] THEN istrue_a6_b15_x11 = 0bin1 ELSE istrue_a6_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a6)] THEN istrue_a6_b15_x12 = 0bin1 ELSE istrue_a6_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a6)] THEN istrue_a6_b15_x13 = 0bin1 ELSE istrue_a6_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a6)] THEN istrue_a6_b15_x14 = 0bin1 ELSE istrue_a6_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a6)] THEN istrue_a6_b15_x15 = 0bin1 ELSE istrue_a6_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a6_b15 = BVPLUS(5, 0bin0000@istrue_a6_b15_x0, 0bin0000@istrue_a6_b15_x1, 0bin0000@istrue_a6_b15_x2, 0bin0000@istrue_a6_b15_x3, 0bin0000@istrue_a6_b15_x4, 0bin0000@istrue_a6_b15_x5, 0bin0000@istrue_a6_b15_x6, 0bin0000@istrue_a6_b15_x7, 0bin0000@istrue_a6_b15_x8, 0bin0000@istrue_a6_b15_x9, 0bin0000@istrue_a6_b15_x10, 0bin0000@istrue_a6_b15_x11, 0bin0000@istrue_a6_b15_x12, 0bin0000@istrue_a6_b15_x13, 0bin0000@istrue_a6_b15_x14, 0bin0000@istrue_a6_b15_x15));
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a7)] THEN istrue_a7_b0_x0 = 0bin1 ELSE istrue_a7_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a7)] THEN istrue_a7_b0_x1 = 0bin1 ELSE istrue_a7_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a7)] THEN istrue_a7_b0_x2 = 0bin1 ELSE istrue_a7_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a7)] THEN istrue_a7_b0_x3 = 0bin1 ELSE istrue_a7_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a7)] THEN istrue_a7_b0_x4 = 0bin1 ELSE istrue_a7_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a7)] THEN istrue_a7_b0_x5 = 0bin1 ELSE istrue_a7_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a7)] THEN istrue_a7_b0_x6 = 0bin1 ELSE istrue_a7_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a7)] THEN istrue_a7_b0_x7 = 0bin1 ELSE istrue_a7_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a7)] THEN istrue_a7_b0_x8 = 0bin1 ELSE istrue_a7_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a7)] THEN istrue_a7_b0_x9 = 0bin1 ELSE istrue_a7_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a7)] THEN istrue_a7_b0_x10 = 0bin1 ELSE istrue_a7_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a7)] THEN istrue_a7_b0_x11 = 0bin1 ELSE istrue_a7_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a7)] THEN istrue_a7_b0_x12 = 0bin1 ELSE istrue_a7_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a7)] THEN istrue_a7_b0_x13 = 0bin1 ELSE istrue_a7_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a7)] THEN istrue_a7_b0_x14 = 0bin1 ELSE istrue_a7_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a7)] THEN istrue_a7_b0_x15 = 0bin1 ELSE istrue_a7_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b0 = BVPLUS(5, 0bin0000@istrue_a7_b0_x0, 0bin0000@istrue_a7_b0_x1, 0bin0000@istrue_a7_b0_x2, 0bin0000@istrue_a7_b0_x3, 0bin0000@istrue_a7_b0_x4, 0bin0000@istrue_a7_b0_x5, 0bin0000@istrue_a7_b0_x6, 0bin0000@istrue_a7_b0_x7, 0bin0000@istrue_a7_b0_x8, 0bin0000@istrue_a7_b0_x9, 0bin0000@istrue_a7_b0_x10, 0bin0000@istrue_a7_b0_x11, 0bin0000@istrue_a7_b0_x12, 0bin0000@istrue_a7_b0_x13, 0bin0000@istrue_a7_b0_x14, 0bin0000@istrue_a7_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a7)] THEN istrue_a7_b1_x0 = 0bin1 ELSE istrue_a7_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a7)] THEN istrue_a7_b1_x1 = 0bin1 ELSE istrue_a7_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a7)] THEN istrue_a7_b1_x2 = 0bin1 ELSE istrue_a7_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a7)] THEN istrue_a7_b1_x3 = 0bin1 ELSE istrue_a7_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a7)] THEN istrue_a7_b1_x4 = 0bin1 ELSE istrue_a7_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a7)] THEN istrue_a7_b1_x5 = 0bin1 ELSE istrue_a7_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a7)] THEN istrue_a7_b1_x6 = 0bin1 ELSE istrue_a7_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a7)] THEN istrue_a7_b1_x7 = 0bin1 ELSE istrue_a7_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a7)] THEN istrue_a7_b1_x8 = 0bin1 ELSE istrue_a7_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a7)] THEN istrue_a7_b1_x9 = 0bin1 ELSE istrue_a7_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a7)] THEN istrue_a7_b1_x10 = 0bin1 ELSE istrue_a7_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a7)] THEN istrue_a7_b1_x11 = 0bin1 ELSE istrue_a7_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a7)] THEN istrue_a7_b1_x12 = 0bin1 ELSE istrue_a7_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a7)] THEN istrue_a7_b1_x13 = 0bin1 ELSE istrue_a7_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a7)] THEN istrue_a7_b1_x14 = 0bin1 ELSE istrue_a7_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a7)] THEN istrue_a7_b1_x15 = 0bin1 ELSE istrue_a7_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b1 = BVPLUS(5, 0bin0000@istrue_a7_b1_x0, 0bin0000@istrue_a7_b1_x1, 0bin0000@istrue_a7_b1_x2, 0bin0000@istrue_a7_b1_x3, 0bin0000@istrue_a7_b1_x4, 0bin0000@istrue_a7_b1_x5, 0bin0000@istrue_a7_b1_x6, 0bin0000@istrue_a7_b1_x7, 0bin0000@istrue_a7_b1_x8, 0bin0000@istrue_a7_b1_x9, 0bin0000@istrue_a7_b1_x10, 0bin0000@istrue_a7_b1_x11, 0bin0000@istrue_a7_b1_x12, 0bin0000@istrue_a7_b1_x13, 0bin0000@istrue_a7_b1_x14, 0bin0000@istrue_a7_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a7)] THEN istrue_a7_b2_x0 = 0bin1 ELSE istrue_a7_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a7)] THEN istrue_a7_b2_x1 = 0bin1 ELSE istrue_a7_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a7)] THEN istrue_a7_b2_x2 = 0bin1 ELSE istrue_a7_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a7)] THEN istrue_a7_b2_x3 = 0bin1 ELSE istrue_a7_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a7)] THEN istrue_a7_b2_x4 = 0bin1 ELSE istrue_a7_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a7)] THEN istrue_a7_b2_x5 = 0bin1 ELSE istrue_a7_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a7)] THEN istrue_a7_b2_x6 = 0bin1 ELSE istrue_a7_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a7)] THEN istrue_a7_b2_x7 = 0bin1 ELSE istrue_a7_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a7)] THEN istrue_a7_b2_x8 = 0bin1 ELSE istrue_a7_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a7)] THEN istrue_a7_b2_x9 = 0bin1 ELSE istrue_a7_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a7)] THEN istrue_a7_b2_x10 = 0bin1 ELSE istrue_a7_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a7)] THEN istrue_a7_b2_x11 = 0bin1 ELSE istrue_a7_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a7)] THEN istrue_a7_b2_x12 = 0bin1 ELSE istrue_a7_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a7)] THEN istrue_a7_b2_x13 = 0bin1 ELSE istrue_a7_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a7)] THEN istrue_a7_b2_x14 = 0bin1 ELSE istrue_a7_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a7)] THEN istrue_a7_b2_x15 = 0bin1 ELSE istrue_a7_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b2 = BVPLUS(5, 0bin0000@istrue_a7_b2_x0, 0bin0000@istrue_a7_b2_x1, 0bin0000@istrue_a7_b2_x2, 0bin0000@istrue_a7_b2_x3, 0bin0000@istrue_a7_b2_x4, 0bin0000@istrue_a7_b2_x5, 0bin0000@istrue_a7_b2_x6, 0bin0000@istrue_a7_b2_x7, 0bin0000@istrue_a7_b2_x8, 0bin0000@istrue_a7_b2_x9, 0bin0000@istrue_a7_b2_x10, 0bin0000@istrue_a7_b2_x11, 0bin0000@istrue_a7_b2_x12, 0bin0000@istrue_a7_b2_x13, 0bin0000@istrue_a7_b2_x14, 0bin0000@istrue_a7_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a7)] THEN istrue_a7_b3_x0 = 0bin1 ELSE istrue_a7_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a7)] THEN istrue_a7_b3_x1 = 0bin1 ELSE istrue_a7_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a7)] THEN istrue_a7_b3_x2 = 0bin1 ELSE istrue_a7_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a7)] THEN istrue_a7_b3_x3 = 0bin1 ELSE istrue_a7_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a7)] THEN istrue_a7_b3_x4 = 0bin1 ELSE istrue_a7_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a7)] THEN istrue_a7_b3_x5 = 0bin1 ELSE istrue_a7_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a7)] THEN istrue_a7_b3_x6 = 0bin1 ELSE istrue_a7_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a7)] THEN istrue_a7_b3_x7 = 0bin1 ELSE istrue_a7_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a7)] THEN istrue_a7_b3_x8 = 0bin1 ELSE istrue_a7_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a7)] THEN istrue_a7_b3_x9 = 0bin1 ELSE istrue_a7_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a7)] THEN istrue_a7_b3_x10 = 0bin1 ELSE istrue_a7_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a7)] THEN istrue_a7_b3_x11 = 0bin1 ELSE istrue_a7_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a7)] THEN istrue_a7_b3_x12 = 0bin1 ELSE istrue_a7_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a7)] THEN istrue_a7_b3_x13 = 0bin1 ELSE istrue_a7_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a7)] THEN istrue_a7_b3_x14 = 0bin1 ELSE istrue_a7_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a7)] THEN istrue_a7_b3_x15 = 0bin1 ELSE istrue_a7_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b3 = BVPLUS(5, 0bin0000@istrue_a7_b3_x0, 0bin0000@istrue_a7_b3_x1, 0bin0000@istrue_a7_b3_x2, 0bin0000@istrue_a7_b3_x3, 0bin0000@istrue_a7_b3_x4, 0bin0000@istrue_a7_b3_x5, 0bin0000@istrue_a7_b3_x6, 0bin0000@istrue_a7_b3_x7, 0bin0000@istrue_a7_b3_x8, 0bin0000@istrue_a7_b3_x9, 0bin0000@istrue_a7_b3_x10, 0bin0000@istrue_a7_b3_x11, 0bin0000@istrue_a7_b3_x12, 0bin0000@istrue_a7_b3_x13, 0bin0000@istrue_a7_b3_x14, 0bin0000@istrue_a7_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a7)] THEN istrue_a7_b4_x0 = 0bin1 ELSE istrue_a7_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a7)] THEN istrue_a7_b4_x1 = 0bin1 ELSE istrue_a7_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a7)] THEN istrue_a7_b4_x2 = 0bin1 ELSE istrue_a7_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a7)] THEN istrue_a7_b4_x3 = 0bin1 ELSE istrue_a7_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a7)] THEN istrue_a7_b4_x4 = 0bin1 ELSE istrue_a7_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a7)] THEN istrue_a7_b4_x5 = 0bin1 ELSE istrue_a7_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a7)] THEN istrue_a7_b4_x6 = 0bin1 ELSE istrue_a7_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a7)] THEN istrue_a7_b4_x7 = 0bin1 ELSE istrue_a7_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a7)] THEN istrue_a7_b4_x8 = 0bin1 ELSE istrue_a7_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a7)] THEN istrue_a7_b4_x9 = 0bin1 ELSE istrue_a7_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a7)] THEN istrue_a7_b4_x10 = 0bin1 ELSE istrue_a7_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a7)] THEN istrue_a7_b4_x11 = 0bin1 ELSE istrue_a7_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a7)] THEN istrue_a7_b4_x12 = 0bin1 ELSE istrue_a7_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a7)] THEN istrue_a7_b4_x13 = 0bin1 ELSE istrue_a7_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a7)] THEN istrue_a7_b4_x14 = 0bin1 ELSE istrue_a7_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a7)] THEN istrue_a7_b4_x15 = 0bin1 ELSE istrue_a7_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b4 = BVPLUS(5, 0bin0000@istrue_a7_b4_x0, 0bin0000@istrue_a7_b4_x1, 0bin0000@istrue_a7_b4_x2, 0bin0000@istrue_a7_b4_x3, 0bin0000@istrue_a7_b4_x4, 0bin0000@istrue_a7_b4_x5, 0bin0000@istrue_a7_b4_x6, 0bin0000@istrue_a7_b4_x7, 0bin0000@istrue_a7_b4_x8, 0bin0000@istrue_a7_b4_x9, 0bin0000@istrue_a7_b4_x10, 0bin0000@istrue_a7_b4_x11, 0bin0000@istrue_a7_b4_x12, 0bin0000@istrue_a7_b4_x13, 0bin0000@istrue_a7_b4_x14, 0bin0000@istrue_a7_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a7)] THEN istrue_a7_b5_x0 = 0bin1 ELSE istrue_a7_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a7)] THEN istrue_a7_b5_x1 = 0bin1 ELSE istrue_a7_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a7)] THEN istrue_a7_b5_x2 = 0bin1 ELSE istrue_a7_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a7)] THEN istrue_a7_b5_x3 = 0bin1 ELSE istrue_a7_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a7)] THEN istrue_a7_b5_x4 = 0bin1 ELSE istrue_a7_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a7)] THEN istrue_a7_b5_x5 = 0bin1 ELSE istrue_a7_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a7)] THEN istrue_a7_b5_x6 = 0bin1 ELSE istrue_a7_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a7)] THEN istrue_a7_b5_x7 = 0bin1 ELSE istrue_a7_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a7)] THEN istrue_a7_b5_x8 = 0bin1 ELSE istrue_a7_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a7)] THEN istrue_a7_b5_x9 = 0bin1 ELSE istrue_a7_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a7)] THEN istrue_a7_b5_x10 = 0bin1 ELSE istrue_a7_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a7)] THEN istrue_a7_b5_x11 = 0bin1 ELSE istrue_a7_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a7)] THEN istrue_a7_b5_x12 = 0bin1 ELSE istrue_a7_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a7)] THEN istrue_a7_b5_x13 = 0bin1 ELSE istrue_a7_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a7)] THEN istrue_a7_b5_x14 = 0bin1 ELSE istrue_a7_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a7)] THEN istrue_a7_b5_x15 = 0bin1 ELSE istrue_a7_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b5 = BVPLUS(5, 0bin0000@istrue_a7_b5_x0, 0bin0000@istrue_a7_b5_x1, 0bin0000@istrue_a7_b5_x2, 0bin0000@istrue_a7_b5_x3, 0bin0000@istrue_a7_b5_x4, 0bin0000@istrue_a7_b5_x5, 0bin0000@istrue_a7_b5_x6, 0bin0000@istrue_a7_b5_x7, 0bin0000@istrue_a7_b5_x8, 0bin0000@istrue_a7_b5_x9, 0bin0000@istrue_a7_b5_x10, 0bin0000@istrue_a7_b5_x11, 0bin0000@istrue_a7_b5_x12, 0bin0000@istrue_a7_b5_x13, 0bin0000@istrue_a7_b5_x14, 0bin0000@istrue_a7_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a7)] THEN istrue_a7_b6_x0 = 0bin1 ELSE istrue_a7_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a7)] THEN istrue_a7_b6_x1 = 0bin1 ELSE istrue_a7_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a7)] THEN istrue_a7_b6_x2 = 0bin1 ELSE istrue_a7_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a7)] THEN istrue_a7_b6_x3 = 0bin1 ELSE istrue_a7_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a7)] THEN istrue_a7_b6_x4 = 0bin1 ELSE istrue_a7_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a7)] THEN istrue_a7_b6_x5 = 0bin1 ELSE istrue_a7_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a7)] THEN istrue_a7_b6_x6 = 0bin1 ELSE istrue_a7_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a7)] THEN istrue_a7_b6_x7 = 0bin1 ELSE istrue_a7_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a7)] THEN istrue_a7_b6_x8 = 0bin1 ELSE istrue_a7_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a7)] THEN istrue_a7_b6_x9 = 0bin1 ELSE istrue_a7_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a7)] THEN istrue_a7_b6_x10 = 0bin1 ELSE istrue_a7_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a7)] THEN istrue_a7_b6_x11 = 0bin1 ELSE istrue_a7_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a7)] THEN istrue_a7_b6_x12 = 0bin1 ELSE istrue_a7_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a7)] THEN istrue_a7_b6_x13 = 0bin1 ELSE istrue_a7_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a7)] THEN istrue_a7_b6_x14 = 0bin1 ELSE istrue_a7_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a7)] THEN istrue_a7_b6_x15 = 0bin1 ELSE istrue_a7_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b6 = BVPLUS(5, 0bin0000@istrue_a7_b6_x0, 0bin0000@istrue_a7_b6_x1, 0bin0000@istrue_a7_b6_x2, 0bin0000@istrue_a7_b6_x3, 0bin0000@istrue_a7_b6_x4, 0bin0000@istrue_a7_b6_x5, 0bin0000@istrue_a7_b6_x6, 0bin0000@istrue_a7_b6_x7, 0bin0000@istrue_a7_b6_x8, 0bin0000@istrue_a7_b6_x9, 0bin0000@istrue_a7_b6_x10, 0bin0000@istrue_a7_b6_x11, 0bin0000@istrue_a7_b6_x12, 0bin0000@istrue_a7_b6_x13, 0bin0000@istrue_a7_b6_x14, 0bin0000@istrue_a7_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a7)] THEN istrue_a7_b7_x0 = 0bin1 ELSE istrue_a7_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a7)] THEN istrue_a7_b7_x1 = 0bin1 ELSE istrue_a7_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a7)] THEN istrue_a7_b7_x2 = 0bin1 ELSE istrue_a7_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a7)] THEN istrue_a7_b7_x3 = 0bin1 ELSE istrue_a7_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a7)] THEN istrue_a7_b7_x4 = 0bin1 ELSE istrue_a7_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a7)] THEN istrue_a7_b7_x5 = 0bin1 ELSE istrue_a7_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a7)] THEN istrue_a7_b7_x6 = 0bin1 ELSE istrue_a7_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a7)] THEN istrue_a7_b7_x7 = 0bin1 ELSE istrue_a7_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a7)] THEN istrue_a7_b7_x8 = 0bin1 ELSE istrue_a7_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a7)] THEN istrue_a7_b7_x9 = 0bin1 ELSE istrue_a7_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a7)] THEN istrue_a7_b7_x10 = 0bin1 ELSE istrue_a7_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a7)] THEN istrue_a7_b7_x11 = 0bin1 ELSE istrue_a7_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a7)] THEN istrue_a7_b7_x12 = 0bin1 ELSE istrue_a7_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a7)] THEN istrue_a7_b7_x13 = 0bin1 ELSE istrue_a7_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a7)] THEN istrue_a7_b7_x14 = 0bin1 ELSE istrue_a7_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a7)] THEN istrue_a7_b7_x15 = 0bin1 ELSE istrue_a7_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b7 = BVPLUS(5, 0bin0000@istrue_a7_b7_x0, 0bin0000@istrue_a7_b7_x1, 0bin0000@istrue_a7_b7_x2, 0bin0000@istrue_a7_b7_x3, 0bin0000@istrue_a7_b7_x4, 0bin0000@istrue_a7_b7_x5, 0bin0000@istrue_a7_b7_x6, 0bin0000@istrue_a7_b7_x7, 0bin0000@istrue_a7_b7_x8, 0bin0000@istrue_a7_b7_x9, 0bin0000@istrue_a7_b7_x10, 0bin0000@istrue_a7_b7_x11, 0bin0000@istrue_a7_b7_x12, 0bin0000@istrue_a7_b7_x13, 0bin0000@istrue_a7_b7_x14, 0bin0000@istrue_a7_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a7)] THEN istrue_a7_b8_x0 = 0bin1 ELSE istrue_a7_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a7)] THEN istrue_a7_b8_x1 = 0bin1 ELSE istrue_a7_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a7)] THEN istrue_a7_b8_x2 = 0bin1 ELSE istrue_a7_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a7)] THEN istrue_a7_b8_x3 = 0bin1 ELSE istrue_a7_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a7)] THEN istrue_a7_b8_x4 = 0bin1 ELSE istrue_a7_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a7)] THEN istrue_a7_b8_x5 = 0bin1 ELSE istrue_a7_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a7)] THEN istrue_a7_b8_x6 = 0bin1 ELSE istrue_a7_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a7)] THEN istrue_a7_b8_x7 = 0bin1 ELSE istrue_a7_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a7)] THEN istrue_a7_b8_x8 = 0bin1 ELSE istrue_a7_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a7)] THEN istrue_a7_b8_x9 = 0bin1 ELSE istrue_a7_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a7)] THEN istrue_a7_b8_x10 = 0bin1 ELSE istrue_a7_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a7)] THEN istrue_a7_b8_x11 = 0bin1 ELSE istrue_a7_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a7)] THEN istrue_a7_b8_x12 = 0bin1 ELSE istrue_a7_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a7)] THEN istrue_a7_b8_x13 = 0bin1 ELSE istrue_a7_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a7)] THEN istrue_a7_b8_x14 = 0bin1 ELSE istrue_a7_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a7)] THEN istrue_a7_b8_x15 = 0bin1 ELSE istrue_a7_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b8 = BVPLUS(5, 0bin0000@istrue_a7_b8_x0, 0bin0000@istrue_a7_b8_x1, 0bin0000@istrue_a7_b8_x2, 0bin0000@istrue_a7_b8_x3, 0bin0000@istrue_a7_b8_x4, 0bin0000@istrue_a7_b8_x5, 0bin0000@istrue_a7_b8_x6, 0bin0000@istrue_a7_b8_x7, 0bin0000@istrue_a7_b8_x8, 0bin0000@istrue_a7_b8_x9, 0bin0000@istrue_a7_b8_x10, 0bin0000@istrue_a7_b8_x11, 0bin0000@istrue_a7_b8_x12, 0bin0000@istrue_a7_b8_x13, 0bin0000@istrue_a7_b8_x14, 0bin0000@istrue_a7_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a7)] THEN istrue_a7_b9_x0 = 0bin1 ELSE istrue_a7_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a7)] THEN istrue_a7_b9_x1 = 0bin1 ELSE istrue_a7_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a7)] THEN istrue_a7_b9_x2 = 0bin1 ELSE istrue_a7_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a7)] THEN istrue_a7_b9_x3 = 0bin1 ELSE istrue_a7_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a7)] THEN istrue_a7_b9_x4 = 0bin1 ELSE istrue_a7_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a7)] THEN istrue_a7_b9_x5 = 0bin1 ELSE istrue_a7_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a7)] THEN istrue_a7_b9_x6 = 0bin1 ELSE istrue_a7_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a7)] THEN istrue_a7_b9_x7 = 0bin1 ELSE istrue_a7_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a7)] THEN istrue_a7_b9_x8 = 0bin1 ELSE istrue_a7_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a7)] THEN istrue_a7_b9_x9 = 0bin1 ELSE istrue_a7_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a7)] THEN istrue_a7_b9_x10 = 0bin1 ELSE istrue_a7_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a7)] THEN istrue_a7_b9_x11 = 0bin1 ELSE istrue_a7_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a7)] THEN istrue_a7_b9_x12 = 0bin1 ELSE istrue_a7_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a7)] THEN istrue_a7_b9_x13 = 0bin1 ELSE istrue_a7_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a7)] THEN istrue_a7_b9_x14 = 0bin1 ELSE istrue_a7_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a7)] THEN istrue_a7_b9_x15 = 0bin1 ELSE istrue_a7_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b9 = BVPLUS(5, 0bin0000@istrue_a7_b9_x0, 0bin0000@istrue_a7_b9_x1, 0bin0000@istrue_a7_b9_x2, 0bin0000@istrue_a7_b9_x3, 0bin0000@istrue_a7_b9_x4, 0bin0000@istrue_a7_b9_x5, 0bin0000@istrue_a7_b9_x6, 0bin0000@istrue_a7_b9_x7, 0bin0000@istrue_a7_b9_x8, 0bin0000@istrue_a7_b9_x9, 0bin0000@istrue_a7_b9_x10, 0bin0000@istrue_a7_b9_x11, 0bin0000@istrue_a7_b9_x12, 0bin0000@istrue_a7_b9_x13, 0bin0000@istrue_a7_b9_x14, 0bin0000@istrue_a7_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a7)] THEN istrue_a7_b10_x0 = 0bin1 ELSE istrue_a7_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a7)] THEN istrue_a7_b10_x1 = 0bin1 ELSE istrue_a7_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a7)] THEN istrue_a7_b10_x2 = 0bin1 ELSE istrue_a7_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a7)] THEN istrue_a7_b10_x3 = 0bin1 ELSE istrue_a7_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a7)] THEN istrue_a7_b10_x4 = 0bin1 ELSE istrue_a7_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a7)] THEN istrue_a7_b10_x5 = 0bin1 ELSE istrue_a7_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a7)] THEN istrue_a7_b10_x6 = 0bin1 ELSE istrue_a7_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a7)] THEN istrue_a7_b10_x7 = 0bin1 ELSE istrue_a7_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a7)] THEN istrue_a7_b10_x8 = 0bin1 ELSE istrue_a7_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a7)] THEN istrue_a7_b10_x9 = 0bin1 ELSE istrue_a7_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a7)] THEN istrue_a7_b10_x10 = 0bin1 ELSE istrue_a7_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a7)] THEN istrue_a7_b10_x11 = 0bin1 ELSE istrue_a7_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a7)] THEN istrue_a7_b10_x12 = 0bin1 ELSE istrue_a7_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a7)] THEN istrue_a7_b10_x13 = 0bin1 ELSE istrue_a7_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a7)] THEN istrue_a7_b10_x14 = 0bin1 ELSE istrue_a7_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a7)] THEN istrue_a7_b10_x15 = 0bin1 ELSE istrue_a7_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b10 = BVPLUS(5, 0bin0000@istrue_a7_b10_x0, 0bin0000@istrue_a7_b10_x1, 0bin0000@istrue_a7_b10_x2, 0bin0000@istrue_a7_b10_x3, 0bin0000@istrue_a7_b10_x4, 0bin0000@istrue_a7_b10_x5, 0bin0000@istrue_a7_b10_x6, 0bin0000@istrue_a7_b10_x7, 0bin0000@istrue_a7_b10_x8, 0bin0000@istrue_a7_b10_x9, 0bin0000@istrue_a7_b10_x10, 0bin0000@istrue_a7_b10_x11, 0bin0000@istrue_a7_b10_x12, 0bin0000@istrue_a7_b10_x13, 0bin0000@istrue_a7_b10_x14, 0bin0000@istrue_a7_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a7)] THEN istrue_a7_b11_x0 = 0bin1 ELSE istrue_a7_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a7)] THEN istrue_a7_b11_x1 = 0bin1 ELSE istrue_a7_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a7)] THEN istrue_a7_b11_x2 = 0bin1 ELSE istrue_a7_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a7)] THEN istrue_a7_b11_x3 = 0bin1 ELSE istrue_a7_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a7)] THEN istrue_a7_b11_x4 = 0bin1 ELSE istrue_a7_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a7)] THEN istrue_a7_b11_x5 = 0bin1 ELSE istrue_a7_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a7)] THEN istrue_a7_b11_x6 = 0bin1 ELSE istrue_a7_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a7)] THEN istrue_a7_b11_x7 = 0bin1 ELSE istrue_a7_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a7)] THEN istrue_a7_b11_x8 = 0bin1 ELSE istrue_a7_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a7)] THEN istrue_a7_b11_x9 = 0bin1 ELSE istrue_a7_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a7)] THEN istrue_a7_b11_x10 = 0bin1 ELSE istrue_a7_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a7)] THEN istrue_a7_b11_x11 = 0bin1 ELSE istrue_a7_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a7)] THEN istrue_a7_b11_x12 = 0bin1 ELSE istrue_a7_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a7)] THEN istrue_a7_b11_x13 = 0bin1 ELSE istrue_a7_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a7)] THEN istrue_a7_b11_x14 = 0bin1 ELSE istrue_a7_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a7)] THEN istrue_a7_b11_x15 = 0bin1 ELSE istrue_a7_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b11 = BVPLUS(5, 0bin0000@istrue_a7_b11_x0, 0bin0000@istrue_a7_b11_x1, 0bin0000@istrue_a7_b11_x2, 0bin0000@istrue_a7_b11_x3, 0bin0000@istrue_a7_b11_x4, 0bin0000@istrue_a7_b11_x5, 0bin0000@istrue_a7_b11_x6, 0bin0000@istrue_a7_b11_x7, 0bin0000@istrue_a7_b11_x8, 0bin0000@istrue_a7_b11_x9, 0bin0000@istrue_a7_b11_x10, 0bin0000@istrue_a7_b11_x11, 0bin0000@istrue_a7_b11_x12, 0bin0000@istrue_a7_b11_x13, 0bin0000@istrue_a7_b11_x14, 0bin0000@istrue_a7_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a7)] THEN istrue_a7_b12_x0 = 0bin1 ELSE istrue_a7_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a7)] THEN istrue_a7_b12_x1 = 0bin1 ELSE istrue_a7_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a7)] THEN istrue_a7_b12_x2 = 0bin1 ELSE istrue_a7_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a7)] THEN istrue_a7_b12_x3 = 0bin1 ELSE istrue_a7_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a7)] THEN istrue_a7_b12_x4 = 0bin1 ELSE istrue_a7_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a7)] THEN istrue_a7_b12_x5 = 0bin1 ELSE istrue_a7_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a7)] THEN istrue_a7_b12_x6 = 0bin1 ELSE istrue_a7_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a7)] THEN istrue_a7_b12_x7 = 0bin1 ELSE istrue_a7_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a7)] THEN istrue_a7_b12_x8 = 0bin1 ELSE istrue_a7_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a7)] THEN istrue_a7_b12_x9 = 0bin1 ELSE istrue_a7_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a7)] THEN istrue_a7_b12_x10 = 0bin1 ELSE istrue_a7_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a7)] THEN istrue_a7_b12_x11 = 0bin1 ELSE istrue_a7_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a7)] THEN istrue_a7_b12_x12 = 0bin1 ELSE istrue_a7_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a7)] THEN istrue_a7_b12_x13 = 0bin1 ELSE istrue_a7_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a7)] THEN istrue_a7_b12_x14 = 0bin1 ELSE istrue_a7_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a7)] THEN istrue_a7_b12_x15 = 0bin1 ELSE istrue_a7_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b12 = BVPLUS(5, 0bin0000@istrue_a7_b12_x0, 0bin0000@istrue_a7_b12_x1, 0bin0000@istrue_a7_b12_x2, 0bin0000@istrue_a7_b12_x3, 0bin0000@istrue_a7_b12_x4, 0bin0000@istrue_a7_b12_x5, 0bin0000@istrue_a7_b12_x6, 0bin0000@istrue_a7_b12_x7, 0bin0000@istrue_a7_b12_x8, 0bin0000@istrue_a7_b12_x9, 0bin0000@istrue_a7_b12_x10, 0bin0000@istrue_a7_b12_x11, 0bin0000@istrue_a7_b12_x12, 0bin0000@istrue_a7_b12_x13, 0bin0000@istrue_a7_b12_x14, 0bin0000@istrue_a7_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a7)] THEN istrue_a7_b13_x0 = 0bin1 ELSE istrue_a7_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a7)] THEN istrue_a7_b13_x1 = 0bin1 ELSE istrue_a7_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a7)] THEN istrue_a7_b13_x2 = 0bin1 ELSE istrue_a7_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a7)] THEN istrue_a7_b13_x3 = 0bin1 ELSE istrue_a7_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a7)] THEN istrue_a7_b13_x4 = 0bin1 ELSE istrue_a7_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a7)] THEN istrue_a7_b13_x5 = 0bin1 ELSE istrue_a7_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a7)] THEN istrue_a7_b13_x6 = 0bin1 ELSE istrue_a7_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a7)] THEN istrue_a7_b13_x7 = 0bin1 ELSE istrue_a7_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a7)] THEN istrue_a7_b13_x8 = 0bin1 ELSE istrue_a7_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a7)] THEN istrue_a7_b13_x9 = 0bin1 ELSE istrue_a7_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a7)] THEN istrue_a7_b13_x10 = 0bin1 ELSE istrue_a7_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a7)] THEN istrue_a7_b13_x11 = 0bin1 ELSE istrue_a7_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a7)] THEN istrue_a7_b13_x12 = 0bin1 ELSE istrue_a7_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a7)] THEN istrue_a7_b13_x13 = 0bin1 ELSE istrue_a7_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a7)] THEN istrue_a7_b13_x14 = 0bin1 ELSE istrue_a7_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a7)] THEN istrue_a7_b13_x15 = 0bin1 ELSE istrue_a7_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b13 = BVPLUS(5, 0bin0000@istrue_a7_b13_x0, 0bin0000@istrue_a7_b13_x1, 0bin0000@istrue_a7_b13_x2, 0bin0000@istrue_a7_b13_x3, 0bin0000@istrue_a7_b13_x4, 0bin0000@istrue_a7_b13_x5, 0bin0000@istrue_a7_b13_x6, 0bin0000@istrue_a7_b13_x7, 0bin0000@istrue_a7_b13_x8, 0bin0000@istrue_a7_b13_x9, 0bin0000@istrue_a7_b13_x10, 0bin0000@istrue_a7_b13_x11, 0bin0000@istrue_a7_b13_x12, 0bin0000@istrue_a7_b13_x13, 0bin0000@istrue_a7_b13_x14, 0bin0000@istrue_a7_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a7)] THEN istrue_a7_b14_x0 = 0bin1 ELSE istrue_a7_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a7)] THEN istrue_a7_b14_x1 = 0bin1 ELSE istrue_a7_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a7)] THEN istrue_a7_b14_x2 = 0bin1 ELSE istrue_a7_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a7)] THEN istrue_a7_b14_x3 = 0bin1 ELSE istrue_a7_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a7)] THEN istrue_a7_b14_x4 = 0bin1 ELSE istrue_a7_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a7)] THEN istrue_a7_b14_x5 = 0bin1 ELSE istrue_a7_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a7)] THEN istrue_a7_b14_x6 = 0bin1 ELSE istrue_a7_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a7)] THEN istrue_a7_b14_x7 = 0bin1 ELSE istrue_a7_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a7)] THEN istrue_a7_b14_x8 = 0bin1 ELSE istrue_a7_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a7)] THEN istrue_a7_b14_x9 = 0bin1 ELSE istrue_a7_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a7)] THEN istrue_a7_b14_x10 = 0bin1 ELSE istrue_a7_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a7)] THEN istrue_a7_b14_x11 = 0bin1 ELSE istrue_a7_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a7)] THEN istrue_a7_b14_x12 = 0bin1 ELSE istrue_a7_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a7)] THEN istrue_a7_b14_x13 = 0bin1 ELSE istrue_a7_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a7)] THEN istrue_a7_b14_x14 = 0bin1 ELSE istrue_a7_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a7)] THEN istrue_a7_b14_x15 = 0bin1 ELSE istrue_a7_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b14 = BVPLUS(5, 0bin0000@istrue_a7_b14_x0, 0bin0000@istrue_a7_b14_x1, 0bin0000@istrue_a7_b14_x2, 0bin0000@istrue_a7_b14_x3, 0bin0000@istrue_a7_b14_x4, 0bin0000@istrue_a7_b14_x5, 0bin0000@istrue_a7_b14_x6, 0bin0000@istrue_a7_b14_x7, 0bin0000@istrue_a7_b14_x8, 0bin0000@istrue_a7_b14_x9, 0bin0000@istrue_a7_b14_x10, 0bin0000@istrue_a7_b14_x11, 0bin0000@istrue_a7_b14_x12, 0bin0000@istrue_a7_b14_x13, 0bin0000@istrue_a7_b14_x14, 0bin0000@istrue_a7_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a7)] THEN istrue_a7_b15_x0 = 0bin1 ELSE istrue_a7_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a7)] THEN istrue_a7_b15_x1 = 0bin1 ELSE istrue_a7_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a7)] THEN istrue_a7_b15_x2 = 0bin1 ELSE istrue_a7_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a7)] THEN istrue_a7_b15_x3 = 0bin1 ELSE istrue_a7_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a7)] THEN istrue_a7_b15_x4 = 0bin1 ELSE istrue_a7_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a7)] THEN istrue_a7_b15_x5 = 0bin1 ELSE istrue_a7_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a7)] THEN istrue_a7_b15_x6 = 0bin1 ELSE istrue_a7_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a7)] THEN istrue_a7_b15_x7 = 0bin1 ELSE istrue_a7_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a7)] THEN istrue_a7_b15_x8 = 0bin1 ELSE istrue_a7_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a7)] THEN istrue_a7_b15_x9 = 0bin1 ELSE istrue_a7_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a7)] THEN istrue_a7_b15_x10 = 0bin1 ELSE istrue_a7_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a7)] THEN istrue_a7_b15_x11 = 0bin1 ELSE istrue_a7_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a7)] THEN istrue_a7_b15_x12 = 0bin1 ELSE istrue_a7_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a7)] THEN istrue_a7_b15_x13 = 0bin1 ELSE istrue_a7_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a7)] THEN istrue_a7_b15_x14 = 0bin1 ELSE istrue_a7_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a7)] THEN istrue_a7_b15_x15 = 0bin1 ELSE istrue_a7_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a7_b15 = BVPLUS(5, 0bin0000@istrue_a7_b15_x0, 0bin0000@istrue_a7_b15_x1, 0bin0000@istrue_a7_b15_x2, 0bin0000@istrue_a7_b15_x3, 0bin0000@istrue_a7_b15_x4, 0bin0000@istrue_a7_b15_x5, 0bin0000@istrue_a7_b15_x6, 0bin0000@istrue_a7_b15_x7, 0bin0000@istrue_a7_b15_x8, 0bin0000@istrue_a7_b15_x9, 0bin0000@istrue_a7_b15_x10, 0bin0000@istrue_a7_b15_x11, 0bin0000@istrue_a7_b15_x12, 0bin0000@istrue_a7_b15_x13, 0bin0000@istrue_a7_b15_x14, 0bin0000@istrue_a7_b15_x15));
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a8)] THEN istrue_a8_b0_x0 = 0bin1 ELSE istrue_a8_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a8)] THEN istrue_a8_b0_x1 = 0bin1 ELSE istrue_a8_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a8)] THEN istrue_a8_b0_x2 = 0bin1 ELSE istrue_a8_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a8)] THEN istrue_a8_b0_x3 = 0bin1 ELSE istrue_a8_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a8)] THEN istrue_a8_b0_x4 = 0bin1 ELSE istrue_a8_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a8)] THEN istrue_a8_b0_x5 = 0bin1 ELSE istrue_a8_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a8)] THEN istrue_a8_b0_x6 = 0bin1 ELSE istrue_a8_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a8)] THEN istrue_a8_b0_x7 = 0bin1 ELSE istrue_a8_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a8)] THEN istrue_a8_b0_x8 = 0bin1 ELSE istrue_a8_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a8)] THEN istrue_a8_b0_x9 = 0bin1 ELSE istrue_a8_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a8)] THEN istrue_a8_b0_x10 = 0bin1 ELSE istrue_a8_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a8)] THEN istrue_a8_b0_x11 = 0bin1 ELSE istrue_a8_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a8)] THEN istrue_a8_b0_x12 = 0bin1 ELSE istrue_a8_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a8)] THEN istrue_a8_b0_x13 = 0bin1 ELSE istrue_a8_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a8)] THEN istrue_a8_b0_x14 = 0bin1 ELSE istrue_a8_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a8)] THEN istrue_a8_b0_x15 = 0bin1 ELSE istrue_a8_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b0 = BVPLUS(5, 0bin0000@istrue_a8_b0_x0, 0bin0000@istrue_a8_b0_x1, 0bin0000@istrue_a8_b0_x2, 0bin0000@istrue_a8_b0_x3, 0bin0000@istrue_a8_b0_x4, 0bin0000@istrue_a8_b0_x5, 0bin0000@istrue_a8_b0_x6, 0bin0000@istrue_a8_b0_x7, 0bin0000@istrue_a8_b0_x8, 0bin0000@istrue_a8_b0_x9, 0bin0000@istrue_a8_b0_x10, 0bin0000@istrue_a8_b0_x11, 0bin0000@istrue_a8_b0_x12, 0bin0000@istrue_a8_b0_x13, 0bin0000@istrue_a8_b0_x14, 0bin0000@istrue_a8_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a8)] THEN istrue_a8_b1_x0 = 0bin1 ELSE istrue_a8_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a8)] THEN istrue_a8_b1_x1 = 0bin1 ELSE istrue_a8_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a8)] THEN istrue_a8_b1_x2 = 0bin1 ELSE istrue_a8_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a8)] THEN istrue_a8_b1_x3 = 0bin1 ELSE istrue_a8_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a8)] THEN istrue_a8_b1_x4 = 0bin1 ELSE istrue_a8_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a8)] THEN istrue_a8_b1_x5 = 0bin1 ELSE istrue_a8_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a8)] THEN istrue_a8_b1_x6 = 0bin1 ELSE istrue_a8_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a8)] THEN istrue_a8_b1_x7 = 0bin1 ELSE istrue_a8_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a8)] THEN istrue_a8_b1_x8 = 0bin1 ELSE istrue_a8_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a8)] THEN istrue_a8_b1_x9 = 0bin1 ELSE istrue_a8_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a8)] THEN istrue_a8_b1_x10 = 0bin1 ELSE istrue_a8_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a8)] THEN istrue_a8_b1_x11 = 0bin1 ELSE istrue_a8_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a8)] THEN istrue_a8_b1_x12 = 0bin1 ELSE istrue_a8_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a8)] THEN istrue_a8_b1_x13 = 0bin1 ELSE istrue_a8_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a8)] THEN istrue_a8_b1_x14 = 0bin1 ELSE istrue_a8_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a8)] THEN istrue_a8_b1_x15 = 0bin1 ELSE istrue_a8_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b1 = BVPLUS(5, 0bin0000@istrue_a8_b1_x0, 0bin0000@istrue_a8_b1_x1, 0bin0000@istrue_a8_b1_x2, 0bin0000@istrue_a8_b1_x3, 0bin0000@istrue_a8_b1_x4, 0bin0000@istrue_a8_b1_x5, 0bin0000@istrue_a8_b1_x6, 0bin0000@istrue_a8_b1_x7, 0bin0000@istrue_a8_b1_x8, 0bin0000@istrue_a8_b1_x9, 0bin0000@istrue_a8_b1_x10, 0bin0000@istrue_a8_b1_x11, 0bin0000@istrue_a8_b1_x12, 0bin0000@istrue_a8_b1_x13, 0bin0000@istrue_a8_b1_x14, 0bin0000@istrue_a8_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a8)] THEN istrue_a8_b2_x0 = 0bin1 ELSE istrue_a8_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a8)] THEN istrue_a8_b2_x1 = 0bin1 ELSE istrue_a8_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a8)] THEN istrue_a8_b2_x2 = 0bin1 ELSE istrue_a8_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a8)] THEN istrue_a8_b2_x3 = 0bin1 ELSE istrue_a8_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a8)] THEN istrue_a8_b2_x4 = 0bin1 ELSE istrue_a8_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a8)] THEN istrue_a8_b2_x5 = 0bin1 ELSE istrue_a8_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a8)] THEN istrue_a8_b2_x6 = 0bin1 ELSE istrue_a8_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a8)] THEN istrue_a8_b2_x7 = 0bin1 ELSE istrue_a8_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a8)] THEN istrue_a8_b2_x8 = 0bin1 ELSE istrue_a8_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a8)] THEN istrue_a8_b2_x9 = 0bin1 ELSE istrue_a8_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a8)] THEN istrue_a8_b2_x10 = 0bin1 ELSE istrue_a8_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a8)] THEN istrue_a8_b2_x11 = 0bin1 ELSE istrue_a8_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a8)] THEN istrue_a8_b2_x12 = 0bin1 ELSE istrue_a8_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a8)] THEN istrue_a8_b2_x13 = 0bin1 ELSE istrue_a8_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a8)] THEN istrue_a8_b2_x14 = 0bin1 ELSE istrue_a8_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a8)] THEN istrue_a8_b2_x15 = 0bin1 ELSE istrue_a8_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b2 = BVPLUS(5, 0bin0000@istrue_a8_b2_x0, 0bin0000@istrue_a8_b2_x1, 0bin0000@istrue_a8_b2_x2, 0bin0000@istrue_a8_b2_x3, 0bin0000@istrue_a8_b2_x4, 0bin0000@istrue_a8_b2_x5, 0bin0000@istrue_a8_b2_x6, 0bin0000@istrue_a8_b2_x7, 0bin0000@istrue_a8_b2_x8, 0bin0000@istrue_a8_b2_x9, 0bin0000@istrue_a8_b2_x10, 0bin0000@istrue_a8_b2_x11, 0bin0000@istrue_a8_b2_x12, 0bin0000@istrue_a8_b2_x13, 0bin0000@istrue_a8_b2_x14, 0bin0000@istrue_a8_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a8)] THEN istrue_a8_b3_x0 = 0bin1 ELSE istrue_a8_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a8)] THEN istrue_a8_b3_x1 = 0bin1 ELSE istrue_a8_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a8)] THEN istrue_a8_b3_x2 = 0bin1 ELSE istrue_a8_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a8)] THEN istrue_a8_b3_x3 = 0bin1 ELSE istrue_a8_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a8)] THEN istrue_a8_b3_x4 = 0bin1 ELSE istrue_a8_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a8)] THEN istrue_a8_b3_x5 = 0bin1 ELSE istrue_a8_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a8)] THEN istrue_a8_b3_x6 = 0bin1 ELSE istrue_a8_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a8)] THEN istrue_a8_b3_x7 = 0bin1 ELSE istrue_a8_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a8)] THEN istrue_a8_b3_x8 = 0bin1 ELSE istrue_a8_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a8)] THEN istrue_a8_b3_x9 = 0bin1 ELSE istrue_a8_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a8)] THEN istrue_a8_b3_x10 = 0bin1 ELSE istrue_a8_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a8)] THEN istrue_a8_b3_x11 = 0bin1 ELSE istrue_a8_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a8)] THEN istrue_a8_b3_x12 = 0bin1 ELSE istrue_a8_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a8)] THEN istrue_a8_b3_x13 = 0bin1 ELSE istrue_a8_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a8)] THEN istrue_a8_b3_x14 = 0bin1 ELSE istrue_a8_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a8)] THEN istrue_a8_b3_x15 = 0bin1 ELSE istrue_a8_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b3 = BVPLUS(5, 0bin0000@istrue_a8_b3_x0, 0bin0000@istrue_a8_b3_x1, 0bin0000@istrue_a8_b3_x2, 0bin0000@istrue_a8_b3_x3, 0bin0000@istrue_a8_b3_x4, 0bin0000@istrue_a8_b3_x5, 0bin0000@istrue_a8_b3_x6, 0bin0000@istrue_a8_b3_x7, 0bin0000@istrue_a8_b3_x8, 0bin0000@istrue_a8_b3_x9, 0bin0000@istrue_a8_b3_x10, 0bin0000@istrue_a8_b3_x11, 0bin0000@istrue_a8_b3_x12, 0bin0000@istrue_a8_b3_x13, 0bin0000@istrue_a8_b3_x14, 0bin0000@istrue_a8_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a8)] THEN istrue_a8_b4_x0 = 0bin1 ELSE istrue_a8_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a8)] THEN istrue_a8_b4_x1 = 0bin1 ELSE istrue_a8_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a8)] THEN istrue_a8_b4_x2 = 0bin1 ELSE istrue_a8_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a8)] THEN istrue_a8_b4_x3 = 0bin1 ELSE istrue_a8_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a8)] THEN istrue_a8_b4_x4 = 0bin1 ELSE istrue_a8_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a8)] THEN istrue_a8_b4_x5 = 0bin1 ELSE istrue_a8_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a8)] THEN istrue_a8_b4_x6 = 0bin1 ELSE istrue_a8_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a8)] THEN istrue_a8_b4_x7 = 0bin1 ELSE istrue_a8_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a8)] THEN istrue_a8_b4_x8 = 0bin1 ELSE istrue_a8_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a8)] THEN istrue_a8_b4_x9 = 0bin1 ELSE istrue_a8_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a8)] THEN istrue_a8_b4_x10 = 0bin1 ELSE istrue_a8_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a8)] THEN istrue_a8_b4_x11 = 0bin1 ELSE istrue_a8_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a8)] THEN istrue_a8_b4_x12 = 0bin1 ELSE istrue_a8_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a8)] THEN istrue_a8_b4_x13 = 0bin1 ELSE istrue_a8_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a8)] THEN istrue_a8_b4_x14 = 0bin1 ELSE istrue_a8_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a8)] THEN istrue_a8_b4_x15 = 0bin1 ELSE istrue_a8_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b4 = BVPLUS(5, 0bin0000@istrue_a8_b4_x0, 0bin0000@istrue_a8_b4_x1, 0bin0000@istrue_a8_b4_x2, 0bin0000@istrue_a8_b4_x3, 0bin0000@istrue_a8_b4_x4, 0bin0000@istrue_a8_b4_x5, 0bin0000@istrue_a8_b4_x6, 0bin0000@istrue_a8_b4_x7, 0bin0000@istrue_a8_b4_x8, 0bin0000@istrue_a8_b4_x9, 0bin0000@istrue_a8_b4_x10, 0bin0000@istrue_a8_b4_x11, 0bin0000@istrue_a8_b4_x12, 0bin0000@istrue_a8_b4_x13, 0bin0000@istrue_a8_b4_x14, 0bin0000@istrue_a8_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a8)] THEN istrue_a8_b5_x0 = 0bin1 ELSE istrue_a8_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a8)] THEN istrue_a8_b5_x1 = 0bin1 ELSE istrue_a8_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a8)] THEN istrue_a8_b5_x2 = 0bin1 ELSE istrue_a8_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a8)] THEN istrue_a8_b5_x3 = 0bin1 ELSE istrue_a8_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a8)] THEN istrue_a8_b5_x4 = 0bin1 ELSE istrue_a8_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a8)] THEN istrue_a8_b5_x5 = 0bin1 ELSE istrue_a8_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a8)] THEN istrue_a8_b5_x6 = 0bin1 ELSE istrue_a8_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a8)] THEN istrue_a8_b5_x7 = 0bin1 ELSE istrue_a8_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a8)] THEN istrue_a8_b5_x8 = 0bin1 ELSE istrue_a8_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a8)] THEN istrue_a8_b5_x9 = 0bin1 ELSE istrue_a8_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a8)] THEN istrue_a8_b5_x10 = 0bin1 ELSE istrue_a8_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a8)] THEN istrue_a8_b5_x11 = 0bin1 ELSE istrue_a8_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a8)] THEN istrue_a8_b5_x12 = 0bin1 ELSE istrue_a8_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a8)] THEN istrue_a8_b5_x13 = 0bin1 ELSE istrue_a8_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a8)] THEN istrue_a8_b5_x14 = 0bin1 ELSE istrue_a8_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a8)] THEN istrue_a8_b5_x15 = 0bin1 ELSE istrue_a8_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b5 = BVPLUS(5, 0bin0000@istrue_a8_b5_x0, 0bin0000@istrue_a8_b5_x1, 0bin0000@istrue_a8_b5_x2, 0bin0000@istrue_a8_b5_x3, 0bin0000@istrue_a8_b5_x4, 0bin0000@istrue_a8_b5_x5, 0bin0000@istrue_a8_b5_x6, 0bin0000@istrue_a8_b5_x7, 0bin0000@istrue_a8_b5_x8, 0bin0000@istrue_a8_b5_x9, 0bin0000@istrue_a8_b5_x10, 0bin0000@istrue_a8_b5_x11, 0bin0000@istrue_a8_b5_x12, 0bin0000@istrue_a8_b5_x13, 0bin0000@istrue_a8_b5_x14, 0bin0000@istrue_a8_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a8)] THEN istrue_a8_b6_x0 = 0bin1 ELSE istrue_a8_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a8)] THEN istrue_a8_b6_x1 = 0bin1 ELSE istrue_a8_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a8)] THEN istrue_a8_b6_x2 = 0bin1 ELSE istrue_a8_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a8)] THEN istrue_a8_b6_x3 = 0bin1 ELSE istrue_a8_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a8)] THEN istrue_a8_b6_x4 = 0bin1 ELSE istrue_a8_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a8)] THEN istrue_a8_b6_x5 = 0bin1 ELSE istrue_a8_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a8)] THEN istrue_a8_b6_x6 = 0bin1 ELSE istrue_a8_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a8)] THEN istrue_a8_b6_x7 = 0bin1 ELSE istrue_a8_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a8)] THEN istrue_a8_b6_x8 = 0bin1 ELSE istrue_a8_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a8)] THEN istrue_a8_b6_x9 = 0bin1 ELSE istrue_a8_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a8)] THEN istrue_a8_b6_x10 = 0bin1 ELSE istrue_a8_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a8)] THEN istrue_a8_b6_x11 = 0bin1 ELSE istrue_a8_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a8)] THEN istrue_a8_b6_x12 = 0bin1 ELSE istrue_a8_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a8)] THEN istrue_a8_b6_x13 = 0bin1 ELSE istrue_a8_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a8)] THEN istrue_a8_b6_x14 = 0bin1 ELSE istrue_a8_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a8)] THEN istrue_a8_b6_x15 = 0bin1 ELSE istrue_a8_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b6 = BVPLUS(5, 0bin0000@istrue_a8_b6_x0, 0bin0000@istrue_a8_b6_x1, 0bin0000@istrue_a8_b6_x2, 0bin0000@istrue_a8_b6_x3, 0bin0000@istrue_a8_b6_x4, 0bin0000@istrue_a8_b6_x5, 0bin0000@istrue_a8_b6_x6, 0bin0000@istrue_a8_b6_x7, 0bin0000@istrue_a8_b6_x8, 0bin0000@istrue_a8_b6_x9, 0bin0000@istrue_a8_b6_x10, 0bin0000@istrue_a8_b6_x11, 0bin0000@istrue_a8_b6_x12, 0bin0000@istrue_a8_b6_x13, 0bin0000@istrue_a8_b6_x14, 0bin0000@istrue_a8_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a8)] THEN istrue_a8_b7_x0 = 0bin1 ELSE istrue_a8_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a8)] THEN istrue_a8_b7_x1 = 0bin1 ELSE istrue_a8_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a8)] THEN istrue_a8_b7_x2 = 0bin1 ELSE istrue_a8_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a8)] THEN istrue_a8_b7_x3 = 0bin1 ELSE istrue_a8_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a8)] THEN istrue_a8_b7_x4 = 0bin1 ELSE istrue_a8_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a8)] THEN istrue_a8_b7_x5 = 0bin1 ELSE istrue_a8_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a8)] THEN istrue_a8_b7_x6 = 0bin1 ELSE istrue_a8_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a8)] THEN istrue_a8_b7_x7 = 0bin1 ELSE istrue_a8_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a8)] THEN istrue_a8_b7_x8 = 0bin1 ELSE istrue_a8_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a8)] THEN istrue_a8_b7_x9 = 0bin1 ELSE istrue_a8_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a8)] THEN istrue_a8_b7_x10 = 0bin1 ELSE istrue_a8_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a8)] THEN istrue_a8_b7_x11 = 0bin1 ELSE istrue_a8_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a8)] THEN istrue_a8_b7_x12 = 0bin1 ELSE istrue_a8_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a8)] THEN istrue_a8_b7_x13 = 0bin1 ELSE istrue_a8_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a8)] THEN istrue_a8_b7_x14 = 0bin1 ELSE istrue_a8_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a8)] THEN istrue_a8_b7_x15 = 0bin1 ELSE istrue_a8_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b7 = BVPLUS(5, 0bin0000@istrue_a8_b7_x0, 0bin0000@istrue_a8_b7_x1, 0bin0000@istrue_a8_b7_x2, 0bin0000@istrue_a8_b7_x3, 0bin0000@istrue_a8_b7_x4, 0bin0000@istrue_a8_b7_x5, 0bin0000@istrue_a8_b7_x6, 0bin0000@istrue_a8_b7_x7, 0bin0000@istrue_a8_b7_x8, 0bin0000@istrue_a8_b7_x9, 0bin0000@istrue_a8_b7_x10, 0bin0000@istrue_a8_b7_x11, 0bin0000@istrue_a8_b7_x12, 0bin0000@istrue_a8_b7_x13, 0bin0000@istrue_a8_b7_x14, 0bin0000@istrue_a8_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a8)] THEN istrue_a8_b8_x0 = 0bin1 ELSE istrue_a8_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a8)] THEN istrue_a8_b8_x1 = 0bin1 ELSE istrue_a8_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a8)] THEN istrue_a8_b8_x2 = 0bin1 ELSE istrue_a8_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a8)] THEN istrue_a8_b8_x3 = 0bin1 ELSE istrue_a8_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a8)] THEN istrue_a8_b8_x4 = 0bin1 ELSE istrue_a8_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a8)] THEN istrue_a8_b8_x5 = 0bin1 ELSE istrue_a8_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a8)] THEN istrue_a8_b8_x6 = 0bin1 ELSE istrue_a8_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a8)] THEN istrue_a8_b8_x7 = 0bin1 ELSE istrue_a8_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a8)] THEN istrue_a8_b8_x8 = 0bin1 ELSE istrue_a8_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a8)] THEN istrue_a8_b8_x9 = 0bin1 ELSE istrue_a8_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a8)] THEN istrue_a8_b8_x10 = 0bin1 ELSE istrue_a8_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a8)] THEN istrue_a8_b8_x11 = 0bin1 ELSE istrue_a8_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a8)] THEN istrue_a8_b8_x12 = 0bin1 ELSE istrue_a8_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a8)] THEN istrue_a8_b8_x13 = 0bin1 ELSE istrue_a8_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a8)] THEN istrue_a8_b8_x14 = 0bin1 ELSE istrue_a8_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a8)] THEN istrue_a8_b8_x15 = 0bin1 ELSE istrue_a8_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b8 = BVPLUS(5, 0bin0000@istrue_a8_b8_x0, 0bin0000@istrue_a8_b8_x1, 0bin0000@istrue_a8_b8_x2, 0bin0000@istrue_a8_b8_x3, 0bin0000@istrue_a8_b8_x4, 0bin0000@istrue_a8_b8_x5, 0bin0000@istrue_a8_b8_x6, 0bin0000@istrue_a8_b8_x7, 0bin0000@istrue_a8_b8_x8, 0bin0000@istrue_a8_b8_x9, 0bin0000@istrue_a8_b8_x10, 0bin0000@istrue_a8_b8_x11, 0bin0000@istrue_a8_b8_x12, 0bin0000@istrue_a8_b8_x13, 0bin0000@istrue_a8_b8_x14, 0bin0000@istrue_a8_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a8)] THEN istrue_a8_b9_x0 = 0bin1 ELSE istrue_a8_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a8)] THEN istrue_a8_b9_x1 = 0bin1 ELSE istrue_a8_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a8)] THEN istrue_a8_b9_x2 = 0bin1 ELSE istrue_a8_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a8)] THEN istrue_a8_b9_x3 = 0bin1 ELSE istrue_a8_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a8)] THEN istrue_a8_b9_x4 = 0bin1 ELSE istrue_a8_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a8)] THEN istrue_a8_b9_x5 = 0bin1 ELSE istrue_a8_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a8)] THEN istrue_a8_b9_x6 = 0bin1 ELSE istrue_a8_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a8)] THEN istrue_a8_b9_x7 = 0bin1 ELSE istrue_a8_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a8)] THEN istrue_a8_b9_x8 = 0bin1 ELSE istrue_a8_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a8)] THEN istrue_a8_b9_x9 = 0bin1 ELSE istrue_a8_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a8)] THEN istrue_a8_b9_x10 = 0bin1 ELSE istrue_a8_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a8)] THEN istrue_a8_b9_x11 = 0bin1 ELSE istrue_a8_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a8)] THEN istrue_a8_b9_x12 = 0bin1 ELSE istrue_a8_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a8)] THEN istrue_a8_b9_x13 = 0bin1 ELSE istrue_a8_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a8)] THEN istrue_a8_b9_x14 = 0bin1 ELSE istrue_a8_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a8)] THEN istrue_a8_b9_x15 = 0bin1 ELSE istrue_a8_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b9 = BVPLUS(5, 0bin0000@istrue_a8_b9_x0, 0bin0000@istrue_a8_b9_x1, 0bin0000@istrue_a8_b9_x2, 0bin0000@istrue_a8_b9_x3, 0bin0000@istrue_a8_b9_x4, 0bin0000@istrue_a8_b9_x5, 0bin0000@istrue_a8_b9_x6, 0bin0000@istrue_a8_b9_x7, 0bin0000@istrue_a8_b9_x8, 0bin0000@istrue_a8_b9_x9, 0bin0000@istrue_a8_b9_x10, 0bin0000@istrue_a8_b9_x11, 0bin0000@istrue_a8_b9_x12, 0bin0000@istrue_a8_b9_x13, 0bin0000@istrue_a8_b9_x14, 0bin0000@istrue_a8_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a8)] THEN istrue_a8_b10_x0 = 0bin1 ELSE istrue_a8_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a8)] THEN istrue_a8_b10_x1 = 0bin1 ELSE istrue_a8_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a8)] THEN istrue_a8_b10_x2 = 0bin1 ELSE istrue_a8_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a8)] THEN istrue_a8_b10_x3 = 0bin1 ELSE istrue_a8_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a8)] THEN istrue_a8_b10_x4 = 0bin1 ELSE istrue_a8_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a8)] THEN istrue_a8_b10_x5 = 0bin1 ELSE istrue_a8_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a8)] THEN istrue_a8_b10_x6 = 0bin1 ELSE istrue_a8_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a8)] THEN istrue_a8_b10_x7 = 0bin1 ELSE istrue_a8_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a8)] THEN istrue_a8_b10_x8 = 0bin1 ELSE istrue_a8_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a8)] THEN istrue_a8_b10_x9 = 0bin1 ELSE istrue_a8_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a8)] THEN istrue_a8_b10_x10 = 0bin1 ELSE istrue_a8_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a8)] THEN istrue_a8_b10_x11 = 0bin1 ELSE istrue_a8_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a8)] THEN istrue_a8_b10_x12 = 0bin1 ELSE istrue_a8_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a8)] THEN istrue_a8_b10_x13 = 0bin1 ELSE istrue_a8_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a8)] THEN istrue_a8_b10_x14 = 0bin1 ELSE istrue_a8_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a8)] THEN istrue_a8_b10_x15 = 0bin1 ELSE istrue_a8_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b10 = BVPLUS(5, 0bin0000@istrue_a8_b10_x0, 0bin0000@istrue_a8_b10_x1, 0bin0000@istrue_a8_b10_x2, 0bin0000@istrue_a8_b10_x3, 0bin0000@istrue_a8_b10_x4, 0bin0000@istrue_a8_b10_x5, 0bin0000@istrue_a8_b10_x6, 0bin0000@istrue_a8_b10_x7, 0bin0000@istrue_a8_b10_x8, 0bin0000@istrue_a8_b10_x9, 0bin0000@istrue_a8_b10_x10, 0bin0000@istrue_a8_b10_x11, 0bin0000@istrue_a8_b10_x12, 0bin0000@istrue_a8_b10_x13, 0bin0000@istrue_a8_b10_x14, 0bin0000@istrue_a8_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a8)] THEN istrue_a8_b11_x0 = 0bin1 ELSE istrue_a8_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a8)] THEN istrue_a8_b11_x1 = 0bin1 ELSE istrue_a8_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a8)] THEN istrue_a8_b11_x2 = 0bin1 ELSE istrue_a8_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a8)] THEN istrue_a8_b11_x3 = 0bin1 ELSE istrue_a8_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a8)] THEN istrue_a8_b11_x4 = 0bin1 ELSE istrue_a8_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a8)] THEN istrue_a8_b11_x5 = 0bin1 ELSE istrue_a8_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a8)] THEN istrue_a8_b11_x6 = 0bin1 ELSE istrue_a8_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a8)] THEN istrue_a8_b11_x7 = 0bin1 ELSE istrue_a8_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a8)] THEN istrue_a8_b11_x8 = 0bin1 ELSE istrue_a8_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a8)] THEN istrue_a8_b11_x9 = 0bin1 ELSE istrue_a8_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a8)] THEN istrue_a8_b11_x10 = 0bin1 ELSE istrue_a8_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a8)] THEN istrue_a8_b11_x11 = 0bin1 ELSE istrue_a8_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a8)] THEN istrue_a8_b11_x12 = 0bin1 ELSE istrue_a8_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a8)] THEN istrue_a8_b11_x13 = 0bin1 ELSE istrue_a8_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a8)] THEN istrue_a8_b11_x14 = 0bin1 ELSE istrue_a8_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a8)] THEN istrue_a8_b11_x15 = 0bin1 ELSE istrue_a8_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b11 = BVPLUS(5, 0bin0000@istrue_a8_b11_x0, 0bin0000@istrue_a8_b11_x1, 0bin0000@istrue_a8_b11_x2, 0bin0000@istrue_a8_b11_x3, 0bin0000@istrue_a8_b11_x4, 0bin0000@istrue_a8_b11_x5, 0bin0000@istrue_a8_b11_x6, 0bin0000@istrue_a8_b11_x7, 0bin0000@istrue_a8_b11_x8, 0bin0000@istrue_a8_b11_x9, 0bin0000@istrue_a8_b11_x10, 0bin0000@istrue_a8_b11_x11, 0bin0000@istrue_a8_b11_x12, 0bin0000@istrue_a8_b11_x13, 0bin0000@istrue_a8_b11_x14, 0bin0000@istrue_a8_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a8)] THEN istrue_a8_b12_x0 = 0bin1 ELSE istrue_a8_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a8)] THEN istrue_a8_b12_x1 = 0bin1 ELSE istrue_a8_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a8)] THEN istrue_a8_b12_x2 = 0bin1 ELSE istrue_a8_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a8)] THEN istrue_a8_b12_x3 = 0bin1 ELSE istrue_a8_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a8)] THEN istrue_a8_b12_x4 = 0bin1 ELSE istrue_a8_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a8)] THEN istrue_a8_b12_x5 = 0bin1 ELSE istrue_a8_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a8)] THEN istrue_a8_b12_x6 = 0bin1 ELSE istrue_a8_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a8)] THEN istrue_a8_b12_x7 = 0bin1 ELSE istrue_a8_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a8)] THEN istrue_a8_b12_x8 = 0bin1 ELSE istrue_a8_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a8)] THEN istrue_a8_b12_x9 = 0bin1 ELSE istrue_a8_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a8)] THEN istrue_a8_b12_x10 = 0bin1 ELSE istrue_a8_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a8)] THEN istrue_a8_b12_x11 = 0bin1 ELSE istrue_a8_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a8)] THEN istrue_a8_b12_x12 = 0bin1 ELSE istrue_a8_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a8)] THEN istrue_a8_b12_x13 = 0bin1 ELSE istrue_a8_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a8)] THEN istrue_a8_b12_x14 = 0bin1 ELSE istrue_a8_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a8)] THEN istrue_a8_b12_x15 = 0bin1 ELSE istrue_a8_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b12 = BVPLUS(5, 0bin0000@istrue_a8_b12_x0, 0bin0000@istrue_a8_b12_x1, 0bin0000@istrue_a8_b12_x2, 0bin0000@istrue_a8_b12_x3, 0bin0000@istrue_a8_b12_x4, 0bin0000@istrue_a8_b12_x5, 0bin0000@istrue_a8_b12_x6, 0bin0000@istrue_a8_b12_x7, 0bin0000@istrue_a8_b12_x8, 0bin0000@istrue_a8_b12_x9, 0bin0000@istrue_a8_b12_x10, 0bin0000@istrue_a8_b12_x11, 0bin0000@istrue_a8_b12_x12, 0bin0000@istrue_a8_b12_x13, 0bin0000@istrue_a8_b12_x14, 0bin0000@istrue_a8_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a8)] THEN istrue_a8_b13_x0 = 0bin1 ELSE istrue_a8_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a8)] THEN istrue_a8_b13_x1 = 0bin1 ELSE istrue_a8_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a8)] THEN istrue_a8_b13_x2 = 0bin1 ELSE istrue_a8_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a8)] THEN istrue_a8_b13_x3 = 0bin1 ELSE istrue_a8_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a8)] THEN istrue_a8_b13_x4 = 0bin1 ELSE istrue_a8_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a8)] THEN istrue_a8_b13_x5 = 0bin1 ELSE istrue_a8_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a8)] THEN istrue_a8_b13_x6 = 0bin1 ELSE istrue_a8_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a8)] THEN istrue_a8_b13_x7 = 0bin1 ELSE istrue_a8_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a8)] THEN istrue_a8_b13_x8 = 0bin1 ELSE istrue_a8_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a8)] THEN istrue_a8_b13_x9 = 0bin1 ELSE istrue_a8_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a8)] THEN istrue_a8_b13_x10 = 0bin1 ELSE istrue_a8_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a8)] THEN istrue_a8_b13_x11 = 0bin1 ELSE istrue_a8_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a8)] THEN istrue_a8_b13_x12 = 0bin1 ELSE istrue_a8_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a8)] THEN istrue_a8_b13_x13 = 0bin1 ELSE istrue_a8_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a8)] THEN istrue_a8_b13_x14 = 0bin1 ELSE istrue_a8_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a8)] THEN istrue_a8_b13_x15 = 0bin1 ELSE istrue_a8_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b13 = BVPLUS(5, 0bin0000@istrue_a8_b13_x0, 0bin0000@istrue_a8_b13_x1, 0bin0000@istrue_a8_b13_x2, 0bin0000@istrue_a8_b13_x3, 0bin0000@istrue_a8_b13_x4, 0bin0000@istrue_a8_b13_x5, 0bin0000@istrue_a8_b13_x6, 0bin0000@istrue_a8_b13_x7, 0bin0000@istrue_a8_b13_x8, 0bin0000@istrue_a8_b13_x9, 0bin0000@istrue_a8_b13_x10, 0bin0000@istrue_a8_b13_x11, 0bin0000@istrue_a8_b13_x12, 0bin0000@istrue_a8_b13_x13, 0bin0000@istrue_a8_b13_x14, 0bin0000@istrue_a8_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a8)] THEN istrue_a8_b14_x0 = 0bin1 ELSE istrue_a8_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a8)] THEN istrue_a8_b14_x1 = 0bin1 ELSE istrue_a8_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a8)] THEN istrue_a8_b14_x2 = 0bin1 ELSE istrue_a8_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a8)] THEN istrue_a8_b14_x3 = 0bin1 ELSE istrue_a8_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a8)] THEN istrue_a8_b14_x4 = 0bin1 ELSE istrue_a8_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a8)] THEN istrue_a8_b14_x5 = 0bin1 ELSE istrue_a8_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a8)] THEN istrue_a8_b14_x6 = 0bin1 ELSE istrue_a8_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a8)] THEN istrue_a8_b14_x7 = 0bin1 ELSE istrue_a8_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a8)] THEN istrue_a8_b14_x8 = 0bin1 ELSE istrue_a8_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a8)] THEN istrue_a8_b14_x9 = 0bin1 ELSE istrue_a8_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a8)] THEN istrue_a8_b14_x10 = 0bin1 ELSE istrue_a8_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a8)] THEN istrue_a8_b14_x11 = 0bin1 ELSE istrue_a8_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a8)] THEN istrue_a8_b14_x12 = 0bin1 ELSE istrue_a8_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a8)] THEN istrue_a8_b14_x13 = 0bin1 ELSE istrue_a8_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a8)] THEN istrue_a8_b14_x14 = 0bin1 ELSE istrue_a8_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a8)] THEN istrue_a8_b14_x15 = 0bin1 ELSE istrue_a8_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b14 = BVPLUS(5, 0bin0000@istrue_a8_b14_x0, 0bin0000@istrue_a8_b14_x1, 0bin0000@istrue_a8_b14_x2, 0bin0000@istrue_a8_b14_x3, 0bin0000@istrue_a8_b14_x4, 0bin0000@istrue_a8_b14_x5, 0bin0000@istrue_a8_b14_x6, 0bin0000@istrue_a8_b14_x7, 0bin0000@istrue_a8_b14_x8, 0bin0000@istrue_a8_b14_x9, 0bin0000@istrue_a8_b14_x10, 0bin0000@istrue_a8_b14_x11, 0bin0000@istrue_a8_b14_x12, 0bin0000@istrue_a8_b14_x13, 0bin0000@istrue_a8_b14_x14, 0bin0000@istrue_a8_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a8)] THEN istrue_a8_b15_x0 = 0bin1 ELSE istrue_a8_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a8)] THEN istrue_a8_b15_x1 = 0bin1 ELSE istrue_a8_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a8)] THEN istrue_a8_b15_x2 = 0bin1 ELSE istrue_a8_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a8)] THEN istrue_a8_b15_x3 = 0bin1 ELSE istrue_a8_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a8)] THEN istrue_a8_b15_x4 = 0bin1 ELSE istrue_a8_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a8)] THEN istrue_a8_b15_x5 = 0bin1 ELSE istrue_a8_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a8)] THEN istrue_a8_b15_x6 = 0bin1 ELSE istrue_a8_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a8)] THEN istrue_a8_b15_x7 = 0bin1 ELSE istrue_a8_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a8)] THEN istrue_a8_b15_x8 = 0bin1 ELSE istrue_a8_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a8)] THEN istrue_a8_b15_x9 = 0bin1 ELSE istrue_a8_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a8)] THEN istrue_a8_b15_x10 = 0bin1 ELSE istrue_a8_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a8)] THEN istrue_a8_b15_x11 = 0bin1 ELSE istrue_a8_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a8)] THEN istrue_a8_b15_x12 = 0bin1 ELSE istrue_a8_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a8)] THEN istrue_a8_b15_x13 = 0bin1 ELSE istrue_a8_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a8)] THEN istrue_a8_b15_x14 = 0bin1 ELSE istrue_a8_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a8)] THEN istrue_a8_b15_x15 = 0bin1 ELSE istrue_a8_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a8_b15 = BVPLUS(5, 0bin0000@istrue_a8_b15_x0, 0bin0000@istrue_a8_b15_x1, 0bin0000@istrue_a8_b15_x2, 0bin0000@istrue_a8_b15_x3, 0bin0000@istrue_a8_b15_x4, 0bin0000@istrue_a8_b15_x5, 0bin0000@istrue_a8_b15_x6, 0bin0000@istrue_a8_b15_x7, 0bin0000@istrue_a8_b15_x8, 0bin0000@istrue_a8_b15_x9, 0bin0000@istrue_a8_b15_x10, 0bin0000@istrue_a8_b15_x11, 0bin0000@istrue_a8_b15_x12, 0bin0000@istrue_a8_b15_x13, 0bin0000@istrue_a8_b15_x14, 0bin0000@istrue_a8_b15_x15));
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a9)] THEN istrue_a9_b0_x0 = 0bin1 ELSE istrue_a9_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a9)] THEN istrue_a9_b0_x1 = 0bin1 ELSE istrue_a9_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a9)] THEN istrue_a9_b0_x2 = 0bin1 ELSE istrue_a9_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a9)] THEN istrue_a9_b0_x3 = 0bin1 ELSE istrue_a9_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a9)] THEN istrue_a9_b0_x4 = 0bin1 ELSE istrue_a9_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a9)] THEN istrue_a9_b0_x5 = 0bin1 ELSE istrue_a9_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a9)] THEN istrue_a9_b0_x6 = 0bin1 ELSE istrue_a9_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a9)] THEN istrue_a9_b0_x7 = 0bin1 ELSE istrue_a9_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a9)] THEN istrue_a9_b0_x8 = 0bin1 ELSE istrue_a9_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a9)] THEN istrue_a9_b0_x9 = 0bin1 ELSE istrue_a9_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a9)] THEN istrue_a9_b0_x10 = 0bin1 ELSE istrue_a9_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a9)] THEN istrue_a9_b0_x11 = 0bin1 ELSE istrue_a9_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a9)] THEN istrue_a9_b0_x12 = 0bin1 ELSE istrue_a9_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a9)] THEN istrue_a9_b0_x13 = 0bin1 ELSE istrue_a9_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a9)] THEN istrue_a9_b0_x14 = 0bin1 ELSE istrue_a9_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a9)] THEN istrue_a9_b0_x15 = 0bin1 ELSE istrue_a9_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b0 = BVPLUS(5, 0bin0000@istrue_a9_b0_x0, 0bin0000@istrue_a9_b0_x1, 0bin0000@istrue_a9_b0_x2, 0bin0000@istrue_a9_b0_x3, 0bin0000@istrue_a9_b0_x4, 0bin0000@istrue_a9_b0_x5, 0bin0000@istrue_a9_b0_x6, 0bin0000@istrue_a9_b0_x7, 0bin0000@istrue_a9_b0_x8, 0bin0000@istrue_a9_b0_x9, 0bin0000@istrue_a9_b0_x10, 0bin0000@istrue_a9_b0_x11, 0bin0000@istrue_a9_b0_x12, 0bin0000@istrue_a9_b0_x13, 0bin0000@istrue_a9_b0_x14, 0bin0000@istrue_a9_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a9)] THEN istrue_a9_b1_x0 = 0bin1 ELSE istrue_a9_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a9)] THEN istrue_a9_b1_x1 = 0bin1 ELSE istrue_a9_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a9)] THEN istrue_a9_b1_x2 = 0bin1 ELSE istrue_a9_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a9)] THEN istrue_a9_b1_x3 = 0bin1 ELSE istrue_a9_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a9)] THEN istrue_a9_b1_x4 = 0bin1 ELSE istrue_a9_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a9)] THEN istrue_a9_b1_x5 = 0bin1 ELSE istrue_a9_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a9)] THEN istrue_a9_b1_x6 = 0bin1 ELSE istrue_a9_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a9)] THEN istrue_a9_b1_x7 = 0bin1 ELSE istrue_a9_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a9)] THEN istrue_a9_b1_x8 = 0bin1 ELSE istrue_a9_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a9)] THEN istrue_a9_b1_x9 = 0bin1 ELSE istrue_a9_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a9)] THEN istrue_a9_b1_x10 = 0bin1 ELSE istrue_a9_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a9)] THEN istrue_a9_b1_x11 = 0bin1 ELSE istrue_a9_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a9)] THEN istrue_a9_b1_x12 = 0bin1 ELSE istrue_a9_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a9)] THEN istrue_a9_b1_x13 = 0bin1 ELSE istrue_a9_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a9)] THEN istrue_a9_b1_x14 = 0bin1 ELSE istrue_a9_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a9)] THEN istrue_a9_b1_x15 = 0bin1 ELSE istrue_a9_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b1 = BVPLUS(5, 0bin0000@istrue_a9_b1_x0, 0bin0000@istrue_a9_b1_x1, 0bin0000@istrue_a9_b1_x2, 0bin0000@istrue_a9_b1_x3, 0bin0000@istrue_a9_b1_x4, 0bin0000@istrue_a9_b1_x5, 0bin0000@istrue_a9_b1_x6, 0bin0000@istrue_a9_b1_x7, 0bin0000@istrue_a9_b1_x8, 0bin0000@istrue_a9_b1_x9, 0bin0000@istrue_a9_b1_x10, 0bin0000@istrue_a9_b1_x11, 0bin0000@istrue_a9_b1_x12, 0bin0000@istrue_a9_b1_x13, 0bin0000@istrue_a9_b1_x14, 0bin0000@istrue_a9_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a9)] THEN istrue_a9_b2_x0 = 0bin1 ELSE istrue_a9_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a9)] THEN istrue_a9_b2_x1 = 0bin1 ELSE istrue_a9_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a9)] THEN istrue_a9_b2_x2 = 0bin1 ELSE istrue_a9_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a9)] THEN istrue_a9_b2_x3 = 0bin1 ELSE istrue_a9_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a9)] THEN istrue_a9_b2_x4 = 0bin1 ELSE istrue_a9_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a9)] THEN istrue_a9_b2_x5 = 0bin1 ELSE istrue_a9_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a9)] THEN istrue_a9_b2_x6 = 0bin1 ELSE istrue_a9_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a9)] THEN istrue_a9_b2_x7 = 0bin1 ELSE istrue_a9_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a9)] THEN istrue_a9_b2_x8 = 0bin1 ELSE istrue_a9_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a9)] THEN istrue_a9_b2_x9 = 0bin1 ELSE istrue_a9_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a9)] THEN istrue_a9_b2_x10 = 0bin1 ELSE istrue_a9_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a9)] THEN istrue_a9_b2_x11 = 0bin1 ELSE istrue_a9_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a9)] THEN istrue_a9_b2_x12 = 0bin1 ELSE istrue_a9_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a9)] THEN istrue_a9_b2_x13 = 0bin1 ELSE istrue_a9_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a9)] THEN istrue_a9_b2_x14 = 0bin1 ELSE istrue_a9_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a9)] THEN istrue_a9_b2_x15 = 0bin1 ELSE istrue_a9_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b2 = BVPLUS(5, 0bin0000@istrue_a9_b2_x0, 0bin0000@istrue_a9_b2_x1, 0bin0000@istrue_a9_b2_x2, 0bin0000@istrue_a9_b2_x3, 0bin0000@istrue_a9_b2_x4, 0bin0000@istrue_a9_b2_x5, 0bin0000@istrue_a9_b2_x6, 0bin0000@istrue_a9_b2_x7, 0bin0000@istrue_a9_b2_x8, 0bin0000@istrue_a9_b2_x9, 0bin0000@istrue_a9_b2_x10, 0bin0000@istrue_a9_b2_x11, 0bin0000@istrue_a9_b2_x12, 0bin0000@istrue_a9_b2_x13, 0bin0000@istrue_a9_b2_x14, 0bin0000@istrue_a9_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a9)] THEN istrue_a9_b3_x0 = 0bin1 ELSE istrue_a9_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a9)] THEN istrue_a9_b3_x1 = 0bin1 ELSE istrue_a9_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a9)] THEN istrue_a9_b3_x2 = 0bin1 ELSE istrue_a9_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a9)] THEN istrue_a9_b3_x3 = 0bin1 ELSE istrue_a9_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a9)] THEN istrue_a9_b3_x4 = 0bin1 ELSE istrue_a9_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a9)] THEN istrue_a9_b3_x5 = 0bin1 ELSE istrue_a9_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a9)] THEN istrue_a9_b3_x6 = 0bin1 ELSE istrue_a9_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a9)] THEN istrue_a9_b3_x7 = 0bin1 ELSE istrue_a9_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a9)] THEN istrue_a9_b3_x8 = 0bin1 ELSE istrue_a9_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a9)] THEN istrue_a9_b3_x9 = 0bin1 ELSE istrue_a9_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a9)] THEN istrue_a9_b3_x10 = 0bin1 ELSE istrue_a9_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a9)] THEN istrue_a9_b3_x11 = 0bin1 ELSE istrue_a9_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a9)] THEN istrue_a9_b3_x12 = 0bin1 ELSE istrue_a9_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a9)] THEN istrue_a9_b3_x13 = 0bin1 ELSE istrue_a9_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a9)] THEN istrue_a9_b3_x14 = 0bin1 ELSE istrue_a9_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a9)] THEN istrue_a9_b3_x15 = 0bin1 ELSE istrue_a9_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b3 = BVPLUS(5, 0bin0000@istrue_a9_b3_x0, 0bin0000@istrue_a9_b3_x1, 0bin0000@istrue_a9_b3_x2, 0bin0000@istrue_a9_b3_x3, 0bin0000@istrue_a9_b3_x4, 0bin0000@istrue_a9_b3_x5, 0bin0000@istrue_a9_b3_x6, 0bin0000@istrue_a9_b3_x7, 0bin0000@istrue_a9_b3_x8, 0bin0000@istrue_a9_b3_x9, 0bin0000@istrue_a9_b3_x10, 0bin0000@istrue_a9_b3_x11, 0bin0000@istrue_a9_b3_x12, 0bin0000@istrue_a9_b3_x13, 0bin0000@istrue_a9_b3_x14, 0bin0000@istrue_a9_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a9)] THEN istrue_a9_b4_x0 = 0bin1 ELSE istrue_a9_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a9)] THEN istrue_a9_b4_x1 = 0bin1 ELSE istrue_a9_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a9)] THEN istrue_a9_b4_x2 = 0bin1 ELSE istrue_a9_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a9)] THEN istrue_a9_b4_x3 = 0bin1 ELSE istrue_a9_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a9)] THEN istrue_a9_b4_x4 = 0bin1 ELSE istrue_a9_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a9)] THEN istrue_a9_b4_x5 = 0bin1 ELSE istrue_a9_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a9)] THEN istrue_a9_b4_x6 = 0bin1 ELSE istrue_a9_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a9)] THEN istrue_a9_b4_x7 = 0bin1 ELSE istrue_a9_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a9)] THEN istrue_a9_b4_x8 = 0bin1 ELSE istrue_a9_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a9)] THEN istrue_a9_b4_x9 = 0bin1 ELSE istrue_a9_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a9)] THEN istrue_a9_b4_x10 = 0bin1 ELSE istrue_a9_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a9)] THEN istrue_a9_b4_x11 = 0bin1 ELSE istrue_a9_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a9)] THEN istrue_a9_b4_x12 = 0bin1 ELSE istrue_a9_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a9)] THEN istrue_a9_b4_x13 = 0bin1 ELSE istrue_a9_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a9)] THEN istrue_a9_b4_x14 = 0bin1 ELSE istrue_a9_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a9)] THEN istrue_a9_b4_x15 = 0bin1 ELSE istrue_a9_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b4 = BVPLUS(5, 0bin0000@istrue_a9_b4_x0, 0bin0000@istrue_a9_b4_x1, 0bin0000@istrue_a9_b4_x2, 0bin0000@istrue_a9_b4_x3, 0bin0000@istrue_a9_b4_x4, 0bin0000@istrue_a9_b4_x5, 0bin0000@istrue_a9_b4_x6, 0bin0000@istrue_a9_b4_x7, 0bin0000@istrue_a9_b4_x8, 0bin0000@istrue_a9_b4_x9, 0bin0000@istrue_a9_b4_x10, 0bin0000@istrue_a9_b4_x11, 0bin0000@istrue_a9_b4_x12, 0bin0000@istrue_a9_b4_x13, 0bin0000@istrue_a9_b4_x14, 0bin0000@istrue_a9_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a9)] THEN istrue_a9_b5_x0 = 0bin1 ELSE istrue_a9_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a9)] THEN istrue_a9_b5_x1 = 0bin1 ELSE istrue_a9_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a9)] THEN istrue_a9_b5_x2 = 0bin1 ELSE istrue_a9_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a9)] THEN istrue_a9_b5_x3 = 0bin1 ELSE istrue_a9_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a9)] THEN istrue_a9_b5_x4 = 0bin1 ELSE istrue_a9_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a9)] THEN istrue_a9_b5_x5 = 0bin1 ELSE istrue_a9_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a9)] THEN istrue_a9_b5_x6 = 0bin1 ELSE istrue_a9_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a9)] THEN istrue_a9_b5_x7 = 0bin1 ELSE istrue_a9_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a9)] THEN istrue_a9_b5_x8 = 0bin1 ELSE istrue_a9_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a9)] THEN istrue_a9_b5_x9 = 0bin1 ELSE istrue_a9_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a9)] THEN istrue_a9_b5_x10 = 0bin1 ELSE istrue_a9_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a9)] THEN istrue_a9_b5_x11 = 0bin1 ELSE istrue_a9_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a9)] THEN istrue_a9_b5_x12 = 0bin1 ELSE istrue_a9_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a9)] THEN istrue_a9_b5_x13 = 0bin1 ELSE istrue_a9_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a9)] THEN istrue_a9_b5_x14 = 0bin1 ELSE istrue_a9_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a9)] THEN istrue_a9_b5_x15 = 0bin1 ELSE istrue_a9_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b5 = BVPLUS(5, 0bin0000@istrue_a9_b5_x0, 0bin0000@istrue_a9_b5_x1, 0bin0000@istrue_a9_b5_x2, 0bin0000@istrue_a9_b5_x3, 0bin0000@istrue_a9_b5_x4, 0bin0000@istrue_a9_b5_x5, 0bin0000@istrue_a9_b5_x6, 0bin0000@istrue_a9_b5_x7, 0bin0000@istrue_a9_b5_x8, 0bin0000@istrue_a9_b5_x9, 0bin0000@istrue_a9_b5_x10, 0bin0000@istrue_a9_b5_x11, 0bin0000@istrue_a9_b5_x12, 0bin0000@istrue_a9_b5_x13, 0bin0000@istrue_a9_b5_x14, 0bin0000@istrue_a9_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a9)] THEN istrue_a9_b6_x0 = 0bin1 ELSE istrue_a9_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a9)] THEN istrue_a9_b6_x1 = 0bin1 ELSE istrue_a9_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a9)] THEN istrue_a9_b6_x2 = 0bin1 ELSE istrue_a9_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a9)] THEN istrue_a9_b6_x3 = 0bin1 ELSE istrue_a9_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a9)] THEN istrue_a9_b6_x4 = 0bin1 ELSE istrue_a9_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a9)] THEN istrue_a9_b6_x5 = 0bin1 ELSE istrue_a9_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a9)] THEN istrue_a9_b6_x6 = 0bin1 ELSE istrue_a9_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a9)] THEN istrue_a9_b6_x7 = 0bin1 ELSE istrue_a9_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a9)] THEN istrue_a9_b6_x8 = 0bin1 ELSE istrue_a9_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a9)] THEN istrue_a9_b6_x9 = 0bin1 ELSE istrue_a9_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a9)] THEN istrue_a9_b6_x10 = 0bin1 ELSE istrue_a9_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a9)] THEN istrue_a9_b6_x11 = 0bin1 ELSE istrue_a9_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a9)] THEN istrue_a9_b6_x12 = 0bin1 ELSE istrue_a9_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a9)] THEN istrue_a9_b6_x13 = 0bin1 ELSE istrue_a9_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a9)] THEN istrue_a9_b6_x14 = 0bin1 ELSE istrue_a9_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a9)] THEN istrue_a9_b6_x15 = 0bin1 ELSE istrue_a9_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b6 = BVPLUS(5, 0bin0000@istrue_a9_b6_x0, 0bin0000@istrue_a9_b6_x1, 0bin0000@istrue_a9_b6_x2, 0bin0000@istrue_a9_b6_x3, 0bin0000@istrue_a9_b6_x4, 0bin0000@istrue_a9_b6_x5, 0bin0000@istrue_a9_b6_x6, 0bin0000@istrue_a9_b6_x7, 0bin0000@istrue_a9_b6_x8, 0bin0000@istrue_a9_b6_x9, 0bin0000@istrue_a9_b6_x10, 0bin0000@istrue_a9_b6_x11, 0bin0000@istrue_a9_b6_x12, 0bin0000@istrue_a9_b6_x13, 0bin0000@istrue_a9_b6_x14, 0bin0000@istrue_a9_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a9)] THEN istrue_a9_b7_x0 = 0bin1 ELSE istrue_a9_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a9)] THEN istrue_a9_b7_x1 = 0bin1 ELSE istrue_a9_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a9)] THEN istrue_a9_b7_x2 = 0bin1 ELSE istrue_a9_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a9)] THEN istrue_a9_b7_x3 = 0bin1 ELSE istrue_a9_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a9)] THEN istrue_a9_b7_x4 = 0bin1 ELSE istrue_a9_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a9)] THEN istrue_a9_b7_x5 = 0bin1 ELSE istrue_a9_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a9)] THEN istrue_a9_b7_x6 = 0bin1 ELSE istrue_a9_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a9)] THEN istrue_a9_b7_x7 = 0bin1 ELSE istrue_a9_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a9)] THEN istrue_a9_b7_x8 = 0bin1 ELSE istrue_a9_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a9)] THEN istrue_a9_b7_x9 = 0bin1 ELSE istrue_a9_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a9)] THEN istrue_a9_b7_x10 = 0bin1 ELSE istrue_a9_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a9)] THEN istrue_a9_b7_x11 = 0bin1 ELSE istrue_a9_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a9)] THEN istrue_a9_b7_x12 = 0bin1 ELSE istrue_a9_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a9)] THEN istrue_a9_b7_x13 = 0bin1 ELSE istrue_a9_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a9)] THEN istrue_a9_b7_x14 = 0bin1 ELSE istrue_a9_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a9)] THEN istrue_a9_b7_x15 = 0bin1 ELSE istrue_a9_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b7 = BVPLUS(5, 0bin0000@istrue_a9_b7_x0, 0bin0000@istrue_a9_b7_x1, 0bin0000@istrue_a9_b7_x2, 0bin0000@istrue_a9_b7_x3, 0bin0000@istrue_a9_b7_x4, 0bin0000@istrue_a9_b7_x5, 0bin0000@istrue_a9_b7_x6, 0bin0000@istrue_a9_b7_x7, 0bin0000@istrue_a9_b7_x8, 0bin0000@istrue_a9_b7_x9, 0bin0000@istrue_a9_b7_x10, 0bin0000@istrue_a9_b7_x11, 0bin0000@istrue_a9_b7_x12, 0bin0000@istrue_a9_b7_x13, 0bin0000@istrue_a9_b7_x14, 0bin0000@istrue_a9_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a9)] THEN istrue_a9_b8_x0 = 0bin1 ELSE istrue_a9_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a9)] THEN istrue_a9_b8_x1 = 0bin1 ELSE istrue_a9_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a9)] THEN istrue_a9_b8_x2 = 0bin1 ELSE istrue_a9_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a9)] THEN istrue_a9_b8_x3 = 0bin1 ELSE istrue_a9_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a9)] THEN istrue_a9_b8_x4 = 0bin1 ELSE istrue_a9_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a9)] THEN istrue_a9_b8_x5 = 0bin1 ELSE istrue_a9_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a9)] THEN istrue_a9_b8_x6 = 0bin1 ELSE istrue_a9_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a9)] THEN istrue_a9_b8_x7 = 0bin1 ELSE istrue_a9_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a9)] THEN istrue_a9_b8_x8 = 0bin1 ELSE istrue_a9_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a9)] THEN istrue_a9_b8_x9 = 0bin1 ELSE istrue_a9_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a9)] THEN istrue_a9_b8_x10 = 0bin1 ELSE istrue_a9_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a9)] THEN istrue_a9_b8_x11 = 0bin1 ELSE istrue_a9_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a9)] THEN istrue_a9_b8_x12 = 0bin1 ELSE istrue_a9_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a9)] THEN istrue_a9_b8_x13 = 0bin1 ELSE istrue_a9_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a9)] THEN istrue_a9_b8_x14 = 0bin1 ELSE istrue_a9_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a9)] THEN istrue_a9_b8_x15 = 0bin1 ELSE istrue_a9_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b8 = BVPLUS(5, 0bin0000@istrue_a9_b8_x0, 0bin0000@istrue_a9_b8_x1, 0bin0000@istrue_a9_b8_x2, 0bin0000@istrue_a9_b8_x3, 0bin0000@istrue_a9_b8_x4, 0bin0000@istrue_a9_b8_x5, 0bin0000@istrue_a9_b8_x6, 0bin0000@istrue_a9_b8_x7, 0bin0000@istrue_a9_b8_x8, 0bin0000@istrue_a9_b8_x9, 0bin0000@istrue_a9_b8_x10, 0bin0000@istrue_a9_b8_x11, 0bin0000@istrue_a9_b8_x12, 0bin0000@istrue_a9_b8_x13, 0bin0000@istrue_a9_b8_x14, 0bin0000@istrue_a9_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a9)] THEN istrue_a9_b9_x0 = 0bin1 ELSE istrue_a9_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a9)] THEN istrue_a9_b9_x1 = 0bin1 ELSE istrue_a9_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a9)] THEN istrue_a9_b9_x2 = 0bin1 ELSE istrue_a9_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a9)] THEN istrue_a9_b9_x3 = 0bin1 ELSE istrue_a9_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a9)] THEN istrue_a9_b9_x4 = 0bin1 ELSE istrue_a9_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a9)] THEN istrue_a9_b9_x5 = 0bin1 ELSE istrue_a9_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a9)] THEN istrue_a9_b9_x6 = 0bin1 ELSE istrue_a9_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a9)] THEN istrue_a9_b9_x7 = 0bin1 ELSE istrue_a9_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a9)] THEN istrue_a9_b9_x8 = 0bin1 ELSE istrue_a9_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a9)] THEN istrue_a9_b9_x9 = 0bin1 ELSE istrue_a9_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a9)] THEN istrue_a9_b9_x10 = 0bin1 ELSE istrue_a9_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a9)] THEN istrue_a9_b9_x11 = 0bin1 ELSE istrue_a9_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a9)] THEN istrue_a9_b9_x12 = 0bin1 ELSE istrue_a9_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a9)] THEN istrue_a9_b9_x13 = 0bin1 ELSE istrue_a9_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a9)] THEN istrue_a9_b9_x14 = 0bin1 ELSE istrue_a9_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a9)] THEN istrue_a9_b9_x15 = 0bin1 ELSE istrue_a9_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b9 = BVPLUS(5, 0bin0000@istrue_a9_b9_x0, 0bin0000@istrue_a9_b9_x1, 0bin0000@istrue_a9_b9_x2, 0bin0000@istrue_a9_b9_x3, 0bin0000@istrue_a9_b9_x4, 0bin0000@istrue_a9_b9_x5, 0bin0000@istrue_a9_b9_x6, 0bin0000@istrue_a9_b9_x7, 0bin0000@istrue_a9_b9_x8, 0bin0000@istrue_a9_b9_x9, 0bin0000@istrue_a9_b9_x10, 0bin0000@istrue_a9_b9_x11, 0bin0000@istrue_a9_b9_x12, 0bin0000@istrue_a9_b9_x13, 0bin0000@istrue_a9_b9_x14, 0bin0000@istrue_a9_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a9)] THEN istrue_a9_b10_x0 = 0bin1 ELSE istrue_a9_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a9)] THEN istrue_a9_b10_x1 = 0bin1 ELSE istrue_a9_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a9)] THEN istrue_a9_b10_x2 = 0bin1 ELSE istrue_a9_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a9)] THEN istrue_a9_b10_x3 = 0bin1 ELSE istrue_a9_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a9)] THEN istrue_a9_b10_x4 = 0bin1 ELSE istrue_a9_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a9)] THEN istrue_a9_b10_x5 = 0bin1 ELSE istrue_a9_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a9)] THEN istrue_a9_b10_x6 = 0bin1 ELSE istrue_a9_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a9)] THEN istrue_a9_b10_x7 = 0bin1 ELSE istrue_a9_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a9)] THEN istrue_a9_b10_x8 = 0bin1 ELSE istrue_a9_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a9)] THEN istrue_a9_b10_x9 = 0bin1 ELSE istrue_a9_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a9)] THEN istrue_a9_b10_x10 = 0bin1 ELSE istrue_a9_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a9)] THEN istrue_a9_b10_x11 = 0bin1 ELSE istrue_a9_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a9)] THEN istrue_a9_b10_x12 = 0bin1 ELSE istrue_a9_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a9)] THEN istrue_a9_b10_x13 = 0bin1 ELSE istrue_a9_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a9)] THEN istrue_a9_b10_x14 = 0bin1 ELSE istrue_a9_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a9)] THEN istrue_a9_b10_x15 = 0bin1 ELSE istrue_a9_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b10 = BVPLUS(5, 0bin0000@istrue_a9_b10_x0, 0bin0000@istrue_a9_b10_x1, 0bin0000@istrue_a9_b10_x2, 0bin0000@istrue_a9_b10_x3, 0bin0000@istrue_a9_b10_x4, 0bin0000@istrue_a9_b10_x5, 0bin0000@istrue_a9_b10_x6, 0bin0000@istrue_a9_b10_x7, 0bin0000@istrue_a9_b10_x8, 0bin0000@istrue_a9_b10_x9, 0bin0000@istrue_a9_b10_x10, 0bin0000@istrue_a9_b10_x11, 0bin0000@istrue_a9_b10_x12, 0bin0000@istrue_a9_b10_x13, 0bin0000@istrue_a9_b10_x14, 0bin0000@istrue_a9_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a9)] THEN istrue_a9_b11_x0 = 0bin1 ELSE istrue_a9_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a9)] THEN istrue_a9_b11_x1 = 0bin1 ELSE istrue_a9_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a9)] THEN istrue_a9_b11_x2 = 0bin1 ELSE istrue_a9_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a9)] THEN istrue_a9_b11_x3 = 0bin1 ELSE istrue_a9_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a9)] THEN istrue_a9_b11_x4 = 0bin1 ELSE istrue_a9_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a9)] THEN istrue_a9_b11_x5 = 0bin1 ELSE istrue_a9_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a9)] THEN istrue_a9_b11_x6 = 0bin1 ELSE istrue_a9_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a9)] THEN istrue_a9_b11_x7 = 0bin1 ELSE istrue_a9_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a9)] THEN istrue_a9_b11_x8 = 0bin1 ELSE istrue_a9_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a9)] THEN istrue_a9_b11_x9 = 0bin1 ELSE istrue_a9_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a9)] THEN istrue_a9_b11_x10 = 0bin1 ELSE istrue_a9_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a9)] THEN istrue_a9_b11_x11 = 0bin1 ELSE istrue_a9_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a9)] THEN istrue_a9_b11_x12 = 0bin1 ELSE istrue_a9_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a9)] THEN istrue_a9_b11_x13 = 0bin1 ELSE istrue_a9_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a9)] THEN istrue_a9_b11_x14 = 0bin1 ELSE istrue_a9_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a9)] THEN istrue_a9_b11_x15 = 0bin1 ELSE istrue_a9_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b11 = BVPLUS(5, 0bin0000@istrue_a9_b11_x0, 0bin0000@istrue_a9_b11_x1, 0bin0000@istrue_a9_b11_x2, 0bin0000@istrue_a9_b11_x3, 0bin0000@istrue_a9_b11_x4, 0bin0000@istrue_a9_b11_x5, 0bin0000@istrue_a9_b11_x6, 0bin0000@istrue_a9_b11_x7, 0bin0000@istrue_a9_b11_x8, 0bin0000@istrue_a9_b11_x9, 0bin0000@istrue_a9_b11_x10, 0bin0000@istrue_a9_b11_x11, 0bin0000@istrue_a9_b11_x12, 0bin0000@istrue_a9_b11_x13, 0bin0000@istrue_a9_b11_x14, 0bin0000@istrue_a9_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a9)] THEN istrue_a9_b12_x0 = 0bin1 ELSE istrue_a9_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a9)] THEN istrue_a9_b12_x1 = 0bin1 ELSE istrue_a9_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a9)] THEN istrue_a9_b12_x2 = 0bin1 ELSE istrue_a9_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a9)] THEN istrue_a9_b12_x3 = 0bin1 ELSE istrue_a9_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a9)] THEN istrue_a9_b12_x4 = 0bin1 ELSE istrue_a9_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a9)] THEN istrue_a9_b12_x5 = 0bin1 ELSE istrue_a9_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a9)] THEN istrue_a9_b12_x6 = 0bin1 ELSE istrue_a9_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a9)] THEN istrue_a9_b12_x7 = 0bin1 ELSE istrue_a9_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a9)] THEN istrue_a9_b12_x8 = 0bin1 ELSE istrue_a9_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a9)] THEN istrue_a9_b12_x9 = 0bin1 ELSE istrue_a9_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a9)] THEN istrue_a9_b12_x10 = 0bin1 ELSE istrue_a9_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a9)] THEN istrue_a9_b12_x11 = 0bin1 ELSE istrue_a9_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a9)] THEN istrue_a9_b12_x12 = 0bin1 ELSE istrue_a9_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a9)] THEN istrue_a9_b12_x13 = 0bin1 ELSE istrue_a9_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a9)] THEN istrue_a9_b12_x14 = 0bin1 ELSE istrue_a9_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a9)] THEN istrue_a9_b12_x15 = 0bin1 ELSE istrue_a9_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b12 = BVPLUS(5, 0bin0000@istrue_a9_b12_x0, 0bin0000@istrue_a9_b12_x1, 0bin0000@istrue_a9_b12_x2, 0bin0000@istrue_a9_b12_x3, 0bin0000@istrue_a9_b12_x4, 0bin0000@istrue_a9_b12_x5, 0bin0000@istrue_a9_b12_x6, 0bin0000@istrue_a9_b12_x7, 0bin0000@istrue_a9_b12_x8, 0bin0000@istrue_a9_b12_x9, 0bin0000@istrue_a9_b12_x10, 0bin0000@istrue_a9_b12_x11, 0bin0000@istrue_a9_b12_x12, 0bin0000@istrue_a9_b12_x13, 0bin0000@istrue_a9_b12_x14, 0bin0000@istrue_a9_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a9)] THEN istrue_a9_b13_x0 = 0bin1 ELSE istrue_a9_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a9)] THEN istrue_a9_b13_x1 = 0bin1 ELSE istrue_a9_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a9)] THEN istrue_a9_b13_x2 = 0bin1 ELSE istrue_a9_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a9)] THEN istrue_a9_b13_x3 = 0bin1 ELSE istrue_a9_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a9)] THEN istrue_a9_b13_x4 = 0bin1 ELSE istrue_a9_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a9)] THEN istrue_a9_b13_x5 = 0bin1 ELSE istrue_a9_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a9)] THEN istrue_a9_b13_x6 = 0bin1 ELSE istrue_a9_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a9)] THEN istrue_a9_b13_x7 = 0bin1 ELSE istrue_a9_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a9)] THEN istrue_a9_b13_x8 = 0bin1 ELSE istrue_a9_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a9)] THEN istrue_a9_b13_x9 = 0bin1 ELSE istrue_a9_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a9)] THEN istrue_a9_b13_x10 = 0bin1 ELSE istrue_a9_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a9)] THEN istrue_a9_b13_x11 = 0bin1 ELSE istrue_a9_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a9)] THEN istrue_a9_b13_x12 = 0bin1 ELSE istrue_a9_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a9)] THEN istrue_a9_b13_x13 = 0bin1 ELSE istrue_a9_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a9)] THEN istrue_a9_b13_x14 = 0bin1 ELSE istrue_a9_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a9)] THEN istrue_a9_b13_x15 = 0bin1 ELSE istrue_a9_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b13 = BVPLUS(5, 0bin0000@istrue_a9_b13_x0, 0bin0000@istrue_a9_b13_x1, 0bin0000@istrue_a9_b13_x2, 0bin0000@istrue_a9_b13_x3, 0bin0000@istrue_a9_b13_x4, 0bin0000@istrue_a9_b13_x5, 0bin0000@istrue_a9_b13_x6, 0bin0000@istrue_a9_b13_x7, 0bin0000@istrue_a9_b13_x8, 0bin0000@istrue_a9_b13_x9, 0bin0000@istrue_a9_b13_x10, 0bin0000@istrue_a9_b13_x11, 0bin0000@istrue_a9_b13_x12, 0bin0000@istrue_a9_b13_x13, 0bin0000@istrue_a9_b13_x14, 0bin0000@istrue_a9_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a9)] THEN istrue_a9_b14_x0 = 0bin1 ELSE istrue_a9_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a9)] THEN istrue_a9_b14_x1 = 0bin1 ELSE istrue_a9_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a9)] THEN istrue_a9_b14_x2 = 0bin1 ELSE istrue_a9_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a9)] THEN istrue_a9_b14_x3 = 0bin1 ELSE istrue_a9_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a9)] THEN istrue_a9_b14_x4 = 0bin1 ELSE istrue_a9_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a9)] THEN istrue_a9_b14_x5 = 0bin1 ELSE istrue_a9_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a9)] THEN istrue_a9_b14_x6 = 0bin1 ELSE istrue_a9_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a9)] THEN istrue_a9_b14_x7 = 0bin1 ELSE istrue_a9_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a9)] THEN istrue_a9_b14_x8 = 0bin1 ELSE istrue_a9_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a9)] THEN istrue_a9_b14_x9 = 0bin1 ELSE istrue_a9_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a9)] THEN istrue_a9_b14_x10 = 0bin1 ELSE istrue_a9_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a9)] THEN istrue_a9_b14_x11 = 0bin1 ELSE istrue_a9_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a9)] THEN istrue_a9_b14_x12 = 0bin1 ELSE istrue_a9_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a9)] THEN istrue_a9_b14_x13 = 0bin1 ELSE istrue_a9_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a9)] THEN istrue_a9_b14_x14 = 0bin1 ELSE istrue_a9_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a9)] THEN istrue_a9_b14_x15 = 0bin1 ELSE istrue_a9_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b14 = BVPLUS(5, 0bin0000@istrue_a9_b14_x0, 0bin0000@istrue_a9_b14_x1, 0bin0000@istrue_a9_b14_x2, 0bin0000@istrue_a9_b14_x3, 0bin0000@istrue_a9_b14_x4, 0bin0000@istrue_a9_b14_x5, 0bin0000@istrue_a9_b14_x6, 0bin0000@istrue_a9_b14_x7, 0bin0000@istrue_a9_b14_x8, 0bin0000@istrue_a9_b14_x9, 0bin0000@istrue_a9_b14_x10, 0bin0000@istrue_a9_b14_x11, 0bin0000@istrue_a9_b14_x12, 0bin0000@istrue_a9_b14_x13, 0bin0000@istrue_a9_b14_x14, 0bin0000@istrue_a9_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a9)] THEN istrue_a9_b15_x0 = 0bin1 ELSE istrue_a9_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a9)] THEN istrue_a9_b15_x1 = 0bin1 ELSE istrue_a9_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a9)] THEN istrue_a9_b15_x2 = 0bin1 ELSE istrue_a9_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a9)] THEN istrue_a9_b15_x3 = 0bin1 ELSE istrue_a9_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a9)] THEN istrue_a9_b15_x4 = 0bin1 ELSE istrue_a9_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a9)] THEN istrue_a9_b15_x5 = 0bin1 ELSE istrue_a9_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a9)] THEN istrue_a9_b15_x6 = 0bin1 ELSE istrue_a9_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a9)] THEN istrue_a9_b15_x7 = 0bin1 ELSE istrue_a9_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a9)] THEN istrue_a9_b15_x8 = 0bin1 ELSE istrue_a9_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a9)] THEN istrue_a9_b15_x9 = 0bin1 ELSE istrue_a9_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a9)] THEN istrue_a9_b15_x10 = 0bin1 ELSE istrue_a9_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a9)] THEN istrue_a9_b15_x11 = 0bin1 ELSE istrue_a9_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a9)] THEN istrue_a9_b15_x12 = 0bin1 ELSE istrue_a9_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a9)] THEN istrue_a9_b15_x13 = 0bin1 ELSE istrue_a9_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a9)] THEN istrue_a9_b15_x14 = 0bin1 ELSE istrue_a9_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a9)] THEN istrue_a9_b15_x15 = 0bin1 ELSE istrue_a9_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a9_b15 = BVPLUS(5, 0bin0000@istrue_a9_b15_x0, 0bin0000@istrue_a9_b15_x1, 0bin0000@istrue_a9_b15_x2, 0bin0000@istrue_a9_b15_x3, 0bin0000@istrue_a9_b15_x4, 0bin0000@istrue_a9_b15_x5, 0bin0000@istrue_a9_b15_x6, 0bin0000@istrue_a9_b15_x7, 0bin0000@istrue_a9_b15_x8, 0bin0000@istrue_a9_b15_x9, 0bin0000@istrue_a9_b15_x10, 0bin0000@istrue_a9_b15_x11, 0bin0000@istrue_a9_b15_x12, 0bin0000@istrue_a9_b15_x13, 0bin0000@istrue_a9_b15_x14, 0bin0000@istrue_a9_b15_x15));
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a10)] THEN istrue_a10_b0_x0 = 0bin1 ELSE istrue_a10_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a10)] THEN istrue_a10_b0_x1 = 0bin1 ELSE istrue_a10_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a10)] THEN istrue_a10_b0_x2 = 0bin1 ELSE istrue_a10_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a10)] THEN istrue_a10_b0_x3 = 0bin1 ELSE istrue_a10_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a10)] THEN istrue_a10_b0_x4 = 0bin1 ELSE istrue_a10_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a10)] THEN istrue_a10_b0_x5 = 0bin1 ELSE istrue_a10_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a10)] THEN istrue_a10_b0_x6 = 0bin1 ELSE istrue_a10_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a10)] THEN istrue_a10_b0_x7 = 0bin1 ELSE istrue_a10_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a10)] THEN istrue_a10_b0_x8 = 0bin1 ELSE istrue_a10_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a10)] THEN istrue_a10_b0_x9 = 0bin1 ELSE istrue_a10_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a10)] THEN istrue_a10_b0_x10 = 0bin1 ELSE istrue_a10_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a10)] THEN istrue_a10_b0_x11 = 0bin1 ELSE istrue_a10_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a10)] THEN istrue_a10_b0_x12 = 0bin1 ELSE istrue_a10_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a10)] THEN istrue_a10_b0_x13 = 0bin1 ELSE istrue_a10_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a10)] THEN istrue_a10_b0_x14 = 0bin1 ELSE istrue_a10_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a10)] THEN istrue_a10_b0_x15 = 0bin1 ELSE istrue_a10_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b0 = BVPLUS(5, 0bin0000@istrue_a10_b0_x0, 0bin0000@istrue_a10_b0_x1, 0bin0000@istrue_a10_b0_x2, 0bin0000@istrue_a10_b0_x3, 0bin0000@istrue_a10_b0_x4, 0bin0000@istrue_a10_b0_x5, 0bin0000@istrue_a10_b0_x6, 0bin0000@istrue_a10_b0_x7, 0bin0000@istrue_a10_b0_x8, 0bin0000@istrue_a10_b0_x9, 0bin0000@istrue_a10_b0_x10, 0bin0000@istrue_a10_b0_x11, 0bin0000@istrue_a10_b0_x12, 0bin0000@istrue_a10_b0_x13, 0bin0000@istrue_a10_b0_x14, 0bin0000@istrue_a10_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a10)] THEN istrue_a10_b1_x0 = 0bin1 ELSE istrue_a10_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a10)] THEN istrue_a10_b1_x1 = 0bin1 ELSE istrue_a10_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a10)] THEN istrue_a10_b1_x2 = 0bin1 ELSE istrue_a10_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a10)] THEN istrue_a10_b1_x3 = 0bin1 ELSE istrue_a10_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a10)] THEN istrue_a10_b1_x4 = 0bin1 ELSE istrue_a10_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a10)] THEN istrue_a10_b1_x5 = 0bin1 ELSE istrue_a10_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a10)] THEN istrue_a10_b1_x6 = 0bin1 ELSE istrue_a10_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a10)] THEN istrue_a10_b1_x7 = 0bin1 ELSE istrue_a10_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a10)] THEN istrue_a10_b1_x8 = 0bin1 ELSE istrue_a10_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a10)] THEN istrue_a10_b1_x9 = 0bin1 ELSE istrue_a10_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a10)] THEN istrue_a10_b1_x10 = 0bin1 ELSE istrue_a10_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a10)] THEN istrue_a10_b1_x11 = 0bin1 ELSE istrue_a10_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a10)] THEN istrue_a10_b1_x12 = 0bin1 ELSE istrue_a10_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a10)] THEN istrue_a10_b1_x13 = 0bin1 ELSE istrue_a10_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a10)] THEN istrue_a10_b1_x14 = 0bin1 ELSE istrue_a10_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a10)] THEN istrue_a10_b1_x15 = 0bin1 ELSE istrue_a10_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b1 = BVPLUS(5, 0bin0000@istrue_a10_b1_x0, 0bin0000@istrue_a10_b1_x1, 0bin0000@istrue_a10_b1_x2, 0bin0000@istrue_a10_b1_x3, 0bin0000@istrue_a10_b1_x4, 0bin0000@istrue_a10_b1_x5, 0bin0000@istrue_a10_b1_x6, 0bin0000@istrue_a10_b1_x7, 0bin0000@istrue_a10_b1_x8, 0bin0000@istrue_a10_b1_x9, 0bin0000@istrue_a10_b1_x10, 0bin0000@istrue_a10_b1_x11, 0bin0000@istrue_a10_b1_x12, 0bin0000@istrue_a10_b1_x13, 0bin0000@istrue_a10_b1_x14, 0bin0000@istrue_a10_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a10)] THEN istrue_a10_b2_x0 = 0bin1 ELSE istrue_a10_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a10)] THEN istrue_a10_b2_x1 = 0bin1 ELSE istrue_a10_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a10)] THEN istrue_a10_b2_x2 = 0bin1 ELSE istrue_a10_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a10)] THEN istrue_a10_b2_x3 = 0bin1 ELSE istrue_a10_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a10)] THEN istrue_a10_b2_x4 = 0bin1 ELSE istrue_a10_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a10)] THEN istrue_a10_b2_x5 = 0bin1 ELSE istrue_a10_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a10)] THEN istrue_a10_b2_x6 = 0bin1 ELSE istrue_a10_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a10)] THEN istrue_a10_b2_x7 = 0bin1 ELSE istrue_a10_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a10)] THEN istrue_a10_b2_x8 = 0bin1 ELSE istrue_a10_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a10)] THEN istrue_a10_b2_x9 = 0bin1 ELSE istrue_a10_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a10)] THEN istrue_a10_b2_x10 = 0bin1 ELSE istrue_a10_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a10)] THEN istrue_a10_b2_x11 = 0bin1 ELSE istrue_a10_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a10)] THEN istrue_a10_b2_x12 = 0bin1 ELSE istrue_a10_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a10)] THEN istrue_a10_b2_x13 = 0bin1 ELSE istrue_a10_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a10)] THEN istrue_a10_b2_x14 = 0bin1 ELSE istrue_a10_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a10)] THEN istrue_a10_b2_x15 = 0bin1 ELSE istrue_a10_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b2 = BVPLUS(5, 0bin0000@istrue_a10_b2_x0, 0bin0000@istrue_a10_b2_x1, 0bin0000@istrue_a10_b2_x2, 0bin0000@istrue_a10_b2_x3, 0bin0000@istrue_a10_b2_x4, 0bin0000@istrue_a10_b2_x5, 0bin0000@istrue_a10_b2_x6, 0bin0000@istrue_a10_b2_x7, 0bin0000@istrue_a10_b2_x8, 0bin0000@istrue_a10_b2_x9, 0bin0000@istrue_a10_b2_x10, 0bin0000@istrue_a10_b2_x11, 0bin0000@istrue_a10_b2_x12, 0bin0000@istrue_a10_b2_x13, 0bin0000@istrue_a10_b2_x14, 0bin0000@istrue_a10_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a10)] THEN istrue_a10_b3_x0 = 0bin1 ELSE istrue_a10_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a10)] THEN istrue_a10_b3_x1 = 0bin1 ELSE istrue_a10_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a10)] THEN istrue_a10_b3_x2 = 0bin1 ELSE istrue_a10_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a10)] THEN istrue_a10_b3_x3 = 0bin1 ELSE istrue_a10_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a10)] THEN istrue_a10_b3_x4 = 0bin1 ELSE istrue_a10_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a10)] THEN istrue_a10_b3_x5 = 0bin1 ELSE istrue_a10_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a10)] THEN istrue_a10_b3_x6 = 0bin1 ELSE istrue_a10_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a10)] THEN istrue_a10_b3_x7 = 0bin1 ELSE istrue_a10_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a10)] THEN istrue_a10_b3_x8 = 0bin1 ELSE istrue_a10_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a10)] THEN istrue_a10_b3_x9 = 0bin1 ELSE istrue_a10_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a10)] THEN istrue_a10_b3_x10 = 0bin1 ELSE istrue_a10_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a10)] THEN istrue_a10_b3_x11 = 0bin1 ELSE istrue_a10_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a10)] THEN istrue_a10_b3_x12 = 0bin1 ELSE istrue_a10_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a10)] THEN istrue_a10_b3_x13 = 0bin1 ELSE istrue_a10_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a10)] THEN istrue_a10_b3_x14 = 0bin1 ELSE istrue_a10_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a10)] THEN istrue_a10_b3_x15 = 0bin1 ELSE istrue_a10_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b3 = BVPLUS(5, 0bin0000@istrue_a10_b3_x0, 0bin0000@istrue_a10_b3_x1, 0bin0000@istrue_a10_b3_x2, 0bin0000@istrue_a10_b3_x3, 0bin0000@istrue_a10_b3_x4, 0bin0000@istrue_a10_b3_x5, 0bin0000@istrue_a10_b3_x6, 0bin0000@istrue_a10_b3_x7, 0bin0000@istrue_a10_b3_x8, 0bin0000@istrue_a10_b3_x9, 0bin0000@istrue_a10_b3_x10, 0bin0000@istrue_a10_b3_x11, 0bin0000@istrue_a10_b3_x12, 0bin0000@istrue_a10_b3_x13, 0bin0000@istrue_a10_b3_x14, 0bin0000@istrue_a10_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a10)] THEN istrue_a10_b4_x0 = 0bin1 ELSE istrue_a10_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a10)] THEN istrue_a10_b4_x1 = 0bin1 ELSE istrue_a10_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a10)] THEN istrue_a10_b4_x2 = 0bin1 ELSE istrue_a10_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a10)] THEN istrue_a10_b4_x3 = 0bin1 ELSE istrue_a10_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a10)] THEN istrue_a10_b4_x4 = 0bin1 ELSE istrue_a10_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a10)] THEN istrue_a10_b4_x5 = 0bin1 ELSE istrue_a10_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a10)] THEN istrue_a10_b4_x6 = 0bin1 ELSE istrue_a10_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a10)] THEN istrue_a10_b4_x7 = 0bin1 ELSE istrue_a10_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a10)] THEN istrue_a10_b4_x8 = 0bin1 ELSE istrue_a10_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a10)] THEN istrue_a10_b4_x9 = 0bin1 ELSE istrue_a10_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a10)] THEN istrue_a10_b4_x10 = 0bin1 ELSE istrue_a10_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a10)] THEN istrue_a10_b4_x11 = 0bin1 ELSE istrue_a10_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a10)] THEN istrue_a10_b4_x12 = 0bin1 ELSE istrue_a10_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a10)] THEN istrue_a10_b4_x13 = 0bin1 ELSE istrue_a10_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a10)] THEN istrue_a10_b4_x14 = 0bin1 ELSE istrue_a10_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a10)] THEN istrue_a10_b4_x15 = 0bin1 ELSE istrue_a10_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b4 = BVPLUS(5, 0bin0000@istrue_a10_b4_x0, 0bin0000@istrue_a10_b4_x1, 0bin0000@istrue_a10_b4_x2, 0bin0000@istrue_a10_b4_x3, 0bin0000@istrue_a10_b4_x4, 0bin0000@istrue_a10_b4_x5, 0bin0000@istrue_a10_b4_x6, 0bin0000@istrue_a10_b4_x7, 0bin0000@istrue_a10_b4_x8, 0bin0000@istrue_a10_b4_x9, 0bin0000@istrue_a10_b4_x10, 0bin0000@istrue_a10_b4_x11, 0bin0000@istrue_a10_b4_x12, 0bin0000@istrue_a10_b4_x13, 0bin0000@istrue_a10_b4_x14, 0bin0000@istrue_a10_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a10)] THEN istrue_a10_b5_x0 = 0bin1 ELSE istrue_a10_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a10)] THEN istrue_a10_b5_x1 = 0bin1 ELSE istrue_a10_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a10)] THEN istrue_a10_b5_x2 = 0bin1 ELSE istrue_a10_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a10)] THEN istrue_a10_b5_x3 = 0bin1 ELSE istrue_a10_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a10)] THEN istrue_a10_b5_x4 = 0bin1 ELSE istrue_a10_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a10)] THEN istrue_a10_b5_x5 = 0bin1 ELSE istrue_a10_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a10)] THEN istrue_a10_b5_x6 = 0bin1 ELSE istrue_a10_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a10)] THEN istrue_a10_b5_x7 = 0bin1 ELSE istrue_a10_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a10)] THEN istrue_a10_b5_x8 = 0bin1 ELSE istrue_a10_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a10)] THEN istrue_a10_b5_x9 = 0bin1 ELSE istrue_a10_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a10)] THEN istrue_a10_b5_x10 = 0bin1 ELSE istrue_a10_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a10)] THEN istrue_a10_b5_x11 = 0bin1 ELSE istrue_a10_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a10)] THEN istrue_a10_b5_x12 = 0bin1 ELSE istrue_a10_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a10)] THEN istrue_a10_b5_x13 = 0bin1 ELSE istrue_a10_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a10)] THEN istrue_a10_b5_x14 = 0bin1 ELSE istrue_a10_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a10)] THEN istrue_a10_b5_x15 = 0bin1 ELSE istrue_a10_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b5 = BVPLUS(5, 0bin0000@istrue_a10_b5_x0, 0bin0000@istrue_a10_b5_x1, 0bin0000@istrue_a10_b5_x2, 0bin0000@istrue_a10_b5_x3, 0bin0000@istrue_a10_b5_x4, 0bin0000@istrue_a10_b5_x5, 0bin0000@istrue_a10_b5_x6, 0bin0000@istrue_a10_b5_x7, 0bin0000@istrue_a10_b5_x8, 0bin0000@istrue_a10_b5_x9, 0bin0000@istrue_a10_b5_x10, 0bin0000@istrue_a10_b5_x11, 0bin0000@istrue_a10_b5_x12, 0bin0000@istrue_a10_b5_x13, 0bin0000@istrue_a10_b5_x14, 0bin0000@istrue_a10_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a10)] THEN istrue_a10_b6_x0 = 0bin1 ELSE istrue_a10_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a10)] THEN istrue_a10_b6_x1 = 0bin1 ELSE istrue_a10_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a10)] THEN istrue_a10_b6_x2 = 0bin1 ELSE istrue_a10_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a10)] THEN istrue_a10_b6_x3 = 0bin1 ELSE istrue_a10_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a10)] THEN istrue_a10_b6_x4 = 0bin1 ELSE istrue_a10_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a10)] THEN istrue_a10_b6_x5 = 0bin1 ELSE istrue_a10_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a10)] THEN istrue_a10_b6_x6 = 0bin1 ELSE istrue_a10_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a10)] THEN istrue_a10_b6_x7 = 0bin1 ELSE istrue_a10_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a10)] THEN istrue_a10_b6_x8 = 0bin1 ELSE istrue_a10_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a10)] THEN istrue_a10_b6_x9 = 0bin1 ELSE istrue_a10_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a10)] THEN istrue_a10_b6_x10 = 0bin1 ELSE istrue_a10_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a10)] THEN istrue_a10_b6_x11 = 0bin1 ELSE istrue_a10_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a10)] THEN istrue_a10_b6_x12 = 0bin1 ELSE istrue_a10_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a10)] THEN istrue_a10_b6_x13 = 0bin1 ELSE istrue_a10_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a10)] THEN istrue_a10_b6_x14 = 0bin1 ELSE istrue_a10_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a10)] THEN istrue_a10_b6_x15 = 0bin1 ELSE istrue_a10_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b6 = BVPLUS(5, 0bin0000@istrue_a10_b6_x0, 0bin0000@istrue_a10_b6_x1, 0bin0000@istrue_a10_b6_x2, 0bin0000@istrue_a10_b6_x3, 0bin0000@istrue_a10_b6_x4, 0bin0000@istrue_a10_b6_x5, 0bin0000@istrue_a10_b6_x6, 0bin0000@istrue_a10_b6_x7, 0bin0000@istrue_a10_b6_x8, 0bin0000@istrue_a10_b6_x9, 0bin0000@istrue_a10_b6_x10, 0bin0000@istrue_a10_b6_x11, 0bin0000@istrue_a10_b6_x12, 0bin0000@istrue_a10_b6_x13, 0bin0000@istrue_a10_b6_x14, 0bin0000@istrue_a10_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a10)] THEN istrue_a10_b7_x0 = 0bin1 ELSE istrue_a10_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a10)] THEN istrue_a10_b7_x1 = 0bin1 ELSE istrue_a10_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a10)] THEN istrue_a10_b7_x2 = 0bin1 ELSE istrue_a10_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a10)] THEN istrue_a10_b7_x3 = 0bin1 ELSE istrue_a10_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a10)] THEN istrue_a10_b7_x4 = 0bin1 ELSE istrue_a10_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a10)] THEN istrue_a10_b7_x5 = 0bin1 ELSE istrue_a10_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a10)] THEN istrue_a10_b7_x6 = 0bin1 ELSE istrue_a10_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a10)] THEN istrue_a10_b7_x7 = 0bin1 ELSE istrue_a10_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a10)] THEN istrue_a10_b7_x8 = 0bin1 ELSE istrue_a10_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a10)] THEN istrue_a10_b7_x9 = 0bin1 ELSE istrue_a10_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a10)] THEN istrue_a10_b7_x10 = 0bin1 ELSE istrue_a10_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a10)] THEN istrue_a10_b7_x11 = 0bin1 ELSE istrue_a10_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a10)] THEN istrue_a10_b7_x12 = 0bin1 ELSE istrue_a10_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a10)] THEN istrue_a10_b7_x13 = 0bin1 ELSE istrue_a10_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a10)] THEN istrue_a10_b7_x14 = 0bin1 ELSE istrue_a10_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a10)] THEN istrue_a10_b7_x15 = 0bin1 ELSE istrue_a10_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b7 = BVPLUS(5, 0bin0000@istrue_a10_b7_x0, 0bin0000@istrue_a10_b7_x1, 0bin0000@istrue_a10_b7_x2, 0bin0000@istrue_a10_b7_x3, 0bin0000@istrue_a10_b7_x4, 0bin0000@istrue_a10_b7_x5, 0bin0000@istrue_a10_b7_x6, 0bin0000@istrue_a10_b7_x7, 0bin0000@istrue_a10_b7_x8, 0bin0000@istrue_a10_b7_x9, 0bin0000@istrue_a10_b7_x10, 0bin0000@istrue_a10_b7_x11, 0bin0000@istrue_a10_b7_x12, 0bin0000@istrue_a10_b7_x13, 0bin0000@istrue_a10_b7_x14, 0bin0000@istrue_a10_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a10)] THEN istrue_a10_b8_x0 = 0bin1 ELSE istrue_a10_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a10)] THEN istrue_a10_b8_x1 = 0bin1 ELSE istrue_a10_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a10)] THEN istrue_a10_b8_x2 = 0bin1 ELSE istrue_a10_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a10)] THEN istrue_a10_b8_x3 = 0bin1 ELSE istrue_a10_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a10)] THEN istrue_a10_b8_x4 = 0bin1 ELSE istrue_a10_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a10)] THEN istrue_a10_b8_x5 = 0bin1 ELSE istrue_a10_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a10)] THEN istrue_a10_b8_x6 = 0bin1 ELSE istrue_a10_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a10)] THEN istrue_a10_b8_x7 = 0bin1 ELSE istrue_a10_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a10)] THEN istrue_a10_b8_x8 = 0bin1 ELSE istrue_a10_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a10)] THEN istrue_a10_b8_x9 = 0bin1 ELSE istrue_a10_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a10)] THEN istrue_a10_b8_x10 = 0bin1 ELSE istrue_a10_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a10)] THEN istrue_a10_b8_x11 = 0bin1 ELSE istrue_a10_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a10)] THEN istrue_a10_b8_x12 = 0bin1 ELSE istrue_a10_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a10)] THEN istrue_a10_b8_x13 = 0bin1 ELSE istrue_a10_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a10)] THEN istrue_a10_b8_x14 = 0bin1 ELSE istrue_a10_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a10)] THEN istrue_a10_b8_x15 = 0bin1 ELSE istrue_a10_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b8 = BVPLUS(5, 0bin0000@istrue_a10_b8_x0, 0bin0000@istrue_a10_b8_x1, 0bin0000@istrue_a10_b8_x2, 0bin0000@istrue_a10_b8_x3, 0bin0000@istrue_a10_b8_x4, 0bin0000@istrue_a10_b8_x5, 0bin0000@istrue_a10_b8_x6, 0bin0000@istrue_a10_b8_x7, 0bin0000@istrue_a10_b8_x8, 0bin0000@istrue_a10_b8_x9, 0bin0000@istrue_a10_b8_x10, 0bin0000@istrue_a10_b8_x11, 0bin0000@istrue_a10_b8_x12, 0bin0000@istrue_a10_b8_x13, 0bin0000@istrue_a10_b8_x14, 0bin0000@istrue_a10_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a10)] THEN istrue_a10_b9_x0 = 0bin1 ELSE istrue_a10_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a10)] THEN istrue_a10_b9_x1 = 0bin1 ELSE istrue_a10_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a10)] THEN istrue_a10_b9_x2 = 0bin1 ELSE istrue_a10_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a10)] THEN istrue_a10_b9_x3 = 0bin1 ELSE istrue_a10_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a10)] THEN istrue_a10_b9_x4 = 0bin1 ELSE istrue_a10_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a10)] THEN istrue_a10_b9_x5 = 0bin1 ELSE istrue_a10_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a10)] THEN istrue_a10_b9_x6 = 0bin1 ELSE istrue_a10_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a10)] THEN istrue_a10_b9_x7 = 0bin1 ELSE istrue_a10_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a10)] THEN istrue_a10_b9_x8 = 0bin1 ELSE istrue_a10_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a10)] THEN istrue_a10_b9_x9 = 0bin1 ELSE istrue_a10_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a10)] THEN istrue_a10_b9_x10 = 0bin1 ELSE istrue_a10_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a10)] THEN istrue_a10_b9_x11 = 0bin1 ELSE istrue_a10_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a10)] THEN istrue_a10_b9_x12 = 0bin1 ELSE istrue_a10_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a10)] THEN istrue_a10_b9_x13 = 0bin1 ELSE istrue_a10_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a10)] THEN istrue_a10_b9_x14 = 0bin1 ELSE istrue_a10_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a10)] THEN istrue_a10_b9_x15 = 0bin1 ELSE istrue_a10_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b9 = BVPLUS(5, 0bin0000@istrue_a10_b9_x0, 0bin0000@istrue_a10_b9_x1, 0bin0000@istrue_a10_b9_x2, 0bin0000@istrue_a10_b9_x3, 0bin0000@istrue_a10_b9_x4, 0bin0000@istrue_a10_b9_x5, 0bin0000@istrue_a10_b9_x6, 0bin0000@istrue_a10_b9_x7, 0bin0000@istrue_a10_b9_x8, 0bin0000@istrue_a10_b9_x9, 0bin0000@istrue_a10_b9_x10, 0bin0000@istrue_a10_b9_x11, 0bin0000@istrue_a10_b9_x12, 0bin0000@istrue_a10_b9_x13, 0bin0000@istrue_a10_b9_x14, 0bin0000@istrue_a10_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a10)] THEN istrue_a10_b10_x0 = 0bin1 ELSE istrue_a10_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a10)] THEN istrue_a10_b10_x1 = 0bin1 ELSE istrue_a10_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a10)] THEN istrue_a10_b10_x2 = 0bin1 ELSE istrue_a10_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a10)] THEN istrue_a10_b10_x3 = 0bin1 ELSE istrue_a10_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a10)] THEN istrue_a10_b10_x4 = 0bin1 ELSE istrue_a10_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a10)] THEN istrue_a10_b10_x5 = 0bin1 ELSE istrue_a10_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a10)] THEN istrue_a10_b10_x6 = 0bin1 ELSE istrue_a10_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a10)] THEN istrue_a10_b10_x7 = 0bin1 ELSE istrue_a10_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a10)] THEN istrue_a10_b10_x8 = 0bin1 ELSE istrue_a10_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a10)] THEN istrue_a10_b10_x9 = 0bin1 ELSE istrue_a10_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a10)] THEN istrue_a10_b10_x10 = 0bin1 ELSE istrue_a10_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a10)] THEN istrue_a10_b10_x11 = 0bin1 ELSE istrue_a10_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a10)] THEN istrue_a10_b10_x12 = 0bin1 ELSE istrue_a10_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a10)] THEN istrue_a10_b10_x13 = 0bin1 ELSE istrue_a10_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a10)] THEN istrue_a10_b10_x14 = 0bin1 ELSE istrue_a10_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a10)] THEN istrue_a10_b10_x15 = 0bin1 ELSE istrue_a10_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b10 = BVPLUS(5, 0bin0000@istrue_a10_b10_x0, 0bin0000@istrue_a10_b10_x1, 0bin0000@istrue_a10_b10_x2, 0bin0000@istrue_a10_b10_x3, 0bin0000@istrue_a10_b10_x4, 0bin0000@istrue_a10_b10_x5, 0bin0000@istrue_a10_b10_x6, 0bin0000@istrue_a10_b10_x7, 0bin0000@istrue_a10_b10_x8, 0bin0000@istrue_a10_b10_x9, 0bin0000@istrue_a10_b10_x10, 0bin0000@istrue_a10_b10_x11, 0bin0000@istrue_a10_b10_x12, 0bin0000@istrue_a10_b10_x13, 0bin0000@istrue_a10_b10_x14, 0bin0000@istrue_a10_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a10)] THEN istrue_a10_b11_x0 = 0bin1 ELSE istrue_a10_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a10)] THEN istrue_a10_b11_x1 = 0bin1 ELSE istrue_a10_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a10)] THEN istrue_a10_b11_x2 = 0bin1 ELSE istrue_a10_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a10)] THEN istrue_a10_b11_x3 = 0bin1 ELSE istrue_a10_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a10)] THEN istrue_a10_b11_x4 = 0bin1 ELSE istrue_a10_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a10)] THEN istrue_a10_b11_x5 = 0bin1 ELSE istrue_a10_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a10)] THEN istrue_a10_b11_x6 = 0bin1 ELSE istrue_a10_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a10)] THEN istrue_a10_b11_x7 = 0bin1 ELSE istrue_a10_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a10)] THEN istrue_a10_b11_x8 = 0bin1 ELSE istrue_a10_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a10)] THEN istrue_a10_b11_x9 = 0bin1 ELSE istrue_a10_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a10)] THEN istrue_a10_b11_x10 = 0bin1 ELSE istrue_a10_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a10)] THEN istrue_a10_b11_x11 = 0bin1 ELSE istrue_a10_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a10)] THEN istrue_a10_b11_x12 = 0bin1 ELSE istrue_a10_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a10)] THEN istrue_a10_b11_x13 = 0bin1 ELSE istrue_a10_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a10)] THEN istrue_a10_b11_x14 = 0bin1 ELSE istrue_a10_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a10)] THEN istrue_a10_b11_x15 = 0bin1 ELSE istrue_a10_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b11 = BVPLUS(5, 0bin0000@istrue_a10_b11_x0, 0bin0000@istrue_a10_b11_x1, 0bin0000@istrue_a10_b11_x2, 0bin0000@istrue_a10_b11_x3, 0bin0000@istrue_a10_b11_x4, 0bin0000@istrue_a10_b11_x5, 0bin0000@istrue_a10_b11_x6, 0bin0000@istrue_a10_b11_x7, 0bin0000@istrue_a10_b11_x8, 0bin0000@istrue_a10_b11_x9, 0bin0000@istrue_a10_b11_x10, 0bin0000@istrue_a10_b11_x11, 0bin0000@istrue_a10_b11_x12, 0bin0000@istrue_a10_b11_x13, 0bin0000@istrue_a10_b11_x14, 0bin0000@istrue_a10_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a10)] THEN istrue_a10_b12_x0 = 0bin1 ELSE istrue_a10_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a10)] THEN istrue_a10_b12_x1 = 0bin1 ELSE istrue_a10_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a10)] THEN istrue_a10_b12_x2 = 0bin1 ELSE istrue_a10_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a10)] THEN istrue_a10_b12_x3 = 0bin1 ELSE istrue_a10_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a10)] THEN istrue_a10_b12_x4 = 0bin1 ELSE istrue_a10_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a10)] THEN istrue_a10_b12_x5 = 0bin1 ELSE istrue_a10_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a10)] THEN istrue_a10_b12_x6 = 0bin1 ELSE istrue_a10_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a10)] THEN istrue_a10_b12_x7 = 0bin1 ELSE istrue_a10_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a10)] THEN istrue_a10_b12_x8 = 0bin1 ELSE istrue_a10_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a10)] THEN istrue_a10_b12_x9 = 0bin1 ELSE istrue_a10_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a10)] THEN istrue_a10_b12_x10 = 0bin1 ELSE istrue_a10_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a10)] THEN istrue_a10_b12_x11 = 0bin1 ELSE istrue_a10_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a10)] THEN istrue_a10_b12_x12 = 0bin1 ELSE istrue_a10_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a10)] THEN istrue_a10_b12_x13 = 0bin1 ELSE istrue_a10_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a10)] THEN istrue_a10_b12_x14 = 0bin1 ELSE istrue_a10_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a10)] THEN istrue_a10_b12_x15 = 0bin1 ELSE istrue_a10_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b12 = BVPLUS(5, 0bin0000@istrue_a10_b12_x0, 0bin0000@istrue_a10_b12_x1, 0bin0000@istrue_a10_b12_x2, 0bin0000@istrue_a10_b12_x3, 0bin0000@istrue_a10_b12_x4, 0bin0000@istrue_a10_b12_x5, 0bin0000@istrue_a10_b12_x6, 0bin0000@istrue_a10_b12_x7, 0bin0000@istrue_a10_b12_x8, 0bin0000@istrue_a10_b12_x9, 0bin0000@istrue_a10_b12_x10, 0bin0000@istrue_a10_b12_x11, 0bin0000@istrue_a10_b12_x12, 0bin0000@istrue_a10_b12_x13, 0bin0000@istrue_a10_b12_x14, 0bin0000@istrue_a10_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a10)] THEN istrue_a10_b13_x0 = 0bin1 ELSE istrue_a10_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a10)] THEN istrue_a10_b13_x1 = 0bin1 ELSE istrue_a10_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a10)] THEN istrue_a10_b13_x2 = 0bin1 ELSE istrue_a10_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a10)] THEN istrue_a10_b13_x3 = 0bin1 ELSE istrue_a10_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a10)] THEN istrue_a10_b13_x4 = 0bin1 ELSE istrue_a10_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a10)] THEN istrue_a10_b13_x5 = 0bin1 ELSE istrue_a10_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a10)] THEN istrue_a10_b13_x6 = 0bin1 ELSE istrue_a10_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a10)] THEN istrue_a10_b13_x7 = 0bin1 ELSE istrue_a10_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a10)] THEN istrue_a10_b13_x8 = 0bin1 ELSE istrue_a10_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a10)] THEN istrue_a10_b13_x9 = 0bin1 ELSE istrue_a10_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a10)] THEN istrue_a10_b13_x10 = 0bin1 ELSE istrue_a10_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a10)] THEN istrue_a10_b13_x11 = 0bin1 ELSE istrue_a10_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a10)] THEN istrue_a10_b13_x12 = 0bin1 ELSE istrue_a10_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a10)] THEN istrue_a10_b13_x13 = 0bin1 ELSE istrue_a10_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a10)] THEN istrue_a10_b13_x14 = 0bin1 ELSE istrue_a10_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a10)] THEN istrue_a10_b13_x15 = 0bin1 ELSE istrue_a10_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b13 = BVPLUS(5, 0bin0000@istrue_a10_b13_x0, 0bin0000@istrue_a10_b13_x1, 0bin0000@istrue_a10_b13_x2, 0bin0000@istrue_a10_b13_x3, 0bin0000@istrue_a10_b13_x4, 0bin0000@istrue_a10_b13_x5, 0bin0000@istrue_a10_b13_x6, 0bin0000@istrue_a10_b13_x7, 0bin0000@istrue_a10_b13_x8, 0bin0000@istrue_a10_b13_x9, 0bin0000@istrue_a10_b13_x10, 0bin0000@istrue_a10_b13_x11, 0bin0000@istrue_a10_b13_x12, 0bin0000@istrue_a10_b13_x13, 0bin0000@istrue_a10_b13_x14, 0bin0000@istrue_a10_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a10)] THEN istrue_a10_b14_x0 = 0bin1 ELSE istrue_a10_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a10)] THEN istrue_a10_b14_x1 = 0bin1 ELSE istrue_a10_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a10)] THEN istrue_a10_b14_x2 = 0bin1 ELSE istrue_a10_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a10)] THEN istrue_a10_b14_x3 = 0bin1 ELSE istrue_a10_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a10)] THEN istrue_a10_b14_x4 = 0bin1 ELSE istrue_a10_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a10)] THEN istrue_a10_b14_x5 = 0bin1 ELSE istrue_a10_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a10)] THEN istrue_a10_b14_x6 = 0bin1 ELSE istrue_a10_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a10)] THEN istrue_a10_b14_x7 = 0bin1 ELSE istrue_a10_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a10)] THEN istrue_a10_b14_x8 = 0bin1 ELSE istrue_a10_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a10)] THEN istrue_a10_b14_x9 = 0bin1 ELSE istrue_a10_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a10)] THEN istrue_a10_b14_x10 = 0bin1 ELSE istrue_a10_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a10)] THEN istrue_a10_b14_x11 = 0bin1 ELSE istrue_a10_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a10)] THEN istrue_a10_b14_x12 = 0bin1 ELSE istrue_a10_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a10)] THEN istrue_a10_b14_x13 = 0bin1 ELSE istrue_a10_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a10)] THEN istrue_a10_b14_x14 = 0bin1 ELSE istrue_a10_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a10)] THEN istrue_a10_b14_x15 = 0bin1 ELSE istrue_a10_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b14 = BVPLUS(5, 0bin0000@istrue_a10_b14_x0, 0bin0000@istrue_a10_b14_x1, 0bin0000@istrue_a10_b14_x2, 0bin0000@istrue_a10_b14_x3, 0bin0000@istrue_a10_b14_x4, 0bin0000@istrue_a10_b14_x5, 0bin0000@istrue_a10_b14_x6, 0bin0000@istrue_a10_b14_x7, 0bin0000@istrue_a10_b14_x8, 0bin0000@istrue_a10_b14_x9, 0bin0000@istrue_a10_b14_x10, 0bin0000@istrue_a10_b14_x11, 0bin0000@istrue_a10_b14_x12, 0bin0000@istrue_a10_b14_x13, 0bin0000@istrue_a10_b14_x14, 0bin0000@istrue_a10_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a10)] THEN istrue_a10_b15_x0 = 0bin1 ELSE istrue_a10_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a10)] THEN istrue_a10_b15_x1 = 0bin1 ELSE istrue_a10_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a10)] THEN istrue_a10_b15_x2 = 0bin1 ELSE istrue_a10_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a10)] THEN istrue_a10_b15_x3 = 0bin1 ELSE istrue_a10_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a10)] THEN istrue_a10_b15_x4 = 0bin1 ELSE istrue_a10_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a10)] THEN istrue_a10_b15_x5 = 0bin1 ELSE istrue_a10_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a10)] THEN istrue_a10_b15_x6 = 0bin1 ELSE istrue_a10_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a10)] THEN istrue_a10_b15_x7 = 0bin1 ELSE istrue_a10_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a10)] THEN istrue_a10_b15_x8 = 0bin1 ELSE istrue_a10_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a10)] THEN istrue_a10_b15_x9 = 0bin1 ELSE istrue_a10_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a10)] THEN istrue_a10_b15_x10 = 0bin1 ELSE istrue_a10_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a10)] THEN istrue_a10_b15_x11 = 0bin1 ELSE istrue_a10_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a10)] THEN istrue_a10_b15_x12 = 0bin1 ELSE istrue_a10_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a10)] THEN istrue_a10_b15_x13 = 0bin1 ELSE istrue_a10_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a10)] THEN istrue_a10_b15_x14 = 0bin1 ELSE istrue_a10_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a10)] THEN istrue_a10_b15_x15 = 0bin1 ELSE istrue_a10_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a10_b15 = BVPLUS(5, 0bin0000@istrue_a10_b15_x0, 0bin0000@istrue_a10_b15_x1, 0bin0000@istrue_a10_b15_x2, 0bin0000@istrue_a10_b15_x3, 0bin0000@istrue_a10_b15_x4, 0bin0000@istrue_a10_b15_x5, 0bin0000@istrue_a10_b15_x6, 0bin0000@istrue_a10_b15_x7, 0bin0000@istrue_a10_b15_x8, 0bin0000@istrue_a10_b15_x9, 0bin0000@istrue_a10_b15_x10, 0bin0000@istrue_a10_b15_x11, 0bin0000@istrue_a10_b15_x12, 0bin0000@istrue_a10_b15_x13, 0bin0000@istrue_a10_b15_x14, 0bin0000@istrue_a10_b15_x15));
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a11)] THEN istrue_a11_b0_x0 = 0bin1 ELSE istrue_a11_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a11)] THEN istrue_a11_b0_x1 = 0bin1 ELSE istrue_a11_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a11)] THEN istrue_a11_b0_x2 = 0bin1 ELSE istrue_a11_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a11)] THEN istrue_a11_b0_x3 = 0bin1 ELSE istrue_a11_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a11)] THEN istrue_a11_b0_x4 = 0bin1 ELSE istrue_a11_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a11)] THEN istrue_a11_b0_x5 = 0bin1 ELSE istrue_a11_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a11)] THEN istrue_a11_b0_x6 = 0bin1 ELSE istrue_a11_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a11)] THEN istrue_a11_b0_x7 = 0bin1 ELSE istrue_a11_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a11)] THEN istrue_a11_b0_x8 = 0bin1 ELSE istrue_a11_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a11)] THEN istrue_a11_b0_x9 = 0bin1 ELSE istrue_a11_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a11)] THEN istrue_a11_b0_x10 = 0bin1 ELSE istrue_a11_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a11)] THEN istrue_a11_b0_x11 = 0bin1 ELSE istrue_a11_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a11)] THEN istrue_a11_b0_x12 = 0bin1 ELSE istrue_a11_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a11)] THEN istrue_a11_b0_x13 = 0bin1 ELSE istrue_a11_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a11)] THEN istrue_a11_b0_x14 = 0bin1 ELSE istrue_a11_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a11)] THEN istrue_a11_b0_x15 = 0bin1 ELSE istrue_a11_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b0 = BVPLUS(5, 0bin0000@istrue_a11_b0_x0, 0bin0000@istrue_a11_b0_x1, 0bin0000@istrue_a11_b0_x2, 0bin0000@istrue_a11_b0_x3, 0bin0000@istrue_a11_b0_x4, 0bin0000@istrue_a11_b0_x5, 0bin0000@istrue_a11_b0_x6, 0bin0000@istrue_a11_b0_x7, 0bin0000@istrue_a11_b0_x8, 0bin0000@istrue_a11_b0_x9, 0bin0000@istrue_a11_b0_x10, 0bin0000@istrue_a11_b0_x11, 0bin0000@istrue_a11_b0_x12, 0bin0000@istrue_a11_b0_x13, 0bin0000@istrue_a11_b0_x14, 0bin0000@istrue_a11_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a11)] THEN istrue_a11_b1_x0 = 0bin1 ELSE istrue_a11_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a11)] THEN istrue_a11_b1_x1 = 0bin1 ELSE istrue_a11_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a11)] THEN istrue_a11_b1_x2 = 0bin1 ELSE istrue_a11_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a11)] THEN istrue_a11_b1_x3 = 0bin1 ELSE istrue_a11_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a11)] THEN istrue_a11_b1_x4 = 0bin1 ELSE istrue_a11_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a11)] THEN istrue_a11_b1_x5 = 0bin1 ELSE istrue_a11_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a11)] THEN istrue_a11_b1_x6 = 0bin1 ELSE istrue_a11_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a11)] THEN istrue_a11_b1_x7 = 0bin1 ELSE istrue_a11_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a11)] THEN istrue_a11_b1_x8 = 0bin1 ELSE istrue_a11_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a11)] THEN istrue_a11_b1_x9 = 0bin1 ELSE istrue_a11_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a11)] THEN istrue_a11_b1_x10 = 0bin1 ELSE istrue_a11_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a11)] THEN istrue_a11_b1_x11 = 0bin1 ELSE istrue_a11_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a11)] THEN istrue_a11_b1_x12 = 0bin1 ELSE istrue_a11_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a11)] THEN istrue_a11_b1_x13 = 0bin1 ELSE istrue_a11_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a11)] THEN istrue_a11_b1_x14 = 0bin1 ELSE istrue_a11_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a11)] THEN istrue_a11_b1_x15 = 0bin1 ELSE istrue_a11_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b1 = BVPLUS(5, 0bin0000@istrue_a11_b1_x0, 0bin0000@istrue_a11_b1_x1, 0bin0000@istrue_a11_b1_x2, 0bin0000@istrue_a11_b1_x3, 0bin0000@istrue_a11_b1_x4, 0bin0000@istrue_a11_b1_x5, 0bin0000@istrue_a11_b1_x6, 0bin0000@istrue_a11_b1_x7, 0bin0000@istrue_a11_b1_x8, 0bin0000@istrue_a11_b1_x9, 0bin0000@istrue_a11_b1_x10, 0bin0000@istrue_a11_b1_x11, 0bin0000@istrue_a11_b1_x12, 0bin0000@istrue_a11_b1_x13, 0bin0000@istrue_a11_b1_x14, 0bin0000@istrue_a11_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a11)] THEN istrue_a11_b2_x0 = 0bin1 ELSE istrue_a11_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a11)] THEN istrue_a11_b2_x1 = 0bin1 ELSE istrue_a11_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a11)] THEN istrue_a11_b2_x2 = 0bin1 ELSE istrue_a11_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a11)] THEN istrue_a11_b2_x3 = 0bin1 ELSE istrue_a11_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a11)] THEN istrue_a11_b2_x4 = 0bin1 ELSE istrue_a11_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a11)] THEN istrue_a11_b2_x5 = 0bin1 ELSE istrue_a11_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a11)] THEN istrue_a11_b2_x6 = 0bin1 ELSE istrue_a11_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a11)] THEN istrue_a11_b2_x7 = 0bin1 ELSE istrue_a11_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a11)] THEN istrue_a11_b2_x8 = 0bin1 ELSE istrue_a11_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a11)] THEN istrue_a11_b2_x9 = 0bin1 ELSE istrue_a11_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a11)] THEN istrue_a11_b2_x10 = 0bin1 ELSE istrue_a11_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a11)] THEN istrue_a11_b2_x11 = 0bin1 ELSE istrue_a11_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a11)] THEN istrue_a11_b2_x12 = 0bin1 ELSE istrue_a11_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a11)] THEN istrue_a11_b2_x13 = 0bin1 ELSE istrue_a11_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a11)] THEN istrue_a11_b2_x14 = 0bin1 ELSE istrue_a11_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a11)] THEN istrue_a11_b2_x15 = 0bin1 ELSE istrue_a11_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b2 = BVPLUS(5, 0bin0000@istrue_a11_b2_x0, 0bin0000@istrue_a11_b2_x1, 0bin0000@istrue_a11_b2_x2, 0bin0000@istrue_a11_b2_x3, 0bin0000@istrue_a11_b2_x4, 0bin0000@istrue_a11_b2_x5, 0bin0000@istrue_a11_b2_x6, 0bin0000@istrue_a11_b2_x7, 0bin0000@istrue_a11_b2_x8, 0bin0000@istrue_a11_b2_x9, 0bin0000@istrue_a11_b2_x10, 0bin0000@istrue_a11_b2_x11, 0bin0000@istrue_a11_b2_x12, 0bin0000@istrue_a11_b2_x13, 0bin0000@istrue_a11_b2_x14, 0bin0000@istrue_a11_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a11)] THEN istrue_a11_b3_x0 = 0bin1 ELSE istrue_a11_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a11)] THEN istrue_a11_b3_x1 = 0bin1 ELSE istrue_a11_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a11)] THEN istrue_a11_b3_x2 = 0bin1 ELSE istrue_a11_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a11)] THEN istrue_a11_b3_x3 = 0bin1 ELSE istrue_a11_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a11)] THEN istrue_a11_b3_x4 = 0bin1 ELSE istrue_a11_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a11)] THEN istrue_a11_b3_x5 = 0bin1 ELSE istrue_a11_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a11)] THEN istrue_a11_b3_x6 = 0bin1 ELSE istrue_a11_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a11)] THEN istrue_a11_b3_x7 = 0bin1 ELSE istrue_a11_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a11)] THEN istrue_a11_b3_x8 = 0bin1 ELSE istrue_a11_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a11)] THEN istrue_a11_b3_x9 = 0bin1 ELSE istrue_a11_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a11)] THEN istrue_a11_b3_x10 = 0bin1 ELSE istrue_a11_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a11)] THEN istrue_a11_b3_x11 = 0bin1 ELSE istrue_a11_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a11)] THEN istrue_a11_b3_x12 = 0bin1 ELSE istrue_a11_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a11)] THEN istrue_a11_b3_x13 = 0bin1 ELSE istrue_a11_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a11)] THEN istrue_a11_b3_x14 = 0bin1 ELSE istrue_a11_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a11)] THEN istrue_a11_b3_x15 = 0bin1 ELSE istrue_a11_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b3 = BVPLUS(5, 0bin0000@istrue_a11_b3_x0, 0bin0000@istrue_a11_b3_x1, 0bin0000@istrue_a11_b3_x2, 0bin0000@istrue_a11_b3_x3, 0bin0000@istrue_a11_b3_x4, 0bin0000@istrue_a11_b3_x5, 0bin0000@istrue_a11_b3_x6, 0bin0000@istrue_a11_b3_x7, 0bin0000@istrue_a11_b3_x8, 0bin0000@istrue_a11_b3_x9, 0bin0000@istrue_a11_b3_x10, 0bin0000@istrue_a11_b3_x11, 0bin0000@istrue_a11_b3_x12, 0bin0000@istrue_a11_b3_x13, 0bin0000@istrue_a11_b3_x14, 0bin0000@istrue_a11_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a11)] THEN istrue_a11_b4_x0 = 0bin1 ELSE istrue_a11_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a11)] THEN istrue_a11_b4_x1 = 0bin1 ELSE istrue_a11_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a11)] THEN istrue_a11_b4_x2 = 0bin1 ELSE istrue_a11_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a11)] THEN istrue_a11_b4_x3 = 0bin1 ELSE istrue_a11_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a11)] THEN istrue_a11_b4_x4 = 0bin1 ELSE istrue_a11_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a11)] THEN istrue_a11_b4_x5 = 0bin1 ELSE istrue_a11_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a11)] THEN istrue_a11_b4_x6 = 0bin1 ELSE istrue_a11_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a11)] THEN istrue_a11_b4_x7 = 0bin1 ELSE istrue_a11_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a11)] THEN istrue_a11_b4_x8 = 0bin1 ELSE istrue_a11_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a11)] THEN istrue_a11_b4_x9 = 0bin1 ELSE istrue_a11_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a11)] THEN istrue_a11_b4_x10 = 0bin1 ELSE istrue_a11_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a11)] THEN istrue_a11_b4_x11 = 0bin1 ELSE istrue_a11_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a11)] THEN istrue_a11_b4_x12 = 0bin1 ELSE istrue_a11_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a11)] THEN istrue_a11_b4_x13 = 0bin1 ELSE istrue_a11_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a11)] THEN istrue_a11_b4_x14 = 0bin1 ELSE istrue_a11_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a11)] THEN istrue_a11_b4_x15 = 0bin1 ELSE istrue_a11_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b4 = BVPLUS(5, 0bin0000@istrue_a11_b4_x0, 0bin0000@istrue_a11_b4_x1, 0bin0000@istrue_a11_b4_x2, 0bin0000@istrue_a11_b4_x3, 0bin0000@istrue_a11_b4_x4, 0bin0000@istrue_a11_b4_x5, 0bin0000@istrue_a11_b4_x6, 0bin0000@istrue_a11_b4_x7, 0bin0000@istrue_a11_b4_x8, 0bin0000@istrue_a11_b4_x9, 0bin0000@istrue_a11_b4_x10, 0bin0000@istrue_a11_b4_x11, 0bin0000@istrue_a11_b4_x12, 0bin0000@istrue_a11_b4_x13, 0bin0000@istrue_a11_b4_x14, 0bin0000@istrue_a11_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a11)] THEN istrue_a11_b5_x0 = 0bin1 ELSE istrue_a11_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a11)] THEN istrue_a11_b5_x1 = 0bin1 ELSE istrue_a11_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a11)] THEN istrue_a11_b5_x2 = 0bin1 ELSE istrue_a11_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a11)] THEN istrue_a11_b5_x3 = 0bin1 ELSE istrue_a11_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a11)] THEN istrue_a11_b5_x4 = 0bin1 ELSE istrue_a11_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a11)] THEN istrue_a11_b5_x5 = 0bin1 ELSE istrue_a11_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a11)] THEN istrue_a11_b5_x6 = 0bin1 ELSE istrue_a11_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a11)] THEN istrue_a11_b5_x7 = 0bin1 ELSE istrue_a11_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a11)] THEN istrue_a11_b5_x8 = 0bin1 ELSE istrue_a11_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a11)] THEN istrue_a11_b5_x9 = 0bin1 ELSE istrue_a11_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a11)] THEN istrue_a11_b5_x10 = 0bin1 ELSE istrue_a11_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a11)] THEN istrue_a11_b5_x11 = 0bin1 ELSE istrue_a11_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a11)] THEN istrue_a11_b5_x12 = 0bin1 ELSE istrue_a11_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a11)] THEN istrue_a11_b5_x13 = 0bin1 ELSE istrue_a11_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a11)] THEN istrue_a11_b5_x14 = 0bin1 ELSE istrue_a11_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a11)] THEN istrue_a11_b5_x15 = 0bin1 ELSE istrue_a11_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b5 = BVPLUS(5, 0bin0000@istrue_a11_b5_x0, 0bin0000@istrue_a11_b5_x1, 0bin0000@istrue_a11_b5_x2, 0bin0000@istrue_a11_b5_x3, 0bin0000@istrue_a11_b5_x4, 0bin0000@istrue_a11_b5_x5, 0bin0000@istrue_a11_b5_x6, 0bin0000@istrue_a11_b5_x7, 0bin0000@istrue_a11_b5_x8, 0bin0000@istrue_a11_b5_x9, 0bin0000@istrue_a11_b5_x10, 0bin0000@istrue_a11_b5_x11, 0bin0000@istrue_a11_b5_x12, 0bin0000@istrue_a11_b5_x13, 0bin0000@istrue_a11_b5_x14, 0bin0000@istrue_a11_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a11)] THEN istrue_a11_b6_x0 = 0bin1 ELSE istrue_a11_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a11)] THEN istrue_a11_b6_x1 = 0bin1 ELSE istrue_a11_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a11)] THEN istrue_a11_b6_x2 = 0bin1 ELSE istrue_a11_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a11)] THEN istrue_a11_b6_x3 = 0bin1 ELSE istrue_a11_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a11)] THEN istrue_a11_b6_x4 = 0bin1 ELSE istrue_a11_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a11)] THEN istrue_a11_b6_x5 = 0bin1 ELSE istrue_a11_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a11)] THEN istrue_a11_b6_x6 = 0bin1 ELSE istrue_a11_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a11)] THEN istrue_a11_b6_x7 = 0bin1 ELSE istrue_a11_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a11)] THEN istrue_a11_b6_x8 = 0bin1 ELSE istrue_a11_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a11)] THEN istrue_a11_b6_x9 = 0bin1 ELSE istrue_a11_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a11)] THEN istrue_a11_b6_x10 = 0bin1 ELSE istrue_a11_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a11)] THEN istrue_a11_b6_x11 = 0bin1 ELSE istrue_a11_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a11)] THEN istrue_a11_b6_x12 = 0bin1 ELSE istrue_a11_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a11)] THEN istrue_a11_b6_x13 = 0bin1 ELSE istrue_a11_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a11)] THEN istrue_a11_b6_x14 = 0bin1 ELSE istrue_a11_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a11)] THEN istrue_a11_b6_x15 = 0bin1 ELSE istrue_a11_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b6 = BVPLUS(5, 0bin0000@istrue_a11_b6_x0, 0bin0000@istrue_a11_b6_x1, 0bin0000@istrue_a11_b6_x2, 0bin0000@istrue_a11_b6_x3, 0bin0000@istrue_a11_b6_x4, 0bin0000@istrue_a11_b6_x5, 0bin0000@istrue_a11_b6_x6, 0bin0000@istrue_a11_b6_x7, 0bin0000@istrue_a11_b6_x8, 0bin0000@istrue_a11_b6_x9, 0bin0000@istrue_a11_b6_x10, 0bin0000@istrue_a11_b6_x11, 0bin0000@istrue_a11_b6_x12, 0bin0000@istrue_a11_b6_x13, 0bin0000@istrue_a11_b6_x14, 0bin0000@istrue_a11_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a11)] THEN istrue_a11_b7_x0 = 0bin1 ELSE istrue_a11_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a11)] THEN istrue_a11_b7_x1 = 0bin1 ELSE istrue_a11_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a11)] THEN istrue_a11_b7_x2 = 0bin1 ELSE istrue_a11_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a11)] THEN istrue_a11_b7_x3 = 0bin1 ELSE istrue_a11_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a11)] THEN istrue_a11_b7_x4 = 0bin1 ELSE istrue_a11_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a11)] THEN istrue_a11_b7_x5 = 0bin1 ELSE istrue_a11_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a11)] THEN istrue_a11_b7_x6 = 0bin1 ELSE istrue_a11_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a11)] THEN istrue_a11_b7_x7 = 0bin1 ELSE istrue_a11_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a11)] THEN istrue_a11_b7_x8 = 0bin1 ELSE istrue_a11_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a11)] THEN istrue_a11_b7_x9 = 0bin1 ELSE istrue_a11_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a11)] THEN istrue_a11_b7_x10 = 0bin1 ELSE istrue_a11_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a11)] THEN istrue_a11_b7_x11 = 0bin1 ELSE istrue_a11_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a11)] THEN istrue_a11_b7_x12 = 0bin1 ELSE istrue_a11_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a11)] THEN istrue_a11_b7_x13 = 0bin1 ELSE istrue_a11_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a11)] THEN istrue_a11_b7_x14 = 0bin1 ELSE istrue_a11_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a11)] THEN istrue_a11_b7_x15 = 0bin1 ELSE istrue_a11_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b7 = BVPLUS(5, 0bin0000@istrue_a11_b7_x0, 0bin0000@istrue_a11_b7_x1, 0bin0000@istrue_a11_b7_x2, 0bin0000@istrue_a11_b7_x3, 0bin0000@istrue_a11_b7_x4, 0bin0000@istrue_a11_b7_x5, 0bin0000@istrue_a11_b7_x6, 0bin0000@istrue_a11_b7_x7, 0bin0000@istrue_a11_b7_x8, 0bin0000@istrue_a11_b7_x9, 0bin0000@istrue_a11_b7_x10, 0bin0000@istrue_a11_b7_x11, 0bin0000@istrue_a11_b7_x12, 0bin0000@istrue_a11_b7_x13, 0bin0000@istrue_a11_b7_x14, 0bin0000@istrue_a11_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a11)] THEN istrue_a11_b8_x0 = 0bin1 ELSE istrue_a11_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a11)] THEN istrue_a11_b8_x1 = 0bin1 ELSE istrue_a11_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a11)] THEN istrue_a11_b8_x2 = 0bin1 ELSE istrue_a11_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a11)] THEN istrue_a11_b8_x3 = 0bin1 ELSE istrue_a11_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a11)] THEN istrue_a11_b8_x4 = 0bin1 ELSE istrue_a11_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a11)] THEN istrue_a11_b8_x5 = 0bin1 ELSE istrue_a11_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a11)] THEN istrue_a11_b8_x6 = 0bin1 ELSE istrue_a11_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a11)] THEN istrue_a11_b8_x7 = 0bin1 ELSE istrue_a11_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a11)] THEN istrue_a11_b8_x8 = 0bin1 ELSE istrue_a11_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a11)] THEN istrue_a11_b8_x9 = 0bin1 ELSE istrue_a11_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a11)] THEN istrue_a11_b8_x10 = 0bin1 ELSE istrue_a11_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a11)] THEN istrue_a11_b8_x11 = 0bin1 ELSE istrue_a11_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a11)] THEN istrue_a11_b8_x12 = 0bin1 ELSE istrue_a11_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a11)] THEN istrue_a11_b8_x13 = 0bin1 ELSE istrue_a11_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a11)] THEN istrue_a11_b8_x14 = 0bin1 ELSE istrue_a11_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a11)] THEN istrue_a11_b8_x15 = 0bin1 ELSE istrue_a11_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b8 = BVPLUS(5, 0bin0000@istrue_a11_b8_x0, 0bin0000@istrue_a11_b8_x1, 0bin0000@istrue_a11_b8_x2, 0bin0000@istrue_a11_b8_x3, 0bin0000@istrue_a11_b8_x4, 0bin0000@istrue_a11_b8_x5, 0bin0000@istrue_a11_b8_x6, 0bin0000@istrue_a11_b8_x7, 0bin0000@istrue_a11_b8_x8, 0bin0000@istrue_a11_b8_x9, 0bin0000@istrue_a11_b8_x10, 0bin0000@istrue_a11_b8_x11, 0bin0000@istrue_a11_b8_x12, 0bin0000@istrue_a11_b8_x13, 0bin0000@istrue_a11_b8_x14, 0bin0000@istrue_a11_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a11)] THEN istrue_a11_b9_x0 = 0bin1 ELSE istrue_a11_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a11)] THEN istrue_a11_b9_x1 = 0bin1 ELSE istrue_a11_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a11)] THEN istrue_a11_b9_x2 = 0bin1 ELSE istrue_a11_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a11)] THEN istrue_a11_b9_x3 = 0bin1 ELSE istrue_a11_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a11)] THEN istrue_a11_b9_x4 = 0bin1 ELSE istrue_a11_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a11)] THEN istrue_a11_b9_x5 = 0bin1 ELSE istrue_a11_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a11)] THEN istrue_a11_b9_x6 = 0bin1 ELSE istrue_a11_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a11)] THEN istrue_a11_b9_x7 = 0bin1 ELSE istrue_a11_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a11)] THEN istrue_a11_b9_x8 = 0bin1 ELSE istrue_a11_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a11)] THEN istrue_a11_b9_x9 = 0bin1 ELSE istrue_a11_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a11)] THEN istrue_a11_b9_x10 = 0bin1 ELSE istrue_a11_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a11)] THEN istrue_a11_b9_x11 = 0bin1 ELSE istrue_a11_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a11)] THEN istrue_a11_b9_x12 = 0bin1 ELSE istrue_a11_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a11)] THEN istrue_a11_b9_x13 = 0bin1 ELSE istrue_a11_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a11)] THEN istrue_a11_b9_x14 = 0bin1 ELSE istrue_a11_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a11)] THEN istrue_a11_b9_x15 = 0bin1 ELSE istrue_a11_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b9 = BVPLUS(5, 0bin0000@istrue_a11_b9_x0, 0bin0000@istrue_a11_b9_x1, 0bin0000@istrue_a11_b9_x2, 0bin0000@istrue_a11_b9_x3, 0bin0000@istrue_a11_b9_x4, 0bin0000@istrue_a11_b9_x5, 0bin0000@istrue_a11_b9_x6, 0bin0000@istrue_a11_b9_x7, 0bin0000@istrue_a11_b9_x8, 0bin0000@istrue_a11_b9_x9, 0bin0000@istrue_a11_b9_x10, 0bin0000@istrue_a11_b9_x11, 0bin0000@istrue_a11_b9_x12, 0bin0000@istrue_a11_b9_x13, 0bin0000@istrue_a11_b9_x14, 0bin0000@istrue_a11_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a11)] THEN istrue_a11_b10_x0 = 0bin1 ELSE istrue_a11_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a11)] THEN istrue_a11_b10_x1 = 0bin1 ELSE istrue_a11_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a11)] THEN istrue_a11_b10_x2 = 0bin1 ELSE istrue_a11_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a11)] THEN istrue_a11_b10_x3 = 0bin1 ELSE istrue_a11_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a11)] THEN istrue_a11_b10_x4 = 0bin1 ELSE istrue_a11_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a11)] THEN istrue_a11_b10_x5 = 0bin1 ELSE istrue_a11_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a11)] THEN istrue_a11_b10_x6 = 0bin1 ELSE istrue_a11_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a11)] THEN istrue_a11_b10_x7 = 0bin1 ELSE istrue_a11_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a11)] THEN istrue_a11_b10_x8 = 0bin1 ELSE istrue_a11_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a11)] THEN istrue_a11_b10_x9 = 0bin1 ELSE istrue_a11_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a11)] THEN istrue_a11_b10_x10 = 0bin1 ELSE istrue_a11_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a11)] THEN istrue_a11_b10_x11 = 0bin1 ELSE istrue_a11_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a11)] THEN istrue_a11_b10_x12 = 0bin1 ELSE istrue_a11_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a11)] THEN istrue_a11_b10_x13 = 0bin1 ELSE istrue_a11_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a11)] THEN istrue_a11_b10_x14 = 0bin1 ELSE istrue_a11_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a11)] THEN istrue_a11_b10_x15 = 0bin1 ELSE istrue_a11_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b10 = BVPLUS(5, 0bin0000@istrue_a11_b10_x0, 0bin0000@istrue_a11_b10_x1, 0bin0000@istrue_a11_b10_x2, 0bin0000@istrue_a11_b10_x3, 0bin0000@istrue_a11_b10_x4, 0bin0000@istrue_a11_b10_x5, 0bin0000@istrue_a11_b10_x6, 0bin0000@istrue_a11_b10_x7, 0bin0000@istrue_a11_b10_x8, 0bin0000@istrue_a11_b10_x9, 0bin0000@istrue_a11_b10_x10, 0bin0000@istrue_a11_b10_x11, 0bin0000@istrue_a11_b10_x12, 0bin0000@istrue_a11_b10_x13, 0bin0000@istrue_a11_b10_x14, 0bin0000@istrue_a11_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a11)] THEN istrue_a11_b11_x0 = 0bin1 ELSE istrue_a11_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a11)] THEN istrue_a11_b11_x1 = 0bin1 ELSE istrue_a11_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a11)] THEN istrue_a11_b11_x2 = 0bin1 ELSE istrue_a11_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a11)] THEN istrue_a11_b11_x3 = 0bin1 ELSE istrue_a11_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a11)] THEN istrue_a11_b11_x4 = 0bin1 ELSE istrue_a11_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a11)] THEN istrue_a11_b11_x5 = 0bin1 ELSE istrue_a11_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a11)] THEN istrue_a11_b11_x6 = 0bin1 ELSE istrue_a11_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a11)] THEN istrue_a11_b11_x7 = 0bin1 ELSE istrue_a11_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a11)] THEN istrue_a11_b11_x8 = 0bin1 ELSE istrue_a11_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a11)] THEN istrue_a11_b11_x9 = 0bin1 ELSE istrue_a11_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a11)] THEN istrue_a11_b11_x10 = 0bin1 ELSE istrue_a11_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a11)] THEN istrue_a11_b11_x11 = 0bin1 ELSE istrue_a11_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a11)] THEN istrue_a11_b11_x12 = 0bin1 ELSE istrue_a11_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a11)] THEN istrue_a11_b11_x13 = 0bin1 ELSE istrue_a11_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a11)] THEN istrue_a11_b11_x14 = 0bin1 ELSE istrue_a11_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a11)] THEN istrue_a11_b11_x15 = 0bin1 ELSE istrue_a11_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b11 = BVPLUS(5, 0bin0000@istrue_a11_b11_x0, 0bin0000@istrue_a11_b11_x1, 0bin0000@istrue_a11_b11_x2, 0bin0000@istrue_a11_b11_x3, 0bin0000@istrue_a11_b11_x4, 0bin0000@istrue_a11_b11_x5, 0bin0000@istrue_a11_b11_x6, 0bin0000@istrue_a11_b11_x7, 0bin0000@istrue_a11_b11_x8, 0bin0000@istrue_a11_b11_x9, 0bin0000@istrue_a11_b11_x10, 0bin0000@istrue_a11_b11_x11, 0bin0000@istrue_a11_b11_x12, 0bin0000@istrue_a11_b11_x13, 0bin0000@istrue_a11_b11_x14, 0bin0000@istrue_a11_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a11)] THEN istrue_a11_b12_x0 = 0bin1 ELSE istrue_a11_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a11)] THEN istrue_a11_b12_x1 = 0bin1 ELSE istrue_a11_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a11)] THEN istrue_a11_b12_x2 = 0bin1 ELSE istrue_a11_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a11)] THEN istrue_a11_b12_x3 = 0bin1 ELSE istrue_a11_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a11)] THEN istrue_a11_b12_x4 = 0bin1 ELSE istrue_a11_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a11)] THEN istrue_a11_b12_x5 = 0bin1 ELSE istrue_a11_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a11)] THEN istrue_a11_b12_x6 = 0bin1 ELSE istrue_a11_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a11)] THEN istrue_a11_b12_x7 = 0bin1 ELSE istrue_a11_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a11)] THEN istrue_a11_b12_x8 = 0bin1 ELSE istrue_a11_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a11)] THEN istrue_a11_b12_x9 = 0bin1 ELSE istrue_a11_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a11)] THEN istrue_a11_b12_x10 = 0bin1 ELSE istrue_a11_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a11)] THEN istrue_a11_b12_x11 = 0bin1 ELSE istrue_a11_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a11)] THEN istrue_a11_b12_x12 = 0bin1 ELSE istrue_a11_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a11)] THEN istrue_a11_b12_x13 = 0bin1 ELSE istrue_a11_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a11)] THEN istrue_a11_b12_x14 = 0bin1 ELSE istrue_a11_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a11)] THEN istrue_a11_b12_x15 = 0bin1 ELSE istrue_a11_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b12 = BVPLUS(5, 0bin0000@istrue_a11_b12_x0, 0bin0000@istrue_a11_b12_x1, 0bin0000@istrue_a11_b12_x2, 0bin0000@istrue_a11_b12_x3, 0bin0000@istrue_a11_b12_x4, 0bin0000@istrue_a11_b12_x5, 0bin0000@istrue_a11_b12_x6, 0bin0000@istrue_a11_b12_x7, 0bin0000@istrue_a11_b12_x8, 0bin0000@istrue_a11_b12_x9, 0bin0000@istrue_a11_b12_x10, 0bin0000@istrue_a11_b12_x11, 0bin0000@istrue_a11_b12_x12, 0bin0000@istrue_a11_b12_x13, 0bin0000@istrue_a11_b12_x14, 0bin0000@istrue_a11_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a11)] THEN istrue_a11_b13_x0 = 0bin1 ELSE istrue_a11_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a11)] THEN istrue_a11_b13_x1 = 0bin1 ELSE istrue_a11_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a11)] THEN istrue_a11_b13_x2 = 0bin1 ELSE istrue_a11_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a11)] THEN istrue_a11_b13_x3 = 0bin1 ELSE istrue_a11_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a11)] THEN istrue_a11_b13_x4 = 0bin1 ELSE istrue_a11_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a11)] THEN istrue_a11_b13_x5 = 0bin1 ELSE istrue_a11_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a11)] THEN istrue_a11_b13_x6 = 0bin1 ELSE istrue_a11_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a11)] THEN istrue_a11_b13_x7 = 0bin1 ELSE istrue_a11_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a11)] THEN istrue_a11_b13_x8 = 0bin1 ELSE istrue_a11_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a11)] THEN istrue_a11_b13_x9 = 0bin1 ELSE istrue_a11_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a11)] THEN istrue_a11_b13_x10 = 0bin1 ELSE istrue_a11_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a11)] THEN istrue_a11_b13_x11 = 0bin1 ELSE istrue_a11_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a11)] THEN istrue_a11_b13_x12 = 0bin1 ELSE istrue_a11_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a11)] THEN istrue_a11_b13_x13 = 0bin1 ELSE istrue_a11_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a11)] THEN istrue_a11_b13_x14 = 0bin1 ELSE istrue_a11_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a11)] THEN istrue_a11_b13_x15 = 0bin1 ELSE istrue_a11_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b13 = BVPLUS(5, 0bin0000@istrue_a11_b13_x0, 0bin0000@istrue_a11_b13_x1, 0bin0000@istrue_a11_b13_x2, 0bin0000@istrue_a11_b13_x3, 0bin0000@istrue_a11_b13_x4, 0bin0000@istrue_a11_b13_x5, 0bin0000@istrue_a11_b13_x6, 0bin0000@istrue_a11_b13_x7, 0bin0000@istrue_a11_b13_x8, 0bin0000@istrue_a11_b13_x9, 0bin0000@istrue_a11_b13_x10, 0bin0000@istrue_a11_b13_x11, 0bin0000@istrue_a11_b13_x12, 0bin0000@istrue_a11_b13_x13, 0bin0000@istrue_a11_b13_x14, 0bin0000@istrue_a11_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a11)] THEN istrue_a11_b14_x0 = 0bin1 ELSE istrue_a11_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a11)] THEN istrue_a11_b14_x1 = 0bin1 ELSE istrue_a11_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a11)] THEN istrue_a11_b14_x2 = 0bin1 ELSE istrue_a11_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a11)] THEN istrue_a11_b14_x3 = 0bin1 ELSE istrue_a11_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a11)] THEN istrue_a11_b14_x4 = 0bin1 ELSE istrue_a11_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a11)] THEN istrue_a11_b14_x5 = 0bin1 ELSE istrue_a11_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a11)] THEN istrue_a11_b14_x6 = 0bin1 ELSE istrue_a11_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a11)] THEN istrue_a11_b14_x7 = 0bin1 ELSE istrue_a11_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a11)] THEN istrue_a11_b14_x8 = 0bin1 ELSE istrue_a11_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a11)] THEN istrue_a11_b14_x9 = 0bin1 ELSE istrue_a11_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a11)] THEN istrue_a11_b14_x10 = 0bin1 ELSE istrue_a11_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a11)] THEN istrue_a11_b14_x11 = 0bin1 ELSE istrue_a11_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a11)] THEN istrue_a11_b14_x12 = 0bin1 ELSE istrue_a11_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a11)] THEN istrue_a11_b14_x13 = 0bin1 ELSE istrue_a11_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a11)] THEN istrue_a11_b14_x14 = 0bin1 ELSE istrue_a11_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a11)] THEN istrue_a11_b14_x15 = 0bin1 ELSE istrue_a11_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b14 = BVPLUS(5, 0bin0000@istrue_a11_b14_x0, 0bin0000@istrue_a11_b14_x1, 0bin0000@istrue_a11_b14_x2, 0bin0000@istrue_a11_b14_x3, 0bin0000@istrue_a11_b14_x4, 0bin0000@istrue_a11_b14_x5, 0bin0000@istrue_a11_b14_x6, 0bin0000@istrue_a11_b14_x7, 0bin0000@istrue_a11_b14_x8, 0bin0000@istrue_a11_b14_x9, 0bin0000@istrue_a11_b14_x10, 0bin0000@istrue_a11_b14_x11, 0bin0000@istrue_a11_b14_x12, 0bin0000@istrue_a11_b14_x13, 0bin0000@istrue_a11_b14_x14, 0bin0000@istrue_a11_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a11)] THEN istrue_a11_b15_x0 = 0bin1 ELSE istrue_a11_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a11)] THEN istrue_a11_b15_x1 = 0bin1 ELSE istrue_a11_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a11)] THEN istrue_a11_b15_x2 = 0bin1 ELSE istrue_a11_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a11)] THEN istrue_a11_b15_x3 = 0bin1 ELSE istrue_a11_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a11)] THEN istrue_a11_b15_x4 = 0bin1 ELSE istrue_a11_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a11)] THEN istrue_a11_b15_x5 = 0bin1 ELSE istrue_a11_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a11)] THEN istrue_a11_b15_x6 = 0bin1 ELSE istrue_a11_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a11)] THEN istrue_a11_b15_x7 = 0bin1 ELSE istrue_a11_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a11)] THEN istrue_a11_b15_x8 = 0bin1 ELSE istrue_a11_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a11)] THEN istrue_a11_b15_x9 = 0bin1 ELSE istrue_a11_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a11)] THEN istrue_a11_b15_x10 = 0bin1 ELSE istrue_a11_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a11)] THEN istrue_a11_b15_x11 = 0bin1 ELSE istrue_a11_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a11)] THEN istrue_a11_b15_x12 = 0bin1 ELSE istrue_a11_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a11)] THEN istrue_a11_b15_x13 = 0bin1 ELSE istrue_a11_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a11)] THEN istrue_a11_b15_x14 = 0bin1 ELSE istrue_a11_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a11)] THEN istrue_a11_b15_x15 = 0bin1 ELSE istrue_a11_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a11_b15 = BVPLUS(5, 0bin0000@istrue_a11_b15_x0, 0bin0000@istrue_a11_b15_x1, 0bin0000@istrue_a11_b15_x2, 0bin0000@istrue_a11_b15_x3, 0bin0000@istrue_a11_b15_x4, 0bin0000@istrue_a11_b15_x5, 0bin0000@istrue_a11_b15_x6, 0bin0000@istrue_a11_b15_x7, 0bin0000@istrue_a11_b15_x8, 0bin0000@istrue_a11_b15_x9, 0bin0000@istrue_a11_b15_x10, 0bin0000@istrue_a11_b15_x11, 0bin0000@istrue_a11_b15_x12, 0bin0000@istrue_a11_b15_x13, 0bin0000@istrue_a11_b15_x14, 0bin0000@istrue_a11_b15_x15));
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a12)] THEN istrue_a12_b0_x0 = 0bin1 ELSE istrue_a12_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a12)] THEN istrue_a12_b0_x1 = 0bin1 ELSE istrue_a12_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a12)] THEN istrue_a12_b0_x2 = 0bin1 ELSE istrue_a12_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a12)] THEN istrue_a12_b0_x3 = 0bin1 ELSE istrue_a12_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a12)] THEN istrue_a12_b0_x4 = 0bin1 ELSE istrue_a12_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a12)] THEN istrue_a12_b0_x5 = 0bin1 ELSE istrue_a12_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a12)] THEN istrue_a12_b0_x6 = 0bin1 ELSE istrue_a12_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a12)] THEN istrue_a12_b0_x7 = 0bin1 ELSE istrue_a12_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a12)] THEN istrue_a12_b0_x8 = 0bin1 ELSE istrue_a12_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a12)] THEN istrue_a12_b0_x9 = 0bin1 ELSE istrue_a12_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a12)] THEN istrue_a12_b0_x10 = 0bin1 ELSE istrue_a12_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a12)] THEN istrue_a12_b0_x11 = 0bin1 ELSE istrue_a12_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a12)] THEN istrue_a12_b0_x12 = 0bin1 ELSE istrue_a12_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a12)] THEN istrue_a12_b0_x13 = 0bin1 ELSE istrue_a12_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a12)] THEN istrue_a12_b0_x14 = 0bin1 ELSE istrue_a12_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a12)] THEN istrue_a12_b0_x15 = 0bin1 ELSE istrue_a12_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b0 = BVPLUS(5, 0bin0000@istrue_a12_b0_x0, 0bin0000@istrue_a12_b0_x1, 0bin0000@istrue_a12_b0_x2, 0bin0000@istrue_a12_b0_x3, 0bin0000@istrue_a12_b0_x4, 0bin0000@istrue_a12_b0_x5, 0bin0000@istrue_a12_b0_x6, 0bin0000@istrue_a12_b0_x7, 0bin0000@istrue_a12_b0_x8, 0bin0000@istrue_a12_b0_x9, 0bin0000@istrue_a12_b0_x10, 0bin0000@istrue_a12_b0_x11, 0bin0000@istrue_a12_b0_x12, 0bin0000@istrue_a12_b0_x13, 0bin0000@istrue_a12_b0_x14, 0bin0000@istrue_a12_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a12)] THEN istrue_a12_b1_x0 = 0bin1 ELSE istrue_a12_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a12)] THEN istrue_a12_b1_x1 = 0bin1 ELSE istrue_a12_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a12)] THEN istrue_a12_b1_x2 = 0bin1 ELSE istrue_a12_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a12)] THEN istrue_a12_b1_x3 = 0bin1 ELSE istrue_a12_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a12)] THEN istrue_a12_b1_x4 = 0bin1 ELSE istrue_a12_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a12)] THEN istrue_a12_b1_x5 = 0bin1 ELSE istrue_a12_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a12)] THEN istrue_a12_b1_x6 = 0bin1 ELSE istrue_a12_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a12)] THEN istrue_a12_b1_x7 = 0bin1 ELSE istrue_a12_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a12)] THEN istrue_a12_b1_x8 = 0bin1 ELSE istrue_a12_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a12)] THEN istrue_a12_b1_x9 = 0bin1 ELSE istrue_a12_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a12)] THEN istrue_a12_b1_x10 = 0bin1 ELSE istrue_a12_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a12)] THEN istrue_a12_b1_x11 = 0bin1 ELSE istrue_a12_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a12)] THEN istrue_a12_b1_x12 = 0bin1 ELSE istrue_a12_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a12)] THEN istrue_a12_b1_x13 = 0bin1 ELSE istrue_a12_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a12)] THEN istrue_a12_b1_x14 = 0bin1 ELSE istrue_a12_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a12)] THEN istrue_a12_b1_x15 = 0bin1 ELSE istrue_a12_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b1 = BVPLUS(5, 0bin0000@istrue_a12_b1_x0, 0bin0000@istrue_a12_b1_x1, 0bin0000@istrue_a12_b1_x2, 0bin0000@istrue_a12_b1_x3, 0bin0000@istrue_a12_b1_x4, 0bin0000@istrue_a12_b1_x5, 0bin0000@istrue_a12_b1_x6, 0bin0000@istrue_a12_b1_x7, 0bin0000@istrue_a12_b1_x8, 0bin0000@istrue_a12_b1_x9, 0bin0000@istrue_a12_b1_x10, 0bin0000@istrue_a12_b1_x11, 0bin0000@istrue_a12_b1_x12, 0bin0000@istrue_a12_b1_x13, 0bin0000@istrue_a12_b1_x14, 0bin0000@istrue_a12_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a12)] THEN istrue_a12_b2_x0 = 0bin1 ELSE istrue_a12_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a12)] THEN istrue_a12_b2_x1 = 0bin1 ELSE istrue_a12_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a12)] THEN istrue_a12_b2_x2 = 0bin1 ELSE istrue_a12_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a12)] THEN istrue_a12_b2_x3 = 0bin1 ELSE istrue_a12_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a12)] THEN istrue_a12_b2_x4 = 0bin1 ELSE istrue_a12_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a12)] THEN istrue_a12_b2_x5 = 0bin1 ELSE istrue_a12_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a12)] THEN istrue_a12_b2_x6 = 0bin1 ELSE istrue_a12_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a12)] THEN istrue_a12_b2_x7 = 0bin1 ELSE istrue_a12_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a12)] THEN istrue_a12_b2_x8 = 0bin1 ELSE istrue_a12_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a12)] THEN istrue_a12_b2_x9 = 0bin1 ELSE istrue_a12_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a12)] THEN istrue_a12_b2_x10 = 0bin1 ELSE istrue_a12_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a12)] THEN istrue_a12_b2_x11 = 0bin1 ELSE istrue_a12_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a12)] THEN istrue_a12_b2_x12 = 0bin1 ELSE istrue_a12_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a12)] THEN istrue_a12_b2_x13 = 0bin1 ELSE istrue_a12_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a12)] THEN istrue_a12_b2_x14 = 0bin1 ELSE istrue_a12_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a12)] THEN istrue_a12_b2_x15 = 0bin1 ELSE istrue_a12_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b2 = BVPLUS(5, 0bin0000@istrue_a12_b2_x0, 0bin0000@istrue_a12_b2_x1, 0bin0000@istrue_a12_b2_x2, 0bin0000@istrue_a12_b2_x3, 0bin0000@istrue_a12_b2_x4, 0bin0000@istrue_a12_b2_x5, 0bin0000@istrue_a12_b2_x6, 0bin0000@istrue_a12_b2_x7, 0bin0000@istrue_a12_b2_x8, 0bin0000@istrue_a12_b2_x9, 0bin0000@istrue_a12_b2_x10, 0bin0000@istrue_a12_b2_x11, 0bin0000@istrue_a12_b2_x12, 0bin0000@istrue_a12_b2_x13, 0bin0000@istrue_a12_b2_x14, 0bin0000@istrue_a12_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a12)] THEN istrue_a12_b3_x0 = 0bin1 ELSE istrue_a12_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a12)] THEN istrue_a12_b3_x1 = 0bin1 ELSE istrue_a12_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a12)] THEN istrue_a12_b3_x2 = 0bin1 ELSE istrue_a12_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a12)] THEN istrue_a12_b3_x3 = 0bin1 ELSE istrue_a12_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a12)] THEN istrue_a12_b3_x4 = 0bin1 ELSE istrue_a12_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a12)] THEN istrue_a12_b3_x5 = 0bin1 ELSE istrue_a12_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a12)] THEN istrue_a12_b3_x6 = 0bin1 ELSE istrue_a12_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a12)] THEN istrue_a12_b3_x7 = 0bin1 ELSE istrue_a12_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a12)] THEN istrue_a12_b3_x8 = 0bin1 ELSE istrue_a12_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a12)] THEN istrue_a12_b3_x9 = 0bin1 ELSE istrue_a12_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a12)] THEN istrue_a12_b3_x10 = 0bin1 ELSE istrue_a12_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a12)] THEN istrue_a12_b3_x11 = 0bin1 ELSE istrue_a12_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a12)] THEN istrue_a12_b3_x12 = 0bin1 ELSE istrue_a12_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a12)] THEN istrue_a12_b3_x13 = 0bin1 ELSE istrue_a12_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a12)] THEN istrue_a12_b3_x14 = 0bin1 ELSE istrue_a12_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a12)] THEN istrue_a12_b3_x15 = 0bin1 ELSE istrue_a12_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b3 = BVPLUS(5, 0bin0000@istrue_a12_b3_x0, 0bin0000@istrue_a12_b3_x1, 0bin0000@istrue_a12_b3_x2, 0bin0000@istrue_a12_b3_x3, 0bin0000@istrue_a12_b3_x4, 0bin0000@istrue_a12_b3_x5, 0bin0000@istrue_a12_b3_x6, 0bin0000@istrue_a12_b3_x7, 0bin0000@istrue_a12_b3_x8, 0bin0000@istrue_a12_b3_x9, 0bin0000@istrue_a12_b3_x10, 0bin0000@istrue_a12_b3_x11, 0bin0000@istrue_a12_b3_x12, 0bin0000@istrue_a12_b3_x13, 0bin0000@istrue_a12_b3_x14, 0bin0000@istrue_a12_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a12)] THEN istrue_a12_b4_x0 = 0bin1 ELSE istrue_a12_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a12)] THEN istrue_a12_b4_x1 = 0bin1 ELSE istrue_a12_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a12)] THEN istrue_a12_b4_x2 = 0bin1 ELSE istrue_a12_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a12)] THEN istrue_a12_b4_x3 = 0bin1 ELSE istrue_a12_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a12)] THEN istrue_a12_b4_x4 = 0bin1 ELSE istrue_a12_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a12)] THEN istrue_a12_b4_x5 = 0bin1 ELSE istrue_a12_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a12)] THEN istrue_a12_b4_x6 = 0bin1 ELSE istrue_a12_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a12)] THEN istrue_a12_b4_x7 = 0bin1 ELSE istrue_a12_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a12)] THEN istrue_a12_b4_x8 = 0bin1 ELSE istrue_a12_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a12)] THEN istrue_a12_b4_x9 = 0bin1 ELSE istrue_a12_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a12)] THEN istrue_a12_b4_x10 = 0bin1 ELSE istrue_a12_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a12)] THEN istrue_a12_b4_x11 = 0bin1 ELSE istrue_a12_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a12)] THEN istrue_a12_b4_x12 = 0bin1 ELSE istrue_a12_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a12)] THEN istrue_a12_b4_x13 = 0bin1 ELSE istrue_a12_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a12)] THEN istrue_a12_b4_x14 = 0bin1 ELSE istrue_a12_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a12)] THEN istrue_a12_b4_x15 = 0bin1 ELSE istrue_a12_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b4 = BVPLUS(5, 0bin0000@istrue_a12_b4_x0, 0bin0000@istrue_a12_b4_x1, 0bin0000@istrue_a12_b4_x2, 0bin0000@istrue_a12_b4_x3, 0bin0000@istrue_a12_b4_x4, 0bin0000@istrue_a12_b4_x5, 0bin0000@istrue_a12_b4_x6, 0bin0000@istrue_a12_b4_x7, 0bin0000@istrue_a12_b4_x8, 0bin0000@istrue_a12_b4_x9, 0bin0000@istrue_a12_b4_x10, 0bin0000@istrue_a12_b4_x11, 0bin0000@istrue_a12_b4_x12, 0bin0000@istrue_a12_b4_x13, 0bin0000@istrue_a12_b4_x14, 0bin0000@istrue_a12_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a12)] THEN istrue_a12_b5_x0 = 0bin1 ELSE istrue_a12_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a12)] THEN istrue_a12_b5_x1 = 0bin1 ELSE istrue_a12_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a12)] THEN istrue_a12_b5_x2 = 0bin1 ELSE istrue_a12_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a12)] THEN istrue_a12_b5_x3 = 0bin1 ELSE istrue_a12_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a12)] THEN istrue_a12_b5_x4 = 0bin1 ELSE istrue_a12_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a12)] THEN istrue_a12_b5_x5 = 0bin1 ELSE istrue_a12_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a12)] THEN istrue_a12_b5_x6 = 0bin1 ELSE istrue_a12_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a12)] THEN istrue_a12_b5_x7 = 0bin1 ELSE istrue_a12_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a12)] THEN istrue_a12_b5_x8 = 0bin1 ELSE istrue_a12_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a12)] THEN istrue_a12_b5_x9 = 0bin1 ELSE istrue_a12_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a12)] THEN istrue_a12_b5_x10 = 0bin1 ELSE istrue_a12_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a12)] THEN istrue_a12_b5_x11 = 0bin1 ELSE istrue_a12_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a12)] THEN istrue_a12_b5_x12 = 0bin1 ELSE istrue_a12_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a12)] THEN istrue_a12_b5_x13 = 0bin1 ELSE istrue_a12_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a12)] THEN istrue_a12_b5_x14 = 0bin1 ELSE istrue_a12_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a12)] THEN istrue_a12_b5_x15 = 0bin1 ELSE istrue_a12_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b5 = BVPLUS(5, 0bin0000@istrue_a12_b5_x0, 0bin0000@istrue_a12_b5_x1, 0bin0000@istrue_a12_b5_x2, 0bin0000@istrue_a12_b5_x3, 0bin0000@istrue_a12_b5_x4, 0bin0000@istrue_a12_b5_x5, 0bin0000@istrue_a12_b5_x6, 0bin0000@istrue_a12_b5_x7, 0bin0000@istrue_a12_b5_x8, 0bin0000@istrue_a12_b5_x9, 0bin0000@istrue_a12_b5_x10, 0bin0000@istrue_a12_b5_x11, 0bin0000@istrue_a12_b5_x12, 0bin0000@istrue_a12_b5_x13, 0bin0000@istrue_a12_b5_x14, 0bin0000@istrue_a12_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a12)] THEN istrue_a12_b6_x0 = 0bin1 ELSE istrue_a12_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a12)] THEN istrue_a12_b6_x1 = 0bin1 ELSE istrue_a12_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a12)] THEN istrue_a12_b6_x2 = 0bin1 ELSE istrue_a12_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a12)] THEN istrue_a12_b6_x3 = 0bin1 ELSE istrue_a12_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a12)] THEN istrue_a12_b6_x4 = 0bin1 ELSE istrue_a12_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a12)] THEN istrue_a12_b6_x5 = 0bin1 ELSE istrue_a12_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a12)] THEN istrue_a12_b6_x6 = 0bin1 ELSE istrue_a12_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a12)] THEN istrue_a12_b6_x7 = 0bin1 ELSE istrue_a12_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a12)] THEN istrue_a12_b6_x8 = 0bin1 ELSE istrue_a12_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a12)] THEN istrue_a12_b6_x9 = 0bin1 ELSE istrue_a12_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a12)] THEN istrue_a12_b6_x10 = 0bin1 ELSE istrue_a12_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a12)] THEN istrue_a12_b6_x11 = 0bin1 ELSE istrue_a12_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a12)] THEN istrue_a12_b6_x12 = 0bin1 ELSE istrue_a12_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a12)] THEN istrue_a12_b6_x13 = 0bin1 ELSE istrue_a12_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a12)] THEN istrue_a12_b6_x14 = 0bin1 ELSE istrue_a12_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a12)] THEN istrue_a12_b6_x15 = 0bin1 ELSE istrue_a12_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b6 = BVPLUS(5, 0bin0000@istrue_a12_b6_x0, 0bin0000@istrue_a12_b6_x1, 0bin0000@istrue_a12_b6_x2, 0bin0000@istrue_a12_b6_x3, 0bin0000@istrue_a12_b6_x4, 0bin0000@istrue_a12_b6_x5, 0bin0000@istrue_a12_b6_x6, 0bin0000@istrue_a12_b6_x7, 0bin0000@istrue_a12_b6_x8, 0bin0000@istrue_a12_b6_x9, 0bin0000@istrue_a12_b6_x10, 0bin0000@istrue_a12_b6_x11, 0bin0000@istrue_a12_b6_x12, 0bin0000@istrue_a12_b6_x13, 0bin0000@istrue_a12_b6_x14, 0bin0000@istrue_a12_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a12)] THEN istrue_a12_b7_x0 = 0bin1 ELSE istrue_a12_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a12)] THEN istrue_a12_b7_x1 = 0bin1 ELSE istrue_a12_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a12)] THEN istrue_a12_b7_x2 = 0bin1 ELSE istrue_a12_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a12)] THEN istrue_a12_b7_x3 = 0bin1 ELSE istrue_a12_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a12)] THEN istrue_a12_b7_x4 = 0bin1 ELSE istrue_a12_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a12)] THEN istrue_a12_b7_x5 = 0bin1 ELSE istrue_a12_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a12)] THEN istrue_a12_b7_x6 = 0bin1 ELSE istrue_a12_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a12)] THEN istrue_a12_b7_x7 = 0bin1 ELSE istrue_a12_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a12)] THEN istrue_a12_b7_x8 = 0bin1 ELSE istrue_a12_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a12)] THEN istrue_a12_b7_x9 = 0bin1 ELSE istrue_a12_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a12)] THEN istrue_a12_b7_x10 = 0bin1 ELSE istrue_a12_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a12)] THEN istrue_a12_b7_x11 = 0bin1 ELSE istrue_a12_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a12)] THEN istrue_a12_b7_x12 = 0bin1 ELSE istrue_a12_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a12)] THEN istrue_a12_b7_x13 = 0bin1 ELSE istrue_a12_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a12)] THEN istrue_a12_b7_x14 = 0bin1 ELSE istrue_a12_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a12)] THEN istrue_a12_b7_x15 = 0bin1 ELSE istrue_a12_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b7 = BVPLUS(5, 0bin0000@istrue_a12_b7_x0, 0bin0000@istrue_a12_b7_x1, 0bin0000@istrue_a12_b7_x2, 0bin0000@istrue_a12_b7_x3, 0bin0000@istrue_a12_b7_x4, 0bin0000@istrue_a12_b7_x5, 0bin0000@istrue_a12_b7_x6, 0bin0000@istrue_a12_b7_x7, 0bin0000@istrue_a12_b7_x8, 0bin0000@istrue_a12_b7_x9, 0bin0000@istrue_a12_b7_x10, 0bin0000@istrue_a12_b7_x11, 0bin0000@istrue_a12_b7_x12, 0bin0000@istrue_a12_b7_x13, 0bin0000@istrue_a12_b7_x14, 0bin0000@istrue_a12_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a12)] THEN istrue_a12_b8_x0 = 0bin1 ELSE istrue_a12_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a12)] THEN istrue_a12_b8_x1 = 0bin1 ELSE istrue_a12_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a12)] THEN istrue_a12_b8_x2 = 0bin1 ELSE istrue_a12_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a12)] THEN istrue_a12_b8_x3 = 0bin1 ELSE istrue_a12_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a12)] THEN istrue_a12_b8_x4 = 0bin1 ELSE istrue_a12_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a12)] THEN istrue_a12_b8_x5 = 0bin1 ELSE istrue_a12_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a12)] THEN istrue_a12_b8_x6 = 0bin1 ELSE istrue_a12_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a12)] THEN istrue_a12_b8_x7 = 0bin1 ELSE istrue_a12_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a12)] THEN istrue_a12_b8_x8 = 0bin1 ELSE istrue_a12_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a12)] THEN istrue_a12_b8_x9 = 0bin1 ELSE istrue_a12_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a12)] THEN istrue_a12_b8_x10 = 0bin1 ELSE istrue_a12_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a12)] THEN istrue_a12_b8_x11 = 0bin1 ELSE istrue_a12_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a12)] THEN istrue_a12_b8_x12 = 0bin1 ELSE istrue_a12_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a12)] THEN istrue_a12_b8_x13 = 0bin1 ELSE istrue_a12_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a12)] THEN istrue_a12_b8_x14 = 0bin1 ELSE istrue_a12_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a12)] THEN istrue_a12_b8_x15 = 0bin1 ELSE istrue_a12_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b8 = BVPLUS(5, 0bin0000@istrue_a12_b8_x0, 0bin0000@istrue_a12_b8_x1, 0bin0000@istrue_a12_b8_x2, 0bin0000@istrue_a12_b8_x3, 0bin0000@istrue_a12_b8_x4, 0bin0000@istrue_a12_b8_x5, 0bin0000@istrue_a12_b8_x6, 0bin0000@istrue_a12_b8_x7, 0bin0000@istrue_a12_b8_x8, 0bin0000@istrue_a12_b8_x9, 0bin0000@istrue_a12_b8_x10, 0bin0000@istrue_a12_b8_x11, 0bin0000@istrue_a12_b8_x12, 0bin0000@istrue_a12_b8_x13, 0bin0000@istrue_a12_b8_x14, 0bin0000@istrue_a12_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a12)] THEN istrue_a12_b9_x0 = 0bin1 ELSE istrue_a12_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a12)] THEN istrue_a12_b9_x1 = 0bin1 ELSE istrue_a12_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a12)] THEN istrue_a12_b9_x2 = 0bin1 ELSE istrue_a12_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a12)] THEN istrue_a12_b9_x3 = 0bin1 ELSE istrue_a12_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a12)] THEN istrue_a12_b9_x4 = 0bin1 ELSE istrue_a12_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a12)] THEN istrue_a12_b9_x5 = 0bin1 ELSE istrue_a12_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a12)] THEN istrue_a12_b9_x6 = 0bin1 ELSE istrue_a12_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a12)] THEN istrue_a12_b9_x7 = 0bin1 ELSE istrue_a12_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a12)] THEN istrue_a12_b9_x8 = 0bin1 ELSE istrue_a12_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a12)] THEN istrue_a12_b9_x9 = 0bin1 ELSE istrue_a12_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a12)] THEN istrue_a12_b9_x10 = 0bin1 ELSE istrue_a12_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a12)] THEN istrue_a12_b9_x11 = 0bin1 ELSE istrue_a12_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a12)] THEN istrue_a12_b9_x12 = 0bin1 ELSE istrue_a12_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a12)] THEN istrue_a12_b9_x13 = 0bin1 ELSE istrue_a12_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a12)] THEN istrue_a12_b9_x14 = 0bin1 ELSE istrue_a12_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a12)] THEN istrue_a12_b9_x15 = 0bin1 ELSE istrue_a12_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b9 = BVPLUS(5, 0bin0000@istrue_a12_b9_x0, 0bin0000@istrue_a12_b9_x1, 0bin0000@istrue_a12_b9_x2, 0bin0000@istrue_a12_b9_x3, 0bin0000@istrue_a12_b9_x4, 0bin0000@istrue_a12_b9_x5, 0bin0000@istrue_a12_b9_x6, 0bin0000@istrue_a12_b9_x7, 0bin0000@istrue_a12_b9_x8, 0bin0000@istrue_a12_b9_x9, 0bin0000@istrue_a12_b9_x10, 0bin0000@istrue_a12_b9_x11, 0bin0000@istrue_a12_b9_x12, 0bin0000@istrue_a12_b9_x13, 0bin0000@istrue_a12_b9_x14, 0bin0000@istrue_a12_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a12)] THEN istrue_a12_b10_x0 = 0bin1 ELSE istrue_a12_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a12)] THEN istrue_a12_b10_x1 = 0bin1 ELSE istrue_a12_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a12)] THEN istrue_a12_b10_x2 = 0bin1 ELSE istrue_a12_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a12)] THEN istrue_a12_b10_x3 = 0bin1 ELSE istrue_a12_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a12)] THEN istrue_a12_b10_x4 = 0bin1 ELSE istrue_a12_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a12)] THEN istrue_a12_b10_x5 = 0bin1 ELSE istrue_a12_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a12)] THEN istrue_a12_b10_x6 = 0bin1 ELSE istrue_a12_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a12)] THEN istrue_a12_b10_x7 = 0bin1 ELSE istrue_a12_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a12)] THEN istrue_a12_b10_x8 = 0bin1 ELSE istrue_a12_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a12)] THEN istrue_a12_b10_x9 = 0bin1 ELSE istrue_a12_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a12)] THEN istrue_a12_b10_x10 = 0bin1 ELSE istrue_a12_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a12)] THEN istrue_a12_b10_x11 = 0bin1 ELSE istrue_a12_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a12)] THEN istrue_a12_b10_x12 = 0bin1 ELSE istrue_a12_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a12)] THEN istrue_a12_b10_x13 = 0bin1 ELSE istrue_a12_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a12)] THEN istrue_a12_b10_x14 = 0bin1 ELSE istrue_a12_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a12)] THEN istrue_a12_b10_x15 = 0bin1 ELSE istrue_a12_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b10 = BVPLUS(5, 0bin0000@istrue_a12_b10_x0, 0bin0000@istrue_a12_b10_x1, 0bin0000@istrue_a12_b10_x2, 0bin0000@istrue_a12_b10_x3, 0bin0000@istrue_a12_b10_x4, 0bin0000@istrue_a12_b10_x5, 0bin0000@istrue_a12_b10_x6, 0bin0000@istrue_a12_b10_x7, 0bin0000@istrue_a12_b10_x8, 0bin0000@istrue_a12_b10_x9, 0bin0000@istrue_a12_b10_x10, 0bin0000@istrue_a12_b10_x11, 0bin0000@istrue_a12_b10_x12, 0bin0000@istrue_a12_b10_x13, 0bin0000@istrue_a12_b10_x14, 0bin0000@istrue_a12_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a12)] THEN istrue_a12_b11_x0 = 0bin1 ELSE istrue_a12_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a12)] THEN istrue_a12_b11_x1 = 0bin1 ELSE istrue_a12_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a12)] THEN istrue_a12_b11_x2 = 0bin1 ELSE istrue_a12_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a12)] THEN istrue_a12_b11_x3 = 0bin1 ELSE istrue_a12_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a12)] THEN istrue_a12_b11_x4 = 0bin1 ELSE istrue_a12_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a12)] THEN istrue_a12_b11_x5 = 0bin1 ELSE istrue_a12_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a12)] THEN istrue_a12_b11_x6 = 0bin1 ELSE istrue_a12_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a12)] THEN istrue_a12_b11_x7 = 0bin1 ELSE istrue_a12_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a12)] THEN istrue_a12_b11_x8 = 0bin1 ELSE istrue_a12_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a12)] THEN istrue_a12_b11_x9 = 0bin1 ELSE istrue_a12_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a12)] THEN istrue_a12_b11_x10 = 0bin1 ELSE istrue_a12_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a12)] THEN istrue_a12_b11_x11 = 0bin1 ELSE istrue_a12_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a12)] THEN istrue_a12_b11_x12 = 0bin1 ELSE istrue_a12_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a12)] THEN istrue_a12_b11_x13 = 0bin1 ELSE istrue_a12_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a12)] THEN istrue_a12_b11_x14 = 0bin1 ELSE istrue_a12_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a12)] THEN istrue_a12_b11_x15 = 0bin1 ELSE istrue_a12_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b11 = BVPLUS(5, 0bin0000@istrue_a12_b11_x0, 0bin0000@istrue_a12_b11_x1, 0bin0000@istrue_a12_b11_x2, 0bin0000@istrue_a12_b11_x3, 0bin0000@istrue_a12_b11_x4, 0bin0000@istrue_a12_b11_x5, 0bin0000@istrue_a12_b11_x6, 0bin0000@istrue_a12_b11_x7, 0bin0000@istrue_a12_b11_x8, 0bin0000@istrue_a12_b11_x9, 0bin0000@istrue_a12_b11_x10, 0bin0000@istrue_a12_b11_x11, 0bin0000@istrue_a12_b11_x12, 0bin0000@istrue_a12_b11_x13, 0bin0000@istrue_a12_b11_x14, 0bin0000@istrue_a12_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a12)] THEN istrue_a12_b12_x0 = 0bin1 ELSE istrue_a12_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a12)] THEN istrue_a12_b12_x1 = 0bin1 ELSE istrue_a12_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a12)] THEN istrue_a12_b12_x2 = 0bin1 ELSE istrue_a12_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a12)] THEN istrue_a12_b12_x3 = 0bin1 ELSE istrue_a12_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a12)] THEN istrue_a12_b12_x4 = 0bin1 ELSE istrue_a12_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a12)] THEN istrue_a12_b12_x5 = 0bin1 ELSE istrue_a12_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a12)] THEN istrue_a12_b12_x6 = 0bin1 ELSE istrue_a12_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a12)] THEN istrue_a12_b12_x7 = 0bin1 ELSE istrue_a12_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a12)] THEN istrue_a12_b12_x8 = 0bin1 ELSE istrue_a12_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a12)] THEN istrue_a12_b12_x9 = 0bin1 ELSE istrue_a12_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a12)] THEN istrue_a12_b12_x10 = 0bin1 ELSE istrue_a12_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a12)] THEN istrue_a12_b12_x11 = 0bin1 ELSE istrue_a12_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a12)] THEN istrue_a12_b12_x12 = 0bin1 ELSE istrue_a12_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a12)] THEN istrue_a12_b12_x13 = 0bin1 ELSE istrue_a12_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a12)] THEN istrue_a12_b12_x14 = 0bin1 ELSE istrue_a12_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a12)] THEN istrue_a12_b12_x15 = 0bin1 ELSE istrue_a12_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b12 = BVPLUS(5, 0bin0000@istrue_a12_b12_x0, 0bin0000@istrue_a12_b12_x1, 0bin0000@istrue_a12_b12_x2, 0bin0000@istrue_a12_b12_x3, 0bin0000@istrue_a12_b12_x4, 0bin0000@istrue_a12_b12_x5, 0bin0000@istrue_a12_b12_x6, 0bin0000@istrue_a12_b12_x7, 0bin0000@istrue_a12_b12_x8, 0bin0000@istrue_a12_b12_x9, 0bin0000@istrue_a12_b12_x10, 0bin0000@istrue_a12_b12_x11, 0bin0000@istrue_a12_b12_x12, 0bin0000@istrue_a12_b12_x13, 0bin0000@istrue_a12_b12_x14, 0bin0000@istrue_a12_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a12)] THEN istrue_a12_b13_x0 = 0bin1 ELSE istrue_a12_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a12)] THEN istrue_a12_b13_x1 = 0bin1 ELSE istrue_a12_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a12)] THEN istrue_a12_b13_x2 = 0bin1 ELSE istrue_a12_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a12)] THEN istrue_a12_b13_x3 = 0bin1 ELSE istrue_a12_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a12)] THEN istrue_a12_b13_x4 = 0bin1 ELSE istrue_a12_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a12)] THEN istrue_a12_b13_x5 = 0bin1 ELSE istrue_a12_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a12)] THEN istrue_a12_b13_x6 = 0bin1 ELSE istrue_a12_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a12)] THEN istrue_a12_b13_x7 = 0bin1 ELSE istrue_a12_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a12)] THEN istrue_a12_b13_x8 = 0bin1 ELSE istrue_a12_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a12)] THEN istrue_a12_b13_x9 = 0bin1 ELSE istrue_a12_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a12)] THEN istrue_a12_b13_x10 = 0bin1 ELSE istrue_a12_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a12)] THEN istrue_a12_b13_x11 = 0bin1 ELSE istrue_a12_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a12)] THEN istrue_a12_b13_x12 = 0bin1 ELSE istrue_a12_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a12)] THEN istrue_a12_b13_x13 = 0bin1 ELSE istrue_a12_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a12)] THEN istrue_a12_b13_x14 = 0bin1 ELSE istrue_a12_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a12)] THEN istrue_a12_b13_x15 = 0bin1 ELSE istrue_a12_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b13 = BVPLUS(5, 0bin0000@istrue_a12_b13_x0, 0bin0000@istrue_a12_b13_x1, 0bin0000@istrue_a12_b13_x2, 0bin0000@istrue_a12_b13_x3, 0bin0000@istrue_a12_b13_x4, 0bin0000@istrue_a12_b13_x5, 0bin0000@istrue_a12_b13_x6, 0bin0000@istrue_a12_b13_x7, 0bin0000@istrue_a12_b13_x8, 0bin0000@istrue_a12_b13_x9, 0bin0000@istrue_a12_b13_x10, 0bin0000@istrue_a12_b13_x11, 0bin0000@istrue_a12_b13_x12, 0bin0000@istrue_a12_b13_x13, 0bin0000@istrue_a12_b13_x14, 0bin0000@istrue_a12_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a12)] THEN istrue_a12_b14_x0 = 0bin1 ELSE istrue_a12_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a12)] THEN istrue_a12_b14_x1 = 0bin1 ELSE istrue_a12_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a12)] THEN istrue_a12_b14_x2 = 0bin1 ELSE istrue_a12_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a12)] THEN istrue_a12_b14_x3 = 0bin1 ELSE istrue_a12_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a12)] THEN istrue_a12_b14_x4 = 0bin1 ELSE istrue_a12_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a12)] THEN istrue_a12_b14_x5 = 0bin1 ELSE istrue_a12_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a12)] THEN istrue_a12_b14_x6 = 0bin1 ELSE istrue_a12_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a12)] THEN istrue_a12_b14_x7 = 0bin1 ELSE istrue_a12_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a12)] THEN istrue_a12_b14_x8 = 0bin1 ELSE istrue_a12_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a12)] THEN istrue_a12_b14_x9 = 0bin1 ELSE istrue_a12_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a12)] THEN istrue_a12_b14_x10 = 0bin1 ELSE istrue_a12_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a12)] THEN istrue_a12_b14_x11 = 0bin1 ELSE istrue_a12_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a12)] THEN istrue_a12_b14_x12 = 0bin1 ELSE istrue_a12_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a12)] THEN istrue_a12_b14_x13 = 0bin1 ELSE istrue_a12_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a12)] THEN istrue_a12_b14_x14 = 0bin1 ELSE istrue_a12_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a12)] THEN istrue_a12_b14_x15 = 0bin1 ELSE istrue_a12_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b14 = BVPLUS(5, 0bin0000@istrue_a12_b14_x0, 0bin0000@istrue_a12_b14_x1, 0bin0000@istrue_a12_b14_x2, 0bin0000@istrue_a12_b14_x3, 0bin0000@istrue_a12_b14_x4, 0bin0000@istrue_a12_b14_x5, 0bin0000@istrue_a12_b14_x6, 0bin0000@istrue_a12_b14_x7, 0bin0000@istrue_a12_b14_x8, 0bin0000@istrue_a12_b14_x9, 0bin0000@istrue_a12_b14_x10, 0bin0000@istrue_a12_b14_x11, 0bin0000@istrue_a12_b14_x12, 0bin0000@istrue_a12_b14_x13, 0bin0000@istrue_a12_b14_x14, 0bin0000@istrue_a12_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a12)] THEN istrue_a12_b15_x0 = 0bin1 ELSE istrue_a12_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a12)] THEN istrue_a12_b15_x1 = 0bin1 ELSE istrue_a12_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a12)] THEN istrue_a12_b15_x2 = 0bin1 ELSE istrue_a12_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a12)] THEN istrue_a12_b15_x3 = 0bin1 ELSE istrue_a12_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a12)] THEN istrue_a12_b15_x4 = 0bin1 ELSE istrue_a12_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a12)] THEN istrue_a12_b15_x5 = 0bin1 ELSE istrue_a12_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a12)] THEN istrue_a12_b15_x6 = 0bin1 ELSE istrue_a12_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a12)] THEN istrue_a12_b15_x7 = 0bin1 ELSE istrue_a12_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a12)] THEN istrue_a12_b15_x8 = 0bin1 ELSE istrue_a12_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a12)] THEN istrue_a12_b15_x9 = 0bin1 ELSE istrue_a12_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a12)] THEN istrue_a12_b15_x10 = 0bin1 ELSE istrue_a12_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a12)] THEN istrue_a12_b15_x11 = 0bin1 ELSE istrue_a12_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a12)] THEN istrue_a12_b15_x12 = 0bin1 ELSE istrue_a12_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a12)] THEN istrue_a12_b15_x13 = 0bin1 ELSE istrue_a12_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a12)] THEN istrue_a12_b15_x14 = 0bin1 ELSE istrue_a12_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a12)] THEN istrue_a12_b15_x15 = 0bin1 ELSE istrue_a12_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a12_b15 = BVPLUS(5, 0bin0000@istrue_a12_b15_x0, 0bin0000@istrue_a12_b15_x1, 0bin0000@istrue_a12_b15_x2, 0bin0000@istrue_a12_b15_x3, 0bin0000@istrue_a12_b15_x4, 0bin0000@istrue_a12_b15_x5, 0bin0000@istrue_a12_b15_x6, 0bin0000@istrue_a12_b15_x7, 0bin0000@istrue_a12_b15_x8, 0bin0000@istrue_a12_b15_x9, 0bin0000@istrue_a12_b15_x10, 0bin0000@istrue_a12_b15_x11, 0bin0000@istrue_a12_b15_x12, 0bin0000@istrue_a12_b15_x13, 0bin0000@istrue_a12_b15_x14, 0bin0000@istrue_a12_b15_x15));
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a13)] THEN istrue_a13_b0_x0 = 0bin1 ELSE istrue_a13_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a13)] THEN istrue_a13_b0_x1 = 0bin1 ELSE istrue_a13_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a13)] THEN istrue_a13_b0_x2 = 0bin1 ELSE istrue_a13_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a13)] THEN istrue_a13_b0_x3 = 0bin1 ELSE istrue_a13_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a13)] THEN istrue_a13_b0_x4 = 0bin1 ELSE istrue_a13_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a13)] THEN istrue_a13_b0_x5 = 0bin1 ELSE istrue_a13_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a13)] THEN istrue_a13_b0_x6 = 0bin1 ELSE istrue_a13_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a13)] THEN istrue_a13_b0_x7 = 0bin1 ELSE istrue_a13_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a13)] THEN istrue_a13_b0_x8 = 0bin1 ELSE istrue_a13_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a13)] THEN istrue_a13_b0_x9 = 0bin1 ELSE istrue_a13_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a13)] THEN istrue_a13_b0_x10 = 0bin1 ELSE istrue_a13_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a13)] THEN istrue_a13_b0_x11 = 0bin1 ELSE istrue_a13_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a13)] THEN istrue_a13_b0_x12 = 0bin1 ELSE istrue_a13_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a13)] THEN istrue_a13_b0_x13 = 0bin1 ELSE istrue_a13_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a13)] THEN istrue_a13_b0_x14 = 0bin1 ELSE istrue_a13_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a13)] THEN istrue_a13_b0_x15 = 0bin1 ELSE istrue_a13_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b0 = BVPLUS(5, 0bin0000@istrue_a13_b0_x0, 0bin0000@istrue_a13_b0_x1, 0bin0000@istrue_a13_b0_x2, 0bin0000@istrue_a13_b0_x3, 0bin0000@istrue_a13_b0_x4, 0bin0000@istrue_a13_b0_x5, 0bin0000@istrue_a13_b0_x6, 0bin0000@istrue_a13_b0_x7, 0bin0000@istrue_a13_b0_x8, 0bin0000@istrue_a13_b0_x9, 0bin0000@istrue_a13_b0_x10, 0bin0000@istrue_a13_b0_x11, 0bin0000@istrue_a13_b0_x12, 0bin0000@istrue_a13_b0_x13, 0bin0000@istrue_a13_b0_x14, 0bin0000@istrue_a13_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a13)] THEN istrue_a13_b1_x0 = 0bin1 ELSE istrue_a13_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a13)] THEN istrue_a13_b1_x1 = 0bin1 ELSE istrue_a13_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a13)] THEN istrue_a13_b1_x2 = 0bin1 ELSE istrue_a13_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a13)] THEN istrue_a13_b1_x3 = 0bin1 ELSE istrue_a13_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a13)] THEN istrue_a13_b1_x4 = 0bin1 ELSE istrue_a13_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a13)] THEN istrue_a13_b1_x5 = 0bin1 ELSE istrue_a13_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a13)] THEN istrue_a13_b1_x6 = 0bin1 ELSE istrue_a13_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a13)] THEN istrue_a13_b1_x7 = 0bin1 ELSE istrue_a13_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a13)] THEN istrue_a13_b1_x8 = 0bin1 ELSE istrue_a13_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a13)] THEN istrue_a13_b1_x9 = 0bin1 ELSE istrue_a13_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a13)] THEN istrue_a13_b1_x10 = 0bin1 ELSE istrue_a13_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a13)] THEN istrue_a13_b1_x11 = 0bin1 ELSE istrue_a13_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a13)] THEN istrue_a13_b1_x12 = 0bin1 ELSE istrue_a13_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a13)] THEN istrue_a13_b1_x13 = 0bin1 ELSE istrue_a13_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a13)] THEN istrue_a13_b1_x14 = 0bin1 ELSE istrue_a13_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a13)] THEN istrue_a13_b1_x15 = 0bin1 ELSE istrue_a13_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b1 = BVPLUS(5, 0bin0000@istrue_a13_b1_x0, 0bin0000@istrue_a13_b1_x1, 0bin0000@istrue_a13_b1_x2, 0bin0000@istrue_a13_b1_x3, 0bin0000@istrue_a13_b1_x4, 0bin0000@istrue_a13_b1_x5, 0bin0000@istrue_a13_b1_x6, 0bin0000@istrue_a13_b1_x7, 0bin0000@istrue_a13_b1_x8, 0bin0000@istrue_a13_b1_x9, 0bin0000@istrue_a13_b1_x10, 0bin0000@istrue_a13_b1_x11, 0bin0000@istrue_a13_b1_x12, 0bin0000@istrue_a13_b1_x13, 0bin0000@istrue_a13_b1_x14, 0bin0000@istrue_a13_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a13)] THEN istrue_a13_b2_x0 = 0bin1 ELSE istrue_a13_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a13)] THEN istrue_a13_b2_x1 = 0bin1 ELSE istrue_a13_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a13)] THEN istrue_a13_b2_x2 = 0bin1 ELSE istrue_a13_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a13)] THEN istrue_a13_b2_x3 = 0bin1 ELSE istrue_a13_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a13)] THEN istrue_a13_b2_x4 = 0bin1 ELSE istrue_a13_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a13)] THEN istrue_a13_b2_x5 = 0bin1 ELSE istrue_a13_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a13)] THEN istrue_a13_b2_x6 = 0bin1 ELSE istrue_a13_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a13)] THEN istrue_a13_b2_x7 = 0bin1 ELSE istrue_a13_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a13)] THEN istrue_a13_b2_x8 = 0bin1 ELSE istrue_a13_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a13)] THEN istrue_a13_b2_x9 = 0bin1 ELSE istrue_a13_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a13)] THEN istrue_a13_b2_x10 = 0bin1 ELSE istrue_a13_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a13)] THEN istrue_a13_b2_x11 = 0bin1 ELSE istrue_a13_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a13)] THEN istrue_a13_b2_x12 = 0bin1 ELSE istrue_a13_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a13)] THEN istrue_a13_b2_x13 = 0bin1 ELSE istrue_a13_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a13)] THEN istrue_a13_b2_x14 = 0bin1 ELSE istrue_a13_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a13)] THEN istrue_a13_b2_x15 = 0bin1 ELSE istrue_a13_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b2 = BVPLUS(5, 0bin0000@istrue_a13_b2_x0, 0bin0000@istrue_a13_b2_x1, 0bin0000@istrue_a13_b2_x2, 0bin0000@istrue_a13_b2_x3, 0bin0000@istrue_a13_b2_x4, 0bin0000@istrue_a13_b2_x5, 0bin0000@istrue_a13_b2_x6, 0bin0000@istrue_a13_b2_x7, 0bin0000@istrue_a13_b2_x8, 0bin0000@istrue_a13_b2_x9, 0bin0000@istrue_a13_b2_x10, 0bin0000@istrue_a13_b2_x11, 0bin0000@istrue_a13_b2_x12, 0bin0000@istrue_a13_b2_x13, 0bin0000@istrue_a13_b2_x14, 0bin0000@istrue_a13_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a13)] THEN istrue_a13_b3_x0 = 0bin1 ELSE istrue_a13_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a13)] THEN istrue_a13_b3_x1 = 0bin1 ELSE istrue_a13_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a13)] THEN istrue_a13_b3_x2 = 0bin1 ELSE istrue_a13_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a13)] THEN istrue_a13_b3_x3 = 0bin1 ELSE istrue_a13_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a13)] THEN istrue_a13_b3_x4 = 0bin1 ELSE istrue_a13_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a13)] THEN istrue_a13_b3_x5 = 0bin1 ELSE istrue_a13_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a13)] THEN istrue_a13_b3_x6 = 0bin1 ELSE istrue_a13_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a13)] THEN istrue_a13_b3_x7 = 0bin1 ELSE istrue_a13_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a13)] THEN istrue_a13_b3_x8 = 0bin1 ELSE istrue_a13_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a13)] THEN istrue_a13_b3_x9 = 0bin1 ELSE istrue_a13_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a13)] THEN istrue_a13_b3_x10 = 0bin1 ELSE istrue_a13_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a13)] THEN istrue_a13_b3_x11 = 0bin1 ELSE istrue_a13_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a13)] THEN istrue_a13_b3_x12 = 0bin1 ELSE istrue_a13_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a13)] THEN istrue_a13_b3_x13 = 0bin1 ELSE istrue_a13_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a13)] THEN istrue_a13_b3_x14 = 0bin1 ELSE istrue_a13_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a13)] THEN istrue_a13_b3_x15 = 0bin1 ELSE istrue_a13_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b3 = BVPLUS(5, 0bin0000@istrue_a13_b3_x0, 0bin0000@istrue_a13_b3_x1, 0bin0000@istrue_a13_b3_x2, 0bin0000@istrue_a13_b3_x3, 0bin0000@istrue_a13_b3_x4, 0bin0000@istrue_a13_b3_x5, 0bin0000@istrue_a13_b3_x6, 0bin0000@istrue_a13_b3_x7, 0bin0000@istrue_a13_b3_x8, 0bin0000@istrue_a13_b3_x9, 0bin0000@istrue_a13_b3_x10, 0bin0000@istrue_a13_b3_x11, 0bin0000@istrue_a13_b3_x12, 0bin0000@istrue_a13_b3_x13, 0bin0000@istrue_a13_b3_x14, 0bin0000@istrue_a13_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a13)] THEN istrue_a13_b4_x0 = 0bin1 ELSE istrue_a13_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a13)] THEN istrue_a13_b4_x1 = 0bin1 ELSE istrue_a13_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a13)] THEN istrue_a13_b4_x2 = 0bin1 ELSE istrue_a13_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a13)] THEN istrue_a13_b4_x3 = 0bin1 ELSE istrue_a13_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a13)] THEN istrue_a13_b4_x4 = 0bin1 ELSE istrue_a13_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a13)] THEN istrue_a13_b4_x5 = 0bin1 ELSE istrue_a13_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a13)] THEN istrue_a13_b4_x6 = 0bin1 ELSE istrue_a13_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a13)] THEN istrue_a13_b4_x7 = 0bin1 ELSE istrue_a13_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a13)] THEN istrue_a13_b4_x8 = 0bin1 ELSE istrue_a13_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a13)] THEN istrue_a13_b4_x9 = 0bin1 ELSE istrue_a13_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a13)] THEN istrue_a13_b4_x10 = 0bin1 ELSE istrue_a13_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a13)] THEN istrue_a13_b4_x11 = 0bin1 ELSE istrue_a13_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a13)] THEN istrue_a13_b4_x12 = 0bin1 ELSE istrue_a13_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a13)] THEN istrue_a13_b4_x13 = 0bin1 ELSE istrue_a13_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a13)] THEN istrue_a13_b4_x14 = 0bin1 ELSE istrue_a13_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a13)] THEN istrue_a13_b4_x15 = 0bin1 ELSE istrue_a13_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b4 = BVPLUS(5, 0bin0000@istrue_a13_b4_x0, 0bin0000@istrue_a13_b4_x1, 0bin0000@istrue_a13_b4_x2, 0bin0000@istrue_a13_b4_x3, 0bin0000@istrue_a13_b4_x4, 0bin0000@istrue_a13_b4_x5, 0bin0000@istrue_a13_b4_x6, 0bin0000@istrue_a13_b4_x7, 0bin0000@istrue_a13_b4_x8, 0bin0000@istrue_a13_b4_x9, 0bin0000@istrue_a13_b4_x10, 0bin0000@istrue_a13_b4_x11, 0bin0000@istrue_a13_b4_x12, 0bin0000@istrue_a13_b4_x13, 0bin0000@istrue_a13_b4_x14, 0bin0000@istrue_a13_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a13)] THEN istrue_a13_b5_x0 = 0bin1 ELSE istrue_a13_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a13)] THEN istrue_a13_b5_x1 = 0bin1 ELSE istrue_a13_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a13)] THEN istrue_a13_b5_x2 = 0bin1 ELSE istrue_a13_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a13)] THEN istrue_a13_b5_x3 = 0bin1 ELSE istrue_a13_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a13)] THEN istrue_a13_b5_x4 = 0bin1 ELSE istrue_a13_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a13)] THEN istrue_a13_b5_x5 = 0bin1 ELSE istrue_a13_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a13)] THEN istrue_a13_b5_x6 = 0bin1 ELSE istrue_a13_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a13)] THEN istrue_a13_b5_x7 = 0bin1 ELSE istrue_a13_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a13)] THEN istrue_a13_b5_x8 = 0bin1 ELSE istrue_a13_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a13)] THEN istrue_a13_b5_x9 = 0bin1 ELSE istrue_a13_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a13)] THEN istrue_a13_b5_x10 = 0bin1 ELSE istrue_a13_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a13)] THEN istrue_a13_b5_x11 = 0bin1 ELSE istrue_a13_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a13)] THEN istrue_a13_b5_x12 = 0bin1 ELSE istrue_a13_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a13)] THEN istrue_a13_b5_x13 = 0bin1 ELSE istrue_a13_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a13)] THEN istrue_a13_b5_x14 = 0bin1 ELSE istrue_a13_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a13)] THEN istrue_a13_b5_x15 = 0bin1 ELSE istrue_a13_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b5 = BVPLUS(5, 0bin0000@istrue_a13_b5_x0, 0bin0000@istrue_a13_b5_x1, 0bin0000@istrue_a13_b5_x2, 0bin0000@istrue_a13_b5_x3, 0bin0000@istrue_a13_b5_x4, 0bin0000@istrue_a13_b5_x5, 0bin0000@istrue_a13_b5_x6, 0bin0000@istrue_a13_b5_x7, 0bin0000@istrue_a13_b5_x8, 0bin0000@istrue_a13_b5_x9, 0bin0000@istrue_a13_b5_x10, 0bin0000@istrue_a13_b5_x11, 0bin0000@istrue_a13_b5_x12, 0bin0000@istrue_a13_b5_x13, 0bin0000@istrue_a13_b5_x14, 0bin0000@istrue_a13_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a13)] THEN istrue_a13_b6_x0 = 0bin1 ELSE istrue_a13_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a13)] THEN istrue_a13_b6_x1 = 0bin1 ELSE istrue_a13_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a13)] THEN istrue_a13_b6_x2 = 0bin1 ELSE istrue_a13_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a13)] THEN istrue_a13_b6_x3 = 0bin1 ELSE istrue_a13_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a13)] THEN istrue_a13_b6_x4 = 0bin1 ELSE istrue_a13_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a13)] THEN istrue_a13_b6_x5 = 0bin1 ELSE istrue_a13_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a13)] THEN istrue_a13_b6_x6 = 0bin1 ELSE istrue_a13_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a13)] THEN istrue_a13_b6_x7 = 0bin1 ELSE istrue_a13_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a13)] THEN istrue_a13_b6_x8 = 0bin1 ELSE istrue_a13_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a13)] THEN istrue_a13_b6_x9 = 0bin1 ELSE istrue_a13_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a13)] THEN istrue_a13_b6_x10 = 0bin1 ELSE istrue_a13_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a13)] THEN istrue_a13_b6_x11 = 0bin1 ELSE istrue_a13_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a13)] THEN istrue_a13_b6_x12 = 0bin1 ELSE istrue_a13_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a13)] THEN istrue_a13_b6_x13 = 0bin1 ELSE istrue_a13_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a13)] THEN istrue_a13_b6_x14 = 0bin1 ELSE istrue_a13_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a13)] THEN istrue_a13_b6_x15 = 0bin1 ELSE istrue_a13_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b6 = BVPLUS(5, 0bin0000@istrue_a13_b6_x0, 0bin0000@istrue_a13_b6_x1, 0bin0000@istrue_a13_b6_x2, 0bin0000@istrue_a13_b6_x3, 0bin0000@istrue_a13_b6_x4, 0bin0000@istrue_a13_b6_x5, 0bin0000@istrue_a13_b6_x6, 0bin0000@istrue_a13_b6_x7, 0bin0000@istrue_a13_b6_x8, 0bin0000@istrue_a13_b6_x9, 0bin0000@istrue_a13_b6_x10, 0bin0000@istrue_a13_b6_x11, 0bin0000@istrue_a13_b6_x12, 0bin0000@istrue_a13_b6_x13, 0bin0000@istrue_a13_b6_x14, 0bin0000@istrue_a13_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a13)] THEN istrue_a13_b7_x0 = 0bin1 ELSE istrue_a13_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a13)] THEN istrue_a13_b7_x1 = 0bin1 ELSE istrue_a13_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a13)] THEN istrue_a13_b7_x2 = 0bin1 ELSE istrue_a13_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a13)] THEN istrue_a13_b7_x3 = 0bin1 ELSE istrue_a13_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a13)] THEN istrue_a13_b7_x4 = 0bin1 ELSE istrue_a13_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a13)] THEN istrue_a13_b7_x5 = 0bin1 ELSE istrue_a13_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a13)] THEN istrue_a13_b7_x6 = 0bin1 ELSE istrue_a13_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a13)] THEN istrue_a13_b7_x7 = 0bin1 ELSE istrue_a13_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a13)] THEN istrue_a13_b7_x8 = 0bin1 ELSE istrue_a13_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a13)] THEN istrue_a13_b7_x9 = 0bin1 ELSE istrue_a13_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a13)] THEN istrue_a13_b7_x10 = 0bin1 ELSE istrue_a13_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a13)] THEN istrue_a13_b7_x11 = 0bin1 ELSE istrue_a13_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a13)] THEN istrue_a13_b7_x12 = 0bin1 ELSE istrue_a13_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a13)] THEN istrue_a13_b7_x13 = 0bin1 ELSE istrue_a13_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a13)] THEN istrue_a13_b7_x14 = 0bin1 ELSE istrue_a13_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a13)] THEN istrue_a13_b7_x15 = 0bin1 ELSE istrue_a13_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b7 = BVPLUS(5, 0bin0000@istrue_a13_b7_x0, 0bin0000@istrue_a13_b7_x1, 0bin0000@istrue_a13_b7_x2, 0bin0000@istrue_a13_b7_x3, 0bin0000@istrue_a13_b7_x4, 0bin0000@istrue_a13_b7_x5, 0bin0000@istrue_a13_b7_x6, 0bin0000@istrue_a13_b7_x7, 0bin0000@istrue_a13_b7_x8, 0bin0000@istrue_a13_b7_x9, 0bin0000@istrue_a13_b7_x10, 0bin0000@istrue_a13_b7_x11, 0bin0000@istrue_a13_b7_x12, 0bin0000@istrue_a13_b7_x13, 0bin0000@istrue_a13_b7_x14, 0bin0000@istrue_a13_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a13)] THEN istrue_a13_b8_x0 = 0bin1 ELSE istrue_a13_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a13)] THEN istrue_a13_b8_x1 = 0bin1 ELSE istrue_a13_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a13)] THEN istrue_a13_b8_x2 = 0bin1 ELSE istrue_a13_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a13)] THEN istrue_a13_b8_x3 = 0bin1 ELSE istrue_a13_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a13)] THEN istrue_a13_b8_x4 = 0bin1 ELSE istrue_a13_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a13)] THEN istrue_a13_b8_x5 = 0bin1 ELSE istrue_a13_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a13)] THEN istrue_a13_b8_x6 = 0bin1 ELSE istrue_a13_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a13)] THEN istrue_a13_b8_x7 = 0bin1 ELSE istrue_a13_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a13)] THEN istrue_a13_b8_x8 = 0bin1 ELSE istrue_a13_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a13)] THEN istrue_a13_b8_x9 = 0bin1 ELSE istrue_a13_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a13)] THEN istrue_a13_b8_x10 = 0bin1 ELSE istrue_a13_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a13)] THEN istrue_a13_b8_x11 = 0bin1 ELSE istrue_a13_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a13)] THEN istrue_a13_b8_x12 = 0bin1 ELSE istrue_a13_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a13)] THEN istrue_a13_b8_x13 = 0bin1 ELSE istrue_a13_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a13)] THEN istrue_a13_b8_x14 = 0bin1 ELSE istrue_a13_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a13)] THEN istrue_a13_b8_x15 = 0bin1 ELSE istrue_a13_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b8 = BVPLUS(5, 0bin0000@istrue_a13_b8_x0, 0bin0000@istrue_a13_b8_x1, 0bin0000@istrue_a13_b8_x2, 0bin0000@istrue_a13_b8_x3, 0bin0000@istrue_a13_b8_x4, 0bin0000@istrue_a13_b8_x5, 0bin0000@istrue_a13_b8_x6, 0bin0000@istrue_a13_b8_x7, 0bin0000@istrue_a13_b8_x8, 0bin0000@istrue_a13_b8_x9, 0bin0000@istrue_a13_b8_x10, 0bin0000@istrue_a13_b8_x11, 0bin0000@istrue_a13_b8_x12, 0bin0000@istrue_a13_b8_x13, 0bin0000@istrue_a13_b8_x14, 0bin0000@istrue_a13_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a13)] THEN istrue_a13_b9_x0 = 0bin1 ELSE istrue_a13_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a13)] THEN istrue_a13_b9_x1 = 0bin1 ELSE istrue_a13_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a13)] THEN istrue_a13_b9_x2 = 0bin1 ELSE istrue_a13_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a13)] THEN istrue_a13_b9_x3 = 0bin1 ELSE istrue_a13_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a13)] THEN istrue_a13_b9_x4 = 0bin1 ELSE istrue_a13_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a13)] THEN istrue_a13_b9_x5 = 0bin1 ELSE istrue_a13_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a13)] THEN istrue_a13_b9_x6 = 0bin1 ELSE istrue_a13_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a13)] THEN istrue_a13_b9_x7 = 0bin1 ELSE istrue_a13_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a13)] THEN istrue_a13_b9_x8 = 0bin1 ELSE istrue_a13_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a13)] THEN istrue_a13_b9_x9 = 0bin1 ELSE istrue_a13_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a13)] THEN istrue_a13_b9_x10 = 0bin1 ELSE istrue_a13_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a13)] THEN istrue_a13_b9_x11 = 0bin1 ELSE istrue_a13_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a13)] THEN istrue_a13_b9_x12 = 0bin1 ELSE istrue_a13_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a13)] THEN istrue_a13_b9_x13 = 0bin1 ELSE istrue_a13_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a13)] THEN istrue_a13_b9_x14 = 0bin1 ELSE istrue_a13_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a13)] THEN istrue_a13_b9_x15 = 0bin1 ELSE istrue_a13_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b9 = BVPLUS(5, 0bin0000@istrue_a13_b9_x0, 0bin0000@istrue_a13_b9_x1, 0bin0000@istrue_a13_b9_x2, 0bin0000@istrue_a13_b9_x3, 0bin0000@istrue_a13_b9_x4, 0bin0000@istrue_a13_b9_x5, 0bin0000@istrue_a13_b9_x6, 0bin0000@istrue_a13_b9_x7, 0bin0000@istrue_a13_b9_x8, 0bin0000@istrue_a13_b9_x9, 0bin0000@istrue_a13_b9_x10, 0bin0000@istrue_a13_b9_x11, 0bin0000@istrue_a13_b9_x12, 0bin0000@istrue_a13_b9_x13, 0bin0000@istrue_a13_b9_x14, 0bin0000@istrue_a13_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a13)] THEN istrue_a13_b10_x0 = 0bin1 ELSE istrue_a13_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a13)] THEN istrue_a13_b10_x1 = 0bin1 ELSE istrue_a13_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a13)] THEN istrue_a13_b10_x2 = 0bin1 ELSE istrue_a13_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a13)] THEN istrue_a13_b10_x3 = 0bin1 ELSE istrue_a13_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a13)] THEN istrue_a13_b10_x4 = 0bin1 ELSE istrue_a13_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a13)] THEN istrue_a13_b10_x5 = 0bin1 ELSE istrue_a13_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a13)] THEN istrue_a13_b10_x6 = 0bin1 ELSE istrue_a13_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a13)] THEN istrue_a13_b10_x7 = 0bin1 ELSE istrue_a13_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a13)] THEN istrue_a13_b10_x8 = 0bin1 ELSE istrue_a13_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a13)] THEN istrue_a13_b10_x9 = 0bin1 ELSE istrue_a13_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a13)] THEN istrue_a13_b10_x10 = 0bin1 ELSE istrue_a13_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a13)] THEN istrue_a13_b10_x11 = 0bin1 ELSE istrue_a13_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a13)] THEN istrue_a13_b10_x12 = 0bin1 ELSE istrue_a13_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a13)] THEN istrue_a13_b10_x13 = 0bin1 ELSE istrue_a13_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a13)] THEN istrue_a13_b10_x14 = 0bin1 ELSE istrue_a13_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a13)] THEN istrue_a13_b10_x15 = 0bin1 ELSE istrue_a13_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b10 = BVPLUS(5, 0bin0000@istrue_a13_b10_x0, 0bin0000@istrue_a13_b10_x1, 0bin0000@istrue_a13_b10_x2, 0bin0000@istrue_a13_b10_x3, 0bin0000@istrue_a13_b10_x4, 0bin0000@istrue_a13_b10_x5, 0bin0000@istrue_a13_b10_x6, 0bin0000@istrue_a13_b10_x7, 0bin0000@istrue_a13_b10_x8, 0bin0000@istrue_a13_b10_x9, 0bin0000@istrue_a13_b10_x10, 0bin0000@istrue_a13_b10_x11, 0bin0000@istrue_a13_b10_x12, 0bin0000@istrue_a13_b10_x13, 0bin0000@istrue_a13_b10_x14, 0bin0000@istrue_a13_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a13)] THEN istrue_a13_b11_x0 = 0bin1 ELSE istrue_a13_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a13)] THEN istrue_a13_b11_x1 = 0bin1 ELSE istrue_a13_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a13)] THEN istrue_a13_b11_x2 = 0bin1 ELSE istrue_a13_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a13)] THEN istrue_a13_b11_x3 = 0bin1 ELSE istrue_a13_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a13)] THEN istrue_a13_b11_x4 = 0bin1 ELSE istrue_a13_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a13)] THEN istrue_a13_b11_x5 = 0bin1 ELSE istrue_a13_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a13)] THEN istrue_a13_b11_x6 = 0bin1 ELSE istrue_a13_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a13)] THEN istrue_a13_b11_x7 = 0bin1 ELSE istrue_a13_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a13)] THEN istrue_a13_b11_x8 = 0bin1 ELSE istrue_a13_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a13)] THEN istrue_a13_b11_x9 = 0bin1 ELSE istrue_a13_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a13)] THEN istrue_a13_b11_x10 = 0bin1 ELSE istrue_a13_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a13)] THEN istrue_a13_b11_x11 = 0bin1 ELSE istrue_a13_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a13)] THEN istrue_a13_b11_x12 = 0bin1 ELSE istrue_a13_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a13)] THEN istrue_a13_b11_x13 = 0bin1 ELSE istrue_a13_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a13)] THEN istrue_a13_b11_x14 = 0bin1 ELSE istrue_a13_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a13)] THEN istrue_a13_b11_x15 = 0bin1 ELSE istrue_a13_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b11 = BVPLUS(5, 0bin0000@istrue_a13_b11_x0, 0bin0000@istrue_a13_b11_x1, 0bin0000@istrue_a13_b11_x2, 0bin0000@istrue_a13_b11_x3, 0bin0000@istrue_a13_b11_x4, 0bin0000@istrue_a13_b11_x5, 0bin0000@istrue_a13_b11_x6, 0bin0000@istrue_a13_b11_x7, 0bin0000@istrue_a13_b11_x8, 0bin0000@istrue_a13_b11_x9, 0bin0000@istrue_a13_b11_x10, 0bin0000@istrue_a13_b11_x11, 0bin0000@istrue_a13_b11_x12, 0bin0000@istrue_a13_b11_x13, 0bin0000@istrue_a13_b11_x14, 0bin0000@istrue_a13_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a13)] THEN istrue_a13_b12_x0 = 0bin1 ELSE istrue_a13_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a13)] THEN istrue_a13_b12_x1 = 0bin1 ELSE istrue_a13_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a13)] THEN istrue_a13_b12_x2 = 0bin1 ELSE istrue_a13_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a13)] THEN istrue_a13_b12_x3 = 0bin1 ELSE istrue_a13_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a13)] THEN istrue_a13_b12_x4 = 0bin1 ELSE istrue_a13_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a13)] THEN istrue_a13_b12_x5 = 0bin1 ELSE istrue_a13_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a13)] THEN istrue_a13_b12_x6 = 0bin1 ELSE istrue_a13_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a13)] THEN istrue_a13_b12_x7 = 0bin1 ELSE istrue_a13_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a13)] THEN istrue_a13_b12_x8 = 0bin1 ELSE istrue_a13_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a13)] THEN istrue_a13_b12_x9 = 0bin1 ELSE istrue_a13_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a13)] THEN istrue_a13_b12_x10 = 0bin1 ELSE istrue_a13_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a13)] THEN istrue_a13_b12_x11 = 0bin1 ELSE istrue_a13_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a13)] THEN istrue_a13_b12_x12 = 0bin1 ELSE istrue_a13_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a13)] THEN istrue_a13_b12_x13 = 0bin1 ELSE istrue_a13_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a13)] THEN istrue_a13_b12_x14 = 0bin1 ELSE istrue_a13_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a13)] THEN istrue_a13_b12_x15 = 0bin1 ELSE istrue_a13_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b12 = BVPLUS(5, 0bin0000@istrue_a13_b12_x0, 0bin0000@istrue_a13_b12_x1, 0bin0000@istrue_a13_b12_x2, 0bin0000@istrue_a13_b12_x3, 0bin0000@istrue_a13_b12_x4, 0bin0000@istrue_a13_b12_x5, 0bin0000@istrue_a13_b12_x6, 0bin0000@istrue_a13_b12_x7, 0bin0000@istrue_a13_b12_x8, 0bin0000@istrue_a13_b12_x9, 0bin0000@istrue_a13_b12_x10, 0bin0000@istrue_a13_b12_x11, 0bin0000@istrue_a13_b12_x12, 0bin0000@istrue_a13_b12_x13, 0bin0000@istrue_a13_b12_x14, 0bin0000@istrue_a13_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a13)] THEN istrue_a13_b13_x0 = 0bin1 ELSE istrue_a13_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a13)] THEN istrue_a13_b13_x1 = 0bin1 ELSE istrue_a13_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a13)] THEN istrue_a13_b13_x2 = 0bin1 ELSE istrue_a13_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a13)] THEN istrue_a13_b13_x3 = 0bin1 ELSE istrue_a13_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a13)] THEN istrue_a13_b13_x4 = 0bin1 ELSE istrue_a13_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a13)] THEN istrue_a13_b13_x5 = 0bin1 ELSE istrue_a13_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a13)] THEN istrue_a13_b13_x6 = 0bin1 ELSE istrue_a13_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a13)] THEN istrue_a13_b13_x7 = 0bin1 ELSE istrue_a13_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a13)] THEN istrue_a13_b13_x8 = 0bin1 ELSE istrue_a13_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a13)] THEN istrue_a13_b13_x9 = 0bin1 ELSE istrue_a13_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a13)] THEN istrue_a13_b13_x10 = 0bin1 ELSE istrue_a13_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a13)] THEN istrue_a13_b13_x11 = 0bin1 ELSE istrue_a13_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a13)] THEN istrue_a13_b13_x12 = 0bin1 ELSE istrue_a13_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a13)] THEN istrue_a13_b13_x13 = 0bin1 ELSE istrue_a13_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a13)] THEN istrue_a13_b13_x14 = 0bin1 ELSE istrue_a13_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a13)] THEN istrue_a13_b13_x15 = 0bin1 ELSE istrue_a13_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b13 = BVPLUS(5, 0bin0000@istrue_a13_b13_x0, 0bin0000@istrue_a13_b13_x1, 0bin0000@istrue_a13_b13_x2, 0bin0000@istrue_a13_b13_x3, 0bin0000@istrue_a13_b13_x4, 0bin0000@istrue_a13_b13_x5, 0bin0000@istrue_a13_b13_x6, 0bin0000@istrue_a13_b13_x7, 0bin0000@istrue_a13_b13_x8, 0bin0000@istrue_a13_b13_x9, 0bin0000@istrue_a13_b13_x10, 0bin0000@istrue_a13_b13_x11, 0bin0000@istrue_a13_b13_x12, 0bin0000@istrue_a13_b13_x13, 0bin0000@istrue_a13_b13_x14, 0bin0000@istrue_a13_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a13)] THEN istrue_a13_b14_x0 = 0bin1 ELSE istrue_a13_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a13)] THEN istrue_a13_b14_x1 = 0bin1 ELSE istrue_a13_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a13)] THEN istrue_a13_b14_x2 = 0bin1 ELSE istrue_a13_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a13)] THEN istrue_a13_b14_x3 = 0bin1 ELSE istrue_a13_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a13)] THEN istrue_a13_b14_x4 = 0bin1 ELSE istrue_a13_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a13)] THEN istrue_a13_b14_x5 = 0bin1 ELSE istrue_a13_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a13)] THEN istrue_a13_b14_x6 = 0bin1 ELSE istrue_a13_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a13)] THEN istrue_a13_b14_x7 = 0bin1 ELSE istrue_a13_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a13)] THEN istrue_a13_b14_x8 = 0bin1 ELSE istrue_a13_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a13)] THEN istrue_a13_b14_x9 = 0bin1 ELSE istrue_a13_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a13)] THEN istrue_a13_b14_x10 = 0bin1 ELSE istrue_a13_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a13)] THEN istrue_a13_b14_x11 = 0bin1 ELSE istrue_a13_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a13)] THEN istrue_a13_b14_x12 = 0bin1 ELSE istrue_a13_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a13)] THEN istrue_a13_b14_x13 = 0bin1 ELSE istrue_a13_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a13)] THEN istrue_a13_b14_x14 = 0bin1 ELSE istrue_a13_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a13)] THEN istrue_a13_b14_x15 = 0bin1 ELSE istrue_a13_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b14 = BVPLUS(5, 0bin0000@istrue_a13_b14_x0, 0bin0000@istrue_a13_b14_x1, 0bin0000@istrue_a13_b14_x2, 0bin0000@istrue_a13_b14_x3, 0bin0000@istrue_a13_b14_x4, 0bin0000@istrue_a13_b14_x5, 0bin0000@istrue_a13_b14_x6, 0bin0000@istrue_a13_b14_x7, 0bin0000@istrue_a13_b14_x8, 0bin0000@istrue_a13_b14_x9, 0bin0000@istrue_a13_b14_x10, 0bin0000@istrue_a13_b14_x11, 0bin0000@istrue_a13_b14_x12, 0bin0000@istrue_a13_b14_x13, 0bin0000@istrue_a13_b14_x14, 0bin0000@istrue_a13_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a13)] THEN istrue_a13_b15_x0 = 0bin1 ELSE istrue_a13_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a13)] THEN istrue_a13_b15_x1 = 0bin1 ELSE istrue_a13_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a13)] THEN istrue_a13_b15_x2 = 0bin1 ELSE istrue_a13_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a13)] THEN istrue_a13_b15_x3 = 0bin1 ELSE istrue_a13_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a13)] THEN istrue_a13_b15_x4 = 0bin1 ELSE istrue_a13_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a13)] THEN istrue_a13_b15_x5 = 0bin1 ELSE istrue_a13_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a13)] THEN istrue_a13_b15_x6 = 0bin1 ELSE istrue_a13_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a13)] THEN istrue_a13_b15_x7 = 0bin1 ELSE istrue_a13_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a13)] THEN istrue_a13_b15_x8 = 0bin1 ELSE istrue_a13_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a13)] THEN istrue_a13_b15_x9 = 0bin1 ELSE istrue_a13_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a13)] THEN istrue_a13_b15_x10 = 0bin1 ELSE istrue_a13_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a13)] THEN istrue_a13_b15_x11 = 0bin1 ELSE istrue_a13_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a13)] THEN istrue_a13_b15_x12 = 0bin1 ELSE istrue_a13_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a13)] THEN istrue_a13_b15_x13 = 0bin1 ELSE istrue_a13_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a13)] THEN istrue_a13_b15_x14 = 0bin1 ELSE istrue_a13_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a13)] THEN istrue_a13_b15_x15 = 0bin1 ELSE istrue_a13_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a13_b15 = BVPLUS(5, 0bin0000@istrue_a13_b15_x0, 0bin0000@istrue_a13_b15_x1, 0bin0000@istrue_a13_b15_x2, 0bin0000@istrue_a13_b15_x3, 0bin0000@istrue_a13_b15_x4, 0bin0000@istrue_a13_b15_x5, 0bin0000@istrue_a13_b15_x6, 0bin0000@istrue_a13_b15_x7, 0bin0000@istrue_a13_b15_x8, 0bin0000@istrue_a13_b15_x9, 0bin0000@istrue_a13_b15_x10, 0bin0000@istrue_a13_b15_x11, 0bin0000@istrue_a13_b15_x12, 0bin0000@istrue_a13_b15_x13, 0bin0000@istrue_a13_b15_x14, 0bin0000@istrue_a13_b15_x15));
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a14)] THEN istrue_a14_b0_x0 = 0bin1 ELSE istrue_a14_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a14)] THEN istrue_a14_b0_x1 = 0bin1 ELSE istrue_a14_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a14)] THEN istrue_a14_b0_x2 = 0bin1 ELSE istrue_a14_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a14)] THEN istrue_a14_b0_x3 = 0bin1 ELSE istrue_a14_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a14)] THEN istrue_a14_b0_x4 = 0bin1 ELSE istrue_a14_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a14)] THEN istrue_a14_b0_x5 = 0bin1 ELSE istrue_a14_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a14)] THEN istrue_a14_b0_x6 = 0bin1 ELSE istrue_a14_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a14)] THEN istrue_a14_b0_x7 = 0bin1 ELSE istrue_a14_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a14)] THEN istrue_a14_b0_x8 = 0bin1 ELSE istrue_a14_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a14)] THEN istrue_a14_b0_x9 = 0bin1 ELSE istrue_a14_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a14)] THEN istrue_a14_b0_x10 = 0bin1 ELSE istrue_a14_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a14)] THEN istrue_a14_b0_x11 = 0bin1 ELSE istrue_a14_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a14)] THEN istrue_a14_b0_x12 = 0bin1 ELSE istrue_a14_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a14)] THEN istrue_a14_b0_x13 = 0bin1 ELSE istrue_a14_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a14)] THEN istrue_a14_b0_x14 = 0bin1 ELSE istrue_a14_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a14)] THEN istrue_a14_b0_x15 = 0bin1 ELSE istrue_a14_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b0 = BVPLUS(5, 0bin0000@istrue_a14_b0_x0, 0bin0000@istrue_a14_b0_x1, 0bin0000@istrue_a14_b0_x2, 0bin0000@istrue_a14_b0_x3, 0bin0000@istrue_a14_b0_x4, 0bin0000@istrue_a14_b0_x5, 0bin0000@istrue_a14_b0_x6, 0bin0000@istrue_a14_b0_x7, 0bin0000@istrue_a14_b0_x8, 0bin0000@istrue_a14_b0_x9, 0bin0000@istrue_a14_b0_x10, 0bin0000@istrue_a14_b0_x11, 0bin0000@istrue_a14_b0_x12, 0bin0000@istrue_a14_b0_x13, 0bin0000@istrue_a14_b0_x14, 0bin0000@istrue_a14_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a14)] THEN istrue_a14_b1_x0 = 0bin1 ELSE istrue_a14_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a14)] THEN istrue_a14_b1_x1 = 0bin1 ELSE istrue_a14_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a14)] THEN istrue_a14_b1_x2 = 0bin1 ELSE istrue_a14_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a14)] THEN istrue_a14_b1_x3 = 0bin1 ELSE istrue_a14_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a14)] THEN istrue_a14_b1_x4 = 0bin1 ELSE istrue_a14_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a14)] THEN istrue_a14_b1_x5 = 0bin1 ELSE istrue_a14_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a14)] THEN istrue_a14_b1_x6 = 0bin1 ELSE istrue_a14_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a14)] THEN istrue_a14_b1_x7 = 0bin1 ELSE istrue_a14_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a14)] THEN istrue_a14_b1_x8 = 0bin1 ELSE istrue_a14_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a14)] THEN istrue_a14_b1_x9 = 0bin1 ELSE istrue_a14_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a14)] THEN istrue_a14_b1_x10 = 0bin1 ELSE istrue_a14_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a14)] THEN istrue_a14_b1_x11 = 0bin1 ELSE istrue_a14_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a14)] THEN istrue_a14_b1_x12 = 0bin1 ELSE istrue_a14_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a14)] THEN istrue_a14_b1_x13 = 0bin1 ELSE istrue_a14_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a14)] THEN istrue_a14_b1_x14 = 0bin1 ELSE istrue_a14_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a14)] THEN istrue_a14_b1_x15 = 0bin1 ELSE istrue_a14_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b1 = BVPLUS(5, 0bin0000@istrue_a14_b1_x0, 0bin0000@istrue_a14_b1_x1, 0bin0000@istrue_a14_b1_x2, 0bin0000@istrue_a14_b1_x3, 0bin0000@istrue_a14_b1_x4, 0bin0000@istrue_a14_b1_x5, 0bin0000@istrue_a14_b1_x6, 0bin0000@istrue_a14_b1_x7, 0bin0000@istrue_a14_b1_x8, 0bin0000@istrue_a14_b1_x9, 0bin0000@istrue_a14_b1_x10, 0bin0000@istrue_a14_b1_x11, 0bin0000@istrue_a14_b1_x12, 0bin0000@istrue_a14_b1_x13, 0bin0000@istrue_a14_b1_x14, 0bin0000@istrue_a14_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a14)] THEN istrue_a14_b2_x0 = 0bin1 ELSE istrue_a14_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a14)] THEN istrue_a14_b2_x1 = 0bin1 ELSE istrue_a14_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a14)] THEN istrue_a14_b2_x2 = 0bin1 ELSE istrue_a14_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a14)] THEN istrue_a14_b2_x3 = 0bin1 ELSE istrue_a14_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a14)] THEN istrue_a14_b2_x4 = 0bin1 ELSE istrue_a14_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a14)] THEN istrue_a14_b2_x5 = 0bin1 ELSE istrue_a14_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a14)] THEN istrue_a14_b2_x6 = 0bin1 ELSE istrue_a14_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a14)] THEN istrue_a14_b2_x7 = 0bin1 ELSE istrue_a14_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a14)] THEN istrue_a14_b2_x8 = 0bin1 ELSE istrue_a14_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a14)] THEN istrue_a14_b2_x9 = 0bin1 ELSE istrue_a14_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a14)] THEN istrue_a14_b2_x10 = 0bin1 ELSE istrue_a14_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a14)] THEN istrue_a14_b2_x11 = 0bin1 ELSE istrue_a14_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a14)] THEN istrue_a14_b2_x12 = 0bin1 ELSE istrue_a14_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a14)] THEN istrue_a14_b2_x13 = 0bin1 ELSE istrue_a14_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a14)] THEN istrue_a14_b2_x14 = 0bin1 ELSE istrue_a14_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a14)] THEN istrue_a14_b2_x15 = 0bin1 ELSE istrue_a14_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b2 = BVPLUS(5, 0bin0000@istrue_a14_b2_x0, 0bin0000@istrue_a14_b2_x1, 0bin0000@istrue_a14_b2_x2, 0bin0000@istrue_a14_b2_x3, 0bin0000@istrue_a14_b2_x4, 0bin0000@istrue_a14_b2_x5, 0bin0000@istrue_a14_b2_x6, 0bin0000@istrue_a14_b2_x7, 0bin0000@istrue_a14_b2_x8, 0bin0000@istrue_a14_b2_x9, 0bin0000@istrue_a14_b2_x10, 0bin0000@istrue_a14_b2_x11, 0bin0000@istrue_a14_b2_x12, 0bin0000@istrue_a14_b2_x13, 0bin0000@istrue_a14_b2_x14, 0bin0000@istrue_a14_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a14)] THEN istrue_a14_b3_x0 = 0bin1 ELSE istrue_a14_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a14)] THEN istrue_a14_b3_x1 = 0bin1 ELSE istrue_a14_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a14)] THEN istrue_a14_b3_x2 = 0bin1 ELSE istrue_a14_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a14)] THEN istrue_a14_b3_x3 = 0bin1 ELSE istrue_a14_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a14)] THEN istrue_a14_b3_x4 = 0bin1 ELSE istrue_a14_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a14)] THEN istrue_a14_b3_x5 = 0bin1 ELSE istrue_a14_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a14)] THEN istrue_a14_b3_x6 = 0bin1 ELSE istrue_a14_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a14)] THEN istrue_a14_b3_x7 = 0bin1 ELSE istrue_a14_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a14)] THEN istrue_a14_b3_x8 = 0bin1 ELSE istrue_a14_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a14)] THEN istrue_a14_b3_x9 = 0bin1 ELSE istrue_a14_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a14)] THEN istrue_a14_b3_x10 = 0bin1 ELSE istrue_a14_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a14)] THEN istrue_a14_b3_x11 = 0bin1 ELSE istrue_a14_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a14)] THEN istrue_a14_b3_x12 = 0bin1 ELSE istrue_a14_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a14)] THEN istrue_a14_b3_x13 = 0bin1 ELSE istrue_a14_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a14)] THEN istrue_a14_b3_x14 = 0bin1 ELSE istrue_a14_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a14)] THEN istrue_a14_b3_x15 = 0bin1 ELSE istrue_a14_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b3 = BVPLUS(5, 0bin0000@istrue_a14_b3_x0, 0bin0000@istrue_a14_b3_x1, 0bin0000@istrue_a14_b3_x2, 0bin0000@istrue_a14_b3_x3, 0bin0000@istrue_a14_b3_x4, 0bin0000@istrue_a14_b3_x5, 0bin0000@istrue_a14_b3_x6, 0bin0000@istrue_a14_b3_x7, 0bin0000@istrue_a14_b3_x8, 0bin0000@istrue_a14_b3_x9, 0bin0000@istrue_a14_b3_x10, 0bin0000@istrue_a14_b3_x11, 0bin0000@istrue_a14_b3_x12, 0bin0000@istrue_a14_b3_x13, 0bin0000@istrue_a14_b3_x14, 0bin0000@istrue_a14_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a14)] THEN istrue_a14_b4_x0 = 0bin1 ELSE istrue_a14_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a14)] THEN istrue_a14_b4_x1 = 0bin1 ELSE istrue_a14_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a14)] THEN istrue_a14_b4_x2 = 0bin1 ELSE istrue_a14_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a14)] THEN istrue_a14_b4_x3 = 0bin1 ELSE istrue_a14_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a14)] THEN istrue_a14_b4_x4 = 0bin1 ELSE istrue_a14_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a14)] THEN istrue_a14_b4_x5 = 0bin1 ELSE istrue_a14_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a14)] THEN istrue_a14_b4_x6 = 0bin1 ELSE istrue_a14_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a14)] THEN istrue_a14_b4_x7 = 0bin1 ELSE istrue_a14_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a14)] THEN istrue_a14_b4_x8 = 0bin1 ELSE istrue_a14_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a14)] THEN istrue_a14_b4_x9 = 0bin1 ELSE istrue_a14_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a14)] THEN istrue_a14_b4_x10 = 0bin1 ELSE istrue_a14_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a14)] THEN istrue_a14_b4_x11 = 0bin1 ELSE istrue_a14_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a14)] THEN istrue_a14_b4_x12 = 0bin1 ELSE istrue_a14_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a14)] THEN istrue_a14_b4_x13 = 0bin1 ELSE istrue_a14_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a14)] THEN istrue_a14_b4_x14 = 0bin1 ELSE istrue_a14_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a14)] THEN istrue_a14_b4_x15 = 0bin1 ELSE istrue_a14_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b4 = BVPLUS(5, 0bin0000@istrue_a14_b4_x0, 0bin0000@istrue_a14_b4_x1, 0bin0000@istrue_a14_b4_x2, 0bin0000@istrue_a14_b4_x3, 0bin0000@istrue_a14_b4_x4, 0bin0000@istrue_a14_b4_x5, 0bin0000@istrue_a14_b4_x6, 0bin0000@istrue_a14_b4_x7, 0bin0000@istrue_a14_b4_x8, 0bin0000@istrue_a14_b4_x9, 0bin0000@istrue_a14_b4_x10, 0bin0000@istrue_a14_b4_x11, 0bin0000@istrue_a14_b4_x12, 0bin0000@istrue_a14_b4_x13, 0bin0000@istrue_a14_b4_x14, 0bin0000@istrue_a14_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a14)] THEN istrue_a14_b5_x0 = 0bin1 ELSE istrue_a14_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a14)] THEN istrue_a14_b5_x1 = 0bin1 ELSE istrue_a14_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a14)] THEN istrue_a14_b5_x2 = 0bin1 ELSE istrue_a14_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a14)] THEN istrue_a14_b5_x3 = 0bin1 ELSE istrue_a14_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a14)] THEN istrue_a14_b5_x4 = 0bin1 ELSE istrue_a14_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a14)] THEN istrue_a14_b5_x5 = 0bin1 ELSE istrue_a14_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a14)] THEN istrue_a14_b5_x6 = 0bin1 ELSE istrue_a14_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a14)] THEN istrue_a14_b5_x7 = 0bin1 ELSE istrue_a14_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a14)] THEN istrue_a14_b5_x8 = 0bin1 ELSE istrue_a14_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a14)] THEN istrue_a14_b5_x9 = 0bin1 ELSE istrue_a14_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a14)] THEN istrue_a14_b5_x10 = 0bin1 ELSE istrue_a14_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a14)] THEN istrue_a14_b5_x11 = 0bin1 ELSE istrue_a14_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a14)] THEN istrue_a14_b5_x12 = 0bin1 ELSE istrue_a14_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a14)] THEN istrue_a14_b5_x13 = 0bin1 ELSE istrue_a14_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a14)] THEN istrue_a14_b5_x14 = 0bin1 ELSE istrue_a14_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a14)] THEN istrue_a14_b5_x15 = 0bin1 ELSE istrue_a14_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b5 = BVPLUS(5, 0bin0000@istrue_a14_b5_x0, 0bin0000@istrue_a14_b5_x1, 0bin0000@istrue_a14_b5_x2, 0bin0000@istrue_a14_b5_x3, 0bin0000@istrue_a14_b5_x4, 0bin0000@istrue_a14_b5_x5, 0bin0000@istrue_a14_b5_x6, 0bin0000@istrue_a14_b5_x7, 0bin0000@istrue_a14_b5_x8, 0bin0000@istrue_a14_b5_x9, 0bin0000@istrue_a14_b5_x10, 0bin0000@istrue_a14_b5_x11, 0bin0000@istrue_a14_b5_x12, 0bin0000@istrue_a14_b5_x13, 0bin0000@istrue_a14_b5_x14, 0bin0000@istrue_a14_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a14)] THEN istrue_a14_b6_x0 = 0bin1 ELSE istrue_a14_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a14)] THEN istrue_a14_b6_x1 = 0bin1 ELSE istrue_a14_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a14)] THEN istrue_a14_b6_x2 = 0bin1 ELSE istrue_a14_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a14)] THEN istrue_a14_b6_x3 = 0bin1 ELSE istrue_a14_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a14)] THEN istrue_a14_b6_x4 = 0bin1 ELSE istrue_a14_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a14)] THEN istrue_a14_b6_x5 = 0bin1 ELSE istrue_a14_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a14)] THEN istrue_a14_b6_x6 = 0bin1 ELSE istrue_a14_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a14)] THEN istrue_a14_b6_x7 = 0bin1 ELSE istrue_a14_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a14)] THEN istrue_a14_b6_x8 = 0bin1 ELSE istrue_a14_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a14)] THEN istrue_a14_b6_x9 = 0bin1 ELSE istrue_a14_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a14)] THEN istrue_a14_b6_x10 = 0bin1 ELSE istrue_a14_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a14)] THEN istrue_a14_b6_x11 = 0bin1 ELSE istrue_a14_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a14)] THEN istrue_a14_b6_x12 = 0bin1 ELSE istrue_a14_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a14)] THEN istrue_a14_b6_x13 = 0bin1 ELSE istrue_a14_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a14)] THEN istrue_a14_b6_x14 = 0bin1 ELSE istrue_a14_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a14)] THEN istrue_a14_b6_x15 = 0bin1 ELSE istrue_a14_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b6 = BVPLUS(5, 0bin0000@istrue_a14_b6_x0, 0bin0000@istrue_a14_b6_x1, 0bin0000@istrue_a14_b6_x2, 0bin0000@istrue_a14_b6_x3, 0bin0000@istrue_a14_b6_x4, 0bin0000@istrue_a14_b6_x5, 0bin0000@istrue_a14_b6_x6, 0bin0000@istrue_a14_b6_x7, 0bin0000@istrue_a14_b6_x8, 0bin0000@istrue_a14_b6_x9, 0bin0000@istrue_a14_b6_x10, 0bin0000@istrue_a14_b6_x11, 0bin0000@istrue_a14_b6_x12, 0bin0000@istrue_a14_b6_x13, 0bin0000@istrue_a14_b6_x14, 0bin0000@istrue_a14_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a14)] THEN istrue_a14_b7_x0 = 0bin1 ELSE istrue_a14_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a14)] THEN istrue_a14_b7_x1 = 0bin1 ELSE istrue_a14_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a14)] THEN istrue_a14_b7_x2 = 0bin1 ELSE istrue_a14_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a14)] THEN istrue_a14_b7_x3 = 0bin1 ELSE istrue_a14_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a14)] THEN istrue_a14_b7_x4 = 0bin1 ELSE istrue_a14_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a14)] THEN istrue_a14_b7_x5 = 0bin1 ELSE istrue_a14_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a14)] THEN istrue_a14_b7_x6 = 0bin1 ELSE istrue_a14_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a14)] THEN istrue_a14_b7_x7 = 0bin1 ELSE istrue_a14_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a14)] THEN istrue_a14_b7_x8 = 0bin1 ELSE istrue_a14_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a14)] THEN istrue_a14_b7_x9 = 0bin1 ELSE istrue_a14_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a14)] THEN istrue_a14_b7_x10 = 0bin1 ELSE istrue_a14_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a14)] THEN istrue_a14_b7_x11 = 0bin1 ELSE istrue_a14_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a14)] THEN istrue_a14_b7_x12 = 0bin1 ELSE istrue_a14_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a14)] THEN istrue_a14_b7_x13 = 0bin1 ELSE istrue_a14_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a14)] THEN istrue_a14_b7_x14 = 0bin1 ELSE istrue_a14_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a14)] THEN istrue_a14_b7_x15 = 0bin1 ELSE istrue_a14_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b7 = BVPLUS(5, 0bin0000@istrue_a14_b7_x0, 0bin0000@istrue_a14_b7_x1, 0bin0000@istrue_a14_b7_x2, 0bin0000@istrue_a14_b7_x3, 0bin0000@istrue_a14_b7_x4, 0bin0000@istrue_a14_b7_x5, 0bin0000@istrue_a14_b7_x6, 0bin0000@istrue_a14_b7_x7, 0bin0000@istrue_a14_b7_x8, 0bin0000@istrue_a14_b7_x9, 0bin0000@istrue_a14_b7_x10, 0bin0000@istrue_a14_b7_x11, 0bin0000@istrue_a14_b7_x12, 0bin0000@istrue_a14_b7_x13, 0bin0000@istrue_a14_b7_x14, 0bin0000@istrue_a14_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a14)] THEN istrue_a14_b8_x0 = 0bin1 ELSE istrue_a14_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a14)] THEN istrue_a14_b8_x1 = 0bin1 ELSE istrue_a14_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a14)] THEN istrue_a14_b8_x2 = 0bin1 ELSE istrue_a14_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a14)] THEN istrue_a14_b8_x3 = 0bin1 ELSE istrue_a14_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a14)] THEN istrue_a14_b8_x4 = 0bin1 ELSE istrue_a14_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a14)] THEN istrue_a14_b8_x5 = 0bin1 ELSE istrue_a14_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a14)] THEN istrue_a14_b8_x6 = 0bin1 ELSE istrue_a14_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a14)] THEN istrue_a14_b8_x7 = 0bin1 ELSE istrue_a14_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a14)] THEN istrue_a14_b8_x8 = 0bin1 ELSE istrue_a14_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a14)] THEN istrue_a14_b8_x9 = 0bin1 ELSE istrue_a14_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a14)] THEN istrue_a14_b8_x10 = 0bin1 ELSE istrue_a14_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a14)] THEN istrue_a14_b8_x11 = 0bin1 ELSE istrue_a14_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a14)] THEN istrue_a14_b8_x12 = 0bin1 ELSE istrue_a14_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a14)] THEN istrue_a14_b8_x13 = 0bin1 ELSE istrue_a14_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a14)] THEN istrue_a14_b8_x14 = 0bin1 ELSE istrue_a14_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a14)] THEN istrue_a14_b8_x15 = 0bin1 ELSE istrue_a14_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b8 = BVPLUS(5, 0bin0000@istrue_a14_b8_x0, 0bin0000@istrue_a14_b8_x1, 0bin0000@istrue_a14_b8_x2, 0bin0000@istrue_a14_b8_x3, 0bin0000@istrue_a14_b8_x4, 0bin0000@istrue_a14_b8_x5, 0bin0000@istrue_a14_b8_x6, 0bin0000@istrue_a14_b8_x7, 0bin0000@istrue_a14_b8_x8, 0bin0000@istrue_a14_b8_x9, 0bin0000@istrue_a14_b8_x10, 0bin0000@istrue_a14_b8_x11, 0bin0000@istrue_a14_b8_x12, 0bin0000@istrue_a14_b8_x13, 0bin0000@istrue_a14_b8_x14, 0bin0000@istrue_a14_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a14)] THEN istrue_a14_b9_x0 = 0bin1 ELSE istrue_a14_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a14)] THEN istrue_a14_b9_x1 = 0bin1 ELSE istrue_a14_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a14)] THEN istrue_a14_b9_x2 = 0bin1 ELSE istrue_a14_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a14)] THEN istrue_a14_b9_x3 = 0bin1 ELSE istrue_a14_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a14)] THEN istrue_a14_b9_x4 = 0bin1 ELSE istrue_a14_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a14)] THEN istrue_a14_b9_x5 = 0bin1 ELSE istrue_a14_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a14)] THEN istrue_a14_b9_x6 = 0bin1 ELSE istrue_a14_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a14)] THEN istrue_a14_b9_x7 = 0bin1 ELSE istrue_a14_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a14)] THEN istrue_a14_b9_x8 = 0bin1 ELSE istrue_a14_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a14)] THEN istrue_a14_b9_x9 = 0bin1 ELSE istrue_a14_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a14)] THEN istrue_a14_b9_x10 = 0bin1 ELSE istrue_a14_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a14)] THEN istrue_a14_b9_x11 = 0bin1 ELSE istrue_a14_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a14)] THEN istrue_a14_b9_x12 = 0bin1 ELSE istrue_a14_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a14)] THEN istrue_a14_b9_x13 = 0bin1 ELSE istrue_a14_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a14)] THEN istrue_a14_b9_x14 = 0bin1 ELSE istrue_a14_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a14)] THEN istrue_a14_b9_x15 = 0bin1 ELSE istrue_a14_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b9 = BVPLUS(5, 0bin0000@istrue_a14_b9_x0, 0bin0000@istrue_a14_b9_x1, 0bin0000@istrue_a14_b9_x2, 0bin0000@istrue_a14_b9_x3, 0bin0000@istrue_a14_b9_x4, 0bin0000@istrue_a14_b9_x5, 0bin0000@istrue_a14_b9_x6, 0bin0000@istrue_a14_b9_x7, 0bin0000@istrue_a14_b9_x8, 0bin0000@istrue_a14_b9_x9, 0bin0000@istrue_a14_b9_x10, 0bin0000@istrue_a14_b9_x11, 0bin0000@istrue_a14_b9_x12, 0bin0000@istrue_a14_b9_x13, 0bin0000@istrue_a14_b9_x14, 0bin0000@istrue_a14_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a14)] THEN istrue_a14_b10_x0 = 0bin1 ELSE istrue_a14_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a14)] THEN istrue_a14_b10_x1 = 0bin1 ELSE istrue_a14_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a14)] THEN istrue_a14_b10_x2 = 0bin1 ELSE istrue_a14_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a14)] THEN istrue_a14_b10_x3 = 0bin1 ELSE istrue_a14_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a14)] THEN istrue_a14_b10_x4 = 0bin1 ELSE istrue_a14_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a14)] THEN istrue_a14_b10_x5 = 0bin1 ELSE istrue_a14_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a14)] THEN istrue_a14_b10_x6 = 0bin1 ELSE istrue_a14_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a14)] THEN istrue_a14_b10_x7 = 0bin1 ELSE istrue_a14_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a14)] THEN istrue_a14_b10_x8 = 0bin1 ELSE istrue_a14_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a14)] THEN istrue_a14_b10_x9 = 0bin1 ELSE istrue_a14_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a14)] THEN istrue_a14_b10_x10 = 0bin1 ELSE istrue_a14_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a14)] THEN istrue_a14_b10_x11 = 0bin1 ELSE istrue_a14_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a14)] THEN istrue_a14_b10_x12 = 0bin1 ELSE istrue_a14_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a14)] THEN istrue_a14_b10_x13 = 0bin1 ELSE istrue_a14_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a14)] THEN istrue_a14_b10_x14 = 0bin1 ELSE istrue_a14_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a14)] THEN istrue_a14_b10_x15 = 0bin1 ELSE istrue_a14_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b10 = BVPLUS(5, 0bin0000@istrue_a14_b10_x0, 0bin0000@istrue_a14_b10_x1, 0bin0000@istrue_a14_b10_x2, 0bin0000@istrue_a14_b10_x3, 0bin0000@istrue_a14_b10_x4, 0bin0000@istrue_a14_b10_x5, 0bin0000@istrue_a14_b10_x6, 0bin0000@istrue_a14_b10_x7, 0bin0000@istrue_a14_b10_x8, 0bin0000@istrue_a14_b10_x9, 0bin0000@istrue_a14_b10_x10, 0bin0000@istrue_a14_b10_x11, 0bin0000@istrue_a14_b10_x12, 0bin0000@istrue_a14_b10_x13, 0bin0000@istrue_a14_b10_x14, 0bin0000@istrue_a14_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a14)] THEN istrue_a14_b11_x0 = 0bin1 ELSE istrue_a14_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a14)] THEN istrue_a14_b11_x1 = 0bin1 ELSE istrue_a14_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a14)] THEN istrue_a14_b11_x2 = 0bin1 ELSE istrue_a14_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a14)] THEN istrue_a14_b11_x3 = 0bin1 ELSE istrue_a14_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a14)] THEN istrue_a14_b11_x4 = 0bin1 ELSE istrue_a14_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a14)] THEN istrue_a14_b11_x5 = 0bin1 ELSE istrue_a14_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a14)] THEN istrue_a14_b11_x6 = 0bin1 ELSE istrue_a14_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a14)] THEN istrue_a14_b11_x7 = 0bin1 ELSE istrue_a14_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a14)] THEN istrue_a14_b11_x8 = 0bin1 ELSE istrue_a14_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a14)] THEN istrue_a14_b11_x9 = 0bin1 ELSE istrue_a14_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a14)] THEN istrue_a14_b11_x10 = 0bin1 ELSE istrue_a14_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a14)] THEN istrue_a14_b11_x11 = 0bin1 ELSE istrue_a14_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a14)] THEN istrue_a14_b11_x12 = 0bin1 ELSE istrue_a14_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a14)] THEN istrue_a14_b11_x13 = 0bin1 ELSE istrue_a14_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a14)] THEN istrue_a14_b11_x14 = 0bin1 ELSE istrue_a14_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a14)] THEN istrue_a14_b11_x15 = 0bin1 ELSE istrue_a14_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b11 = BVPLUS(5, 0bin0000@istrue_a14_b11_x0, 0bin0000@istrue_a14_b11_x1, 0bin0000@istrue_a14_b11_x2, 0bin0000@istrue_a14_b11_x3, 0bin0000@istrue_a14_b11_x4, 0bin0000@istrue_a14_b11_x5, 0bin0000@istrue_a14_b11_x6, 0bin0000@istrue_a14_b11_x7, 0bin0000@istrue_a14_b11_x8, 0bin0000@istrue_a14_b11_x9, 0bin0000@istrue_a14_b11_x10, 0bin0000@istrue_a14_b11_x11, 0bin0000@istrue_a14_b11_x12, 0bin0000@istrue_a14_b11_x13, 0bin0000@istrue_a14_b11_x14, 0bin0000@istrue_a14_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a14)] THEN istrue_a14_b12_x0 = 0bin1 ELSE istrue_a14_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a14)] THEN istrue_a14_b12_x1 = 0bin1 ELSE istrue_a14_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a14)] THEN istrue_a14_b12_x2 = 0bin1 ELSE istrue_a14_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a14)] THEN istrue_a14_b12_x3 = 0bin1 ELSE istrue_a14_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a14)] THEN istrue_a14_b12_x4 = 0bin1 ELSE istrue_a14_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a14)] THEN istrue_a14_b12_x5 = 0bin1 ELSE istrue_a14_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a14)] THEN istrue_a14_b12_x6 = 0bin1 ELSE istrue_a14_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a14)] THEN istrue_a14_b12_x7 = 0bin1 ELSE istrue_a14_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a14)] THEN istrue_a14_b12_x8 = 0bin1 ELSE istrue_a14_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a14)] THEN istrue_a14_b12_x9 = 0bin1 ELSE istrue_a14_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a14)] THEN istrue_a14_b12_x10 = 0bin1 ELSE istrue_a14_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a14)] THEN istrue_a14_b12_x11 = 0bin1 ELSE istrue_a14_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a14)] THEN istrue_a14_b12_x12 = 0bin1 ELSE istrue_a14_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a14)] THEN istrue_a14_b12_x13 = 0bin1 ELSE istrue_a14_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a14)] THEN istrue_a14_b12_x14 = 0bin1 ELSE istrue_a14_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a14)] THEN istrue_a14_b12_x15 = 0bin1 ELSE istrue_a14_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b12 = BVPLUS(5, 0bin0000@istrue_a14_b12_x0, 0bin0000@istrue_a14_b12_x1, 0bin0000@istrue_a14_b12_x2, 0bin0000@istrue_a14_b12_x3, 0bin0000@istrue_a14_b12_x4, 0bin0000@istrue_a14_b12_x5, 0bin0000@istrue_a14_b12_x6, 0bin0000@istrue_a14_b12_x7, 0bin0000@istrue_a14_b12_x8, 0bin0000@istrue_a14_b12_x9, 0bin0000@istrue_a14_b12_x10, 0bin0000@istrue_a14_b12_x11, 0bin0000@istrue_a14_b12_x12, 0bin0000@istrue_a14_b12_x13, 0bin0000@istrue_a14_b12_x14, 0bin0000@istrue_a14_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a14)] THEN istrue_a14_b13_x0 = 0bin1 ELSE istrue_a14_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a14)] THEN istrue_a14_b13_x1 = 0bin1 ELSE istrue_a14_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a14)] THEN istrue_a14_b13_x2 = 0bin1 ELSE istrue_a14_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a14)] THEN istrue_a14_b13_x3 = 0bin1 ELSE istrue_a14_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a14)] THEN istrue_a14_b13_x4 = 0bin1 ELSE istrue_a14_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a14)] THEN istrue_a14_b13_x5 = 0bin1 ELSE istrue_a14_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a14)] THEN istrue_a14_b13_x6 = 0bin1 ELSE istrue_a14_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a14)] THEN istrue_a14_b13_x7 = 0bin1 ELSE istrue_a14_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a14)] THEN istrue_a14_b13_x8 = 0bin1 ELSE istrue_a14_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a14)] THEN istrue_a14_b13_x9 = 0bin1 ELSE istrue_a14_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a14)] THEN istrue_a14_b13_x10 = 0bin1 ELSE istrue_a14_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a14)] THEN istrue_a14_b13_x11 = 0bin1 ELSE istrue_a14_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a14)] THEN istrue_a14_b13_x12 = 0bin1 ELSE istrue_a14_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a14)] THEN istrue_a14_b13_x13 = 0bin1 ELSE istrue_a14_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a14)] THEN istrue_a14_b13_x14 = 0bin1 ELSE istrue_a14_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a14)] THEN istrue_a14_b13_x15 = 0bin1 ELSE istrue_a14_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b13 = BVPLUS(5, 0bin0000@istrue_a14_b13_x0, 0bin0000@istrue_a14_b13_x1, 0bin0000@istrue_a14_b13_x2, 0bin0000@istrue_a14_b13_x3, 0bin0000@istrue_a14_b13_x4, 0bin0000@istrue_a14_b13_x5, 0bin0000@istrue_a14_b13_x6, 0bin0000@istrue_a14_b13_x7, 0bin0000@istrue_a14_b13_x8, 0bin0000@istrue_a14_b13_x9, 0bin0000@istrue_a14_b13_x10, 0bin0000@istrue_a14_b13_x11, 0bin0000@istrue_a14_b13_x12, 0bin0000@istrue_a14_b13_x13, 0bin0000@istrue_a14_b13_x14, 0bin0000@istrue_a14_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a14)] THEN istrue_a14_b14_x0 = 0bin1 ELSE istrue_a14_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a14)] THEN istrue_a14_b14_x1 = 0bin1 ELSE istrue_a14_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a14)] THEN istrue_a14_b14_x2 = 0bin1 ELSE istrue_a14_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a14)] THEN istrue_a14_b14_x3 = 0bin1 ELSE istrue_a14_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a14)] THEN istrue_a14_b14_x4 = 0bin1 ELSE istrue_a14_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a14)] THEN istrue_a14_b14_x5 = 0bin1 ELSE istrue_a14_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a14)] THEN istrue_a14_b14_x6 = 0bin1 ELSE istrue_a14_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a14)] THEN istrue_a14_b14_x7 = 0bin1 ELSE istrue_a14_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a14)] THEN istrue_a14_b14_x8 = 0bin1 ELSE istrue_a14_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a14)] THEN istrue_a14_b14_x9 = 0bin1 ELSE istrue_a14_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a14)] THEN istrue_a14_b14_x10 = 0bin1 ELSE istrue_a14_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a14)] THEN istrue_a14_b14_x11 = 0bin1 ELSE istrue_a14_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a14)] THEN istrue_a14_b14_x12 = 0bin1 ELSE istrue_a14_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a14)] THEN istrue_a14_b14_x13 = 0bin1 ELSE istrue_a14_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a14)] THEN istrue_a14_b14_x14 = 0bin1 ELSE istrue_a14_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a14)] THEN istrue_a14_b14_x15 = 0bin1 ELSE istrue_a14_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b14 = BVPLUS(5, 0bin0000@istrue_a14_b14_x0, 0bin0000@istrue_a14_b14_x1, 0bin0000@istrue_a14_b14_x2, 0bin0000@istrue_a14_b14_x3, 0bin0000@istrue_a14_b14_x4, 0bin0000@istrue_a14_b14_x5, 0bin0000@istrue_a14_b14_x6, 0bin0000@istrue_a14_b14_x7, 0bin0000@istrue_a14_b14_x8, 0bin0000@istrue_a14_b14_x9, 0bin0000@istrue_a14_b14_x10, 0bin0000@istrue_a14_b14_x11, 0bin0000@istrue_a14_b14_x12, 0bin0000@istrue_a14_b14_x13, 0bin0000@istrue_a14_b14_x14, 0bin0000@istrue_a14_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a14)] THEN istrue_a14_b15_x0 = 0bin1 ELSE istrue_a14_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a14)] THEN istrue_a14_b15_x1 = 0bin1 ELSE istrue_a14_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a14)] THEN istrue_a14_b15_x2 = 0bin1 ELSE istrue_a14_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a14)] THEN istrue_a14_b15_x3 = 0bin1 ELSE istrue_a14_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a14)] THEN istrue_a14_b15_x4 = 0bin1 ELSE istrue_a14_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a14)] THEN istrue_a14_b15_x5 = 0bin1 ELSE istrue_a14_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a14)] THEN istrue_a14_b15_x6 = 0bin1 ELSE istrue_a14_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a14)] THEN istrue_a14_b15_x7 = 0bin1 ELSE istrue_a14_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a14)] THEN istrue_a14_b15_x8 = 0bin1 ELSE istrue_a14_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a14)] THEN istrue_a14_b15_x9 = 0bin1 ELSE istrue_a14_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a14)] THEN istrue_a14_b15_x10 = 0bin1 ELSE istrue_a14_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a14)] THEN istrue_a14_b15_x11 = 0bin1 ELSE istrue_a14_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a14)] THEN istrue_a14_b15_x12 = 0bin1 ELSE istrue_a14_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a14)] THEN istrue_a14_b15_x13 = 0bin1 ELSE istrue_a14_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a14)] THEN istrue_a14_b15_x14 = 0bin1 ELSE istrue_a14_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a14)] THEN istrue_a14_b15_x15 = 0bin1 ELSE istrue_a14_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a14_b15 = BVPLUS(5, 0bin0000@istrue_a14_b15_x0, 0bin0000@istrue_a14_b15_x1, 0bin0000@istrue_a14_b15_x2, 0bin0000@istrue_a14_b15_x3, 0bin0000@istrue_a14_b15_x4, 0bin0000@istrue_a14_b15_x5, 0bin0000@istrue_a14_b15_x6, 0bin0000@istrue_a14_b15_x7, 0bin0000@istrue_a14_b15_x8, 0bin0000@istrue_a14_b15_x9, 0bin0000@istrue_a14_b15_x10, 0bin0000@istrue_a14_b15_x11, 0bin0000@istrue_a14_b15_x12, 0bin0000@istrue_a14_b15_x13, 0bin0000@istrue_a14_b15_x14, 0bin0000@istrue_a14_b15_x15));
ASSERT( IF BVXOR(S[x0],b0) = S[BVXOR(x0,a15)] THEN istrue_a15_b0_x0 = 0bin1 ELSE istrue_a15_b0_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b0) = S[BVXOR(x1,a15)] THEN istrue_a15_b0_x1 = 0bin1 ELSE istrue_a15_b0_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b0) = S[BVXOR(x2,a15)] THEN istrue_a15_b0_x2 = 0bin1 ELSE istrue_a15_b0_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b0) = S[BVXOR(x3,a15)] THEN istrue_a15_b0_x3 = 0bin1 ELSE istrue_a15_b0_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b0) = S[BVXOR(x4,a15)] THEN istrue_a15_b0_x4 = 0bin1 ELSE istrue_a15_b0_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b0) = S[BVXOR(x5,a15)] THEN istrue_a15_b0_x5 = 0bin1 ELSE istrue_a15_b0_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b0) = S[BVXOR(x6,a15)] THEN istrue_a15_b0_x6 = 0bin1 ELSE istrue_a15_b0_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b0) = S[BVXOR(x7,a15)] THEN istrue_a15_b0_x7 = 0bin1 ELSE istrue_a15_b0_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b0) = S[BVXOR(x8,a15)] THEN istrue_a15_b0_x8 = 0bin1 ELSE istrue_a15_b0_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b0) = S[BVXOR(x9,a15)] THEN istrue_a15_b0_x9 = 0bin1 ELSE istrue_a15_b0_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b0) = S[BVXOR(x10,a15)] THEN istrue_a15_b0_x10 = 0bin1 ELSE istrue_a15_b0_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b0) = S[BVXOR(x11,a15)] THEN istrue_a15_b0_x11 = 0bin1 ELSE istrue_a15_b0_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b0) = S[BVXOR(x12,a15)] THEN istrue_a15_b0_x12 = 0bin1 ELSE istrue_a15_b0_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b0) = S[BVXOR(x13,a15)] THEN istrue_a15_b0_x13 = 0bin1 ELSE istrue_a15_b0_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b0) = S[BVXOR(x14,a15)] THEN istrue_a15_b0_x14 = 0bin1 ELSE istrue_a15_b0_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b0) = S[BVXOR(x15,a15)] THEN istrue_a15_b0_x15 = 0bin1 ELSE istrue_a15_b0_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b0 = BVPLUS(5, 0bin0000@istrue_a15_b0_x0, 0bin0000@istrue_a15_b0_x1, 0bin0000@istrue_a15_b0_x2, 0bin0000@istrue_a15_b0_x3, 0bin0000@istrue_a15_b0_x4, 0bin0000@istrue_a15_b0_x5, 0bin0000@istrue_a15_b0_x6, 0bin0000@istrue_a15_b0_x7, 0bin0000@istrue_a15_b0_x8, 0bin0000@istrue_a15_b0_x9, 0bin0000@istrue_a15_b0_x10, 0bin0000@istrue_a15_b0_x11, 0bin0000@istrue_a15_b0_x12, 0bin0000@istrue_a15_b0_x13, 0bin0000@istrue_a15_b0_x14, 0bin0000@istrue_a15_b0_x15));
ASSERT( IF BVXOR(S[x0],b1) = S[BVXOR(x0,a15)] THEN istrue_a15_b1_x0 = 0bin1 ELSE istrue_a15_b1_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b1) = S[BVXOR(x1,a15)] THEN istrue_a15_b1_x1 = 0bin1 ELSE istrue_a15_b1_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b1) = S[BVXOR(x2,a15)] THEN istrue_a15_b1_x2 = 0bin1 ELSE istrue_a15_b1_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b1) = S[BVXOR(x3,a15)] THEN istrue_a15_b1_x3 = 0bin1 ELSE istrue_a15_b1_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b1) = S[BVXOR(x4,a15)] THEN istrue_a15_b1_x4 = 0bin1 ELSE istrue_a15_b1_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b1) = S[BVXOR(x5,a15)] THEN istrue_a15_b1_x5 = 0bin1 ELSE istrue_a15_b1_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b1) = S[BVXOR(x6,a15)] THEN istrue_a15_b1_x6 = 0bin1 ELSE istrue_a15_b1_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b1) = S[BVXOR(x7,a15)] THEN istrue_a15_b1_x7 = 0bin1 ELSE istrue_a15_b1_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b1) = S[BVXOR(x8,a15)] THEN istrue_a15_b1_x8 = 0bin1 ELSE istrue_a15_b1_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b1) = S[BVXOR(x9,a15)] THEN istrue_a15_b1_x9 = 0bin1 ELSE istrue_a15_b1_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b1) = S[BVXOR(x10,a15)] THEN istrue_a15_b1_x10 = 0bin1 ELSE istrue_a15_b1_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b1) = S[BVXOR(x11,a15)] THEN istrue_a15_b1_x11 = 0bin1 ELSE istrue_a15_b1_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b1) = S[BVXOR(x12,a15)] THEN istrue_a15_b1_x12 = 0bin1 ELSE istrue_a15_b1_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b1) = S[BVXOR(x13,a15)] THEN istrue_a15_b1_x13 = 0bin1 ELSE istrue_a15_b1_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b1) = S[BVXOR(x14,a15)] THEN istrue_a15_b1_x14 = 0bin1 ELSE istrue_a15_b1_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b1) = S[BVXOR(x15,a15)] THEN istrue_a15_b1_x15 = 0bin1 ELSE istrue_a15_b1_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b1 = BVPLUS(5, 0bin0000@istrue_a15_b1_x0, 0bin0000@istrue_a15_b1_x1, 0bin0000@istrue_a15_b1_x2, 0bin0000@istrue_a15_b1_x3, 0bin0000@istrue_a15_b1_x4, 0bin0000@istrue_a15_b1_x5, 0bin0000@istrue_a15_b1_x6, 0bin0000@istrue_a15_b1_x7, 0bin0000@istrue_a15_b1_x8, 0bin0000@istrue_a15_b1_x9, 0bin0000@istrue_a15_b1_x10, 0bin0000@istrue_a15_b1_x11, 0bin0000@istrue_a15_b1_x12, 0bin0000@istrue_a15_b1_x13, 0bin0000@istrue_a15_b1_x14, 0bin0000@istrue_a15_b1_x15));
ASSERT( IF BVXOR(S[x0],b2) = S[BVXOR(x0,a15)] THEN istrue_a15_b2_x0 = 0bin1 ELSE istrue_a15_b2_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b2) = S[BVXOR(x1,a15)] THEN istrue_a15_b2_x1 = 0bin1 ELSE istrue_a15_b2_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b2) = S[BVXOR(x2,a15)] THEN istrue_a15_b2_x2 = 0bin1 ELSE istrue_a15_b2_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b2) = S[BVXOR(x3,a15)] THEN istrue_a15_b2_x3 = 0bin1 ELSE istrue_a15_b2_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b2) = S[BVXOR(x4,a15)] THEN istrue_a15_b2_x4 = 0bin1 ELSE istrue_a15_b2_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b2) = S[BVXOR(x5,a15)] THEN istrue_a15_b2_x5 = 0bin1 ELSE istrue_a15_b2_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b2) = S[BVXOR(x6,a15)] THEN istrue_a15_b2_x6 = 0bin1 ELSE istrue_a15_b2_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b2) = S[BVXOR(x7,a15)] THEN istrue_a15_b2_x7 = 0bin1 ELSE istrue_a15_b2_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b2) = S[BVXOR(x8,a15)] THEN istrue_a15_b2_x8 = 0bin1 ELSE istrue_a15_b2_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b2) = S[BVXOR(x9,a15)] THEN istrue_a15_b2_x9 = 0bin1 ELSE istrue_a15_b2_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b2) = S[BVXOR(x10,a15)] THEN istrue_a15_b2_x10 = 0bin1 ELSE istrue_a15_b2_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b2) = S[BVXOR(x11,a15)] THEN istrue_a15_b2_x11 = 0bin1 ELSE istrue_a15_b2_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b2) = S[BVXOR(x12,a15)] THEN istrue_a15_b2_x12 = 0bin1 ELSE istrue_a15_b2_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b2) = S[BVXOR(x13,a15)] THEN istrue_a15_b2_x13 = 0bin1 ELSE istrue_a15_b2_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b2) = S[BVXOR(x14,a15)] THEN istrue_a15_b2_x14 = 0bin1 ELSE istrue_a15_b2_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b2) = S[BVXOR(x15,a15)] THEN istrue_a15_b2_x15 = 0bin1 ELSE istrue_a15_b2_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b2 = BVPLUS(5, 0bin0000@istrue_a15_b2_x0, 0bin0000@istrue_a15_b2_x1, 0bin0000@istrue_a15_b2_x2, 0bin0000@istrue_a15_b2_x3, 0bin0000@istrue_a15_b2_x4, 0bin0000@istrue_a15_b2_x5, 0bin0000@istrue_a15_b2_x6, 0bin0000@istrue_a15_b2_x7, 0bin0000@istrue_a15_b2_x8, 0bin0000@istrue_a15_b2_x9, 0bin0000@istrue_a15_b2_x10, 0bin0000@istrue_a15_b2_x11, 0bin0000@istrue_a15_b2_x12, 0bin0000@istrue_a15_b2_x13, 0bin0000@istrue_a15_b2_x14, 0bin0000@istrue_a15_b2_x15));
ASSERT( IF BVXOR(S[x0],b3) = S[BVXOR(x0,a15)] THEN istrue_a15_b3_x0 = 0bin1 ELSE istrue_a15_b3_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b3) = S[BVXOR(x1,a15)] THEN istrue_a15_b3_x1 = 0bin1 ELSE istrue_a15_b3_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b3) = S[BVXOR(x2,a15)] THEN istrue_a15_b3_x2 = 0bin1 ELSE istrue_a15_b3_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b3) = S[BVXOR(x3,a15)] THEN istrue_a15_b3_x3 = 0bin1 ELSE istrue_a15_b3_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b3) = S[BVXOR(x4,a15)] THEN istrue_a15_b3_x4 = 0bin1 ELSE istrue_a15_b3_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b3) = S[BVXOR(x5,a15)] THEN istrue_a15_b3_x5 = 0bin1 ELSE istrue_a15_b3_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b3) = S[BVXOR(x6,a15)] THEN istrue_a15_b3_x6 = 0bin1 ELSE istrue_a15_b3_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b3) = S[BVXOR(x7,a15)] THEN istrue_a15_b3_x7 = 0bin1 ELSE istrue_a15_b3_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b3) = S[BVXOR(x8,a15)] THEN istrue_a15_b3_x8 = 0bin1 ELSE istrue_a15_b3_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b3) = S[BVXOR(x9,a15)] THEN istrue_a15_b3_x9 = 0bin1 ELSE istrue_a15_b3_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b3) = S[BVXOR(x10,a15)] THEN istrue_a15_b3_x10 = 0bin1 ELSE istrue_a15_b3_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b3) = S[BVXOR(x11,a15)] THEN istrue_a15_b3_x11 = 0bin1 ELSE istrue_a15_b3_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b3) = S[BVXOR(x12,a15)] THEN istrue_a15_b3_x12 = 0bin1 ELSE istrue_a15_b3_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b3) = S[BVXOR(x13,a15)] THEN istrue_a15_b3_x13 = 0bin1 ELSE istrue_a15_b3_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b3) = S[BVXOR(x14,a15)] THEN istrue_a15_b3_x14 = 0bin1 ELSE istrue_a15_b3_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b3) = S[BVXOR(x15,a15)] THEN istrue_a15_b3_x15 = 0bin1 ELSE istrue_a15_b3_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b3 = BVPLUS(5, 0bin0000@istrue_a15_b3_x0, 0bin0000@istrue_a15_b3_x1, 0bin0000@istrue_a15_b3_x2, 0bin0000@istrue_a15_b3_x3, 0bin0000@istrue_a15_b3_x4, 0bin0000@istrue_a15_b3_x5, 0bin0000@istrue_a15_b3_x6, 0bin0000@istrue_a15_b3_x7, 0bin0000@istrue_a15_b3_x8, 0bin0000@istrue_a15_b3_x9, 0bin0000@istrue_a15_b3_x10, 0bin0000@istrue_a15_b3_x11, 0bin0000@istrue_a15_b3_x12, 0bin0000@istrue_a15_b3_x13, 0bin0000@istrue_a15_b3_x14, 0bin0000@istrue_a15_b3_x15));
ASSERT( IF BVXOR(S[x0],b4) = S[BVXOR(x0,a15)] THEN istrue_a15_b4_x0 = 0bin1 ELSE istrue_a15_b4_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b4) = S[BVXOR(x1,a15)] THEN istrue_a15_b4_x1 = 0bin1 ELSE istrue_a15_b4_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b4) = S[BVXOR(x2,a15)] THEN istrue_a15_b4_x2 = 0bin1 ELSE istrue_a15_b4_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b4) = S[BVXOR(x3,a15)] THEN istrue_a15_b4_x3 = 0bin1 ELSE istrue_a15_b4_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b4) = S[BVXOR(x4,a15)] THEN istrue_a15_b4_x4 = 0bin1 ELSE istrue_a15_b4_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b4) = S[BVXOR(x5,a15)] THEN istrue_a15_b4_x5 = 0bin1 ELSE istrue_a15_b4_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b4) = S[BVXOR(x6,a15)] THEN istrue_a15_b4_x6 = 0bin1 ELSE istrue_a15_b4_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b4) = S[BVXOR(x7,a15)] THEN istrue_a15_b4_x7 = 0bin1 ELSE istrue_a15_b4_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b4) = S[BVXOR(x8,a15)] THEN istrue_a15_b4_x8 = 0bin1 ELSE istrue_a15_b4_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b4) = S[BVXOR(x9,a15)] THEN istrue_a15_b4_x9 = 0bin1 ELSE istrue_a15_b4_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b4) = S[BVXOR(x10,a15)] THEN istrue_a15_b4_x10 = 0bin1 ELSE istrue_a15_b4_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b4) = S[BVXOR(x11,a15)] THEN istrue_a15_b4_x11 = 0bin1 ELSE istrue_a15_b4_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b4) = S[BVXOR(x12,a15)] THEN istrue_a15_b4_x12 = 0bin1 ELSE istrue_a15_b4_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b4) = S[BVXOR(x13,a15)] THEN istrue_a15_b4_x13 = 0bin1 ELSE istrue_a15_b4_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b4) = S[BVXOR(x14,a15)] THEN istrue_a15_b4_x14 = 0bin1 ELSE istrue_a15_b4_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b4) = S[BVXOR(x15,a15)] THEN istrue_a15_b4_x15 = 0bin1 ELSE istrue_a15_b4_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b4 = BVPLUS(5, 0bin0000@istrue_a15_b4_x0, 0bin0000@istrue_a15_b4_x1, 0bin0000@istrue_a15_b4_x2, 0bin0000@istrue_a15_b4_x3, 0bin0000@istrue_a15_b4_x4, 0bin0000@istrue_a15_b4_x5, 0bin0000@istrue_a15_b4_x6, 0bin0000@istrue_a15_b4_x7, 0bin0000@istrue_a15_b4_x8, 0bin0000@istrue_a15_b4_x9, 0bin0000@istrue_a15_b4_x10, 0bin0000@istrue_a15_b4_x11, 0bin0000@istrue_a15_b4_x12, 0bin0000@istrue_a15_b4_x13, 0bin0000@istrue_a15_b4_x14, 0bin0000@istrue_a15_b4_x15));
ASSERT( IF BVXOR(S[x0],b5) = S[BVXOR(x0,a15)] THEN istrue_a15_b5_x0 = 0bin1 ELSE istrue_a15_b5_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b5) = S[BVXOR(x1,a15)] THEN istrue_a15_b5_x1 = 0bin1 ELSE istrue_a15_b5_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b5) = S[BVXOR(x2,a15)] THEN istrue_a15_b5_x2 = 0bin1 ELSE istrue_a15_b5_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b5) = S[BVXOR(x3,a15)] THEN istrue_a15_b5_x3 = 0bin1 ELSE istrue_a15_b5_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b5) = S[BVXOR(x4,a15)] THEN istrue_a15_b5_x4 = 0bin1 ELSE istrue_a15_b5_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b5) = S[BVXOR(x5,a15)] THEN istrue_a15_b5_x5 = 0bin1 ELSE istrue_a15_b5_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b5) = S[BVXOR(x6,a15)] THEN istrue_a15_b5_x6 = 0bin1 ELSE istrue_a15_b5_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b5) = S[BVXOR(x7,a15)] THEN istrue_a15_b5_x7 = 0bin1 ELSE istrue_a15_b5_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b5) = S[BVXOR(x8,a15)] THEN istrue_a15_b5_x8 = 0bin1 ELSE istrue_a15_b5_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b5) = S[BVXOR(x9,a15)] THEN istrue_a15_b5_x9 = 0bin1 ELSE istrue_a15_b5_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b5) = S[BVXOR(x10,a15)] THEN istrue_a15_b5_x10 = 0bin1 ELSE istrue_a15_b5_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b5) = S[BVXOR(x11,a15)] THEN istrue_a15_b5_x11 = 0bin1 ELSE istrue_a15_b5_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b5) = S[BVXOR(x12,a15)] THEN istrue_a15_b5_x12 = 0bin1 ELSE istrue_a15_b5_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b5) = S[BVXOR(x13,a15)] THEN istrue_a15_b5_x13 = 0bin1 ELSE istrue_a15_b5_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b5) = S[BVXOR(x14,a15)] THEN istrue_a15_b5_x14 = 0bin1 ELSE istrue_a15_b5_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b5) = S[BVXOR(x15,a15)] THEN istrue_a15_b5_x15 = 0bin1 ELSE istrue_a15_b5_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b5 = BVPLUS(5, 0bin0000@istrue_a15_b5_x0, 0bin0000@istrue_a15_b5_x1, 0bin0000@istrue_a15_b5_x2, 0bin0000@istrue_a15_b5_x3, 0bin0000@istrue_a15_b5_x4, 0bin0000@istrue_a15_b5_x5, 0bin0000@istrue_a15_b5_x6, 0bin0000@istrue_a15_b5_x7, 0bin0000@istrue_a15_b5_x8, 0bin0000@istrue_a15_b5_x9, 0bin0000@istrue_a15_b5_x10, 0bin0000@istrue_a15_b5_x11, 0bin0000@istrue_a15_b5_x12, 0bin0000@istrue_a15_b5_x13, 0bin0000@istrue_a15_b5_x14, 0bin0000@istrue_a15_b5_x15));
ASSERT( IF BVXOR(S[x0],b6) = S[BVXOR(x0,a15)] THEN istrue_a15_b6_x0 = 0bin1 ELSE istrue_a15_b6_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b6) = S[BVXOR(x1,a15)] THEN istrue_a15_b6_x1 = 0bin1 ELSE istrue_a15_b6_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b6) = S[BVXOR(x2,a15)] THEN istrue_a15_b6_x2 = 0bin1 ELSE istrue_a15_b6_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b6) = S[BVXOR(x3,a15)] THEN istrue_a15_b6_x3 = 0bin1 ELSE istrue_a15_b6_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b6) = S[BVXOR(x4,a15)] THEN istrue_a15_b6_x4 = 0bin1 ELSE istrue_a15_b6_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b6) = S[BVXOR(x5,a15)] THEN istrue_a15_b6_x5 = 0bin1 ELSE istrue_a15_b6_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b6) = S[BVXOR(x6,a15)] THEN istrue_a15_b6_x6 = 0bin1 ELSE istrue_a15_b6_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b6) = S[BVXOR(x7,a15)] THEN istrue_a15_b6_x7 = 0bin1 ELSE istrue_a15_b6_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b6) = S[BVXOR(x8,a15)] THEN istrue_a15_b6_x8 = 0bin1 ELSE istrue_a15_b6_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b6) = S[BVXOR(x9,a15)] THEN istrue_a15_b6_x9 = 0bin1 ELSE istrue_a15_b6_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b6) = S[BVXOR(x10,a15)] THEN istrue_a15_b6_x10 = 0bin1 ELSE istrue_a15_b6_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b6) = S[BVXOR(x11,a15)] THEN istrue_a15_b6_x11 = 0bin1 ELSE istrue_a15_b6_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b6) = S[BVXOR(x12,a15)] THEN istrue_a15_b6_x12 = 0bin1 ELSE istrue_a15_b6_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b6) = S[BVXOR(x13,a15)] THEN istrue_a15_b6_x13 = 0bin1 ELSE istrue_a15_b6_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b6) = S[BVXOR(x14,a15)] THEN istrue_a15_b6_x14 = 0bin1 ELSE istrue_a15_b6_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b6) = S[BVXOR(x15,a15)] THEN istrue_a15_b6_x15 = 0bin1 ELSE istrue_a15_b6_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b6 = BVPLUS(5, 0bin0000@istrue_a15_b6_x0, 0bin0000@istrue_a15_b6_x1, 0bin0000@istrue_a15_b6_x2, 0bin0000@istrue_a15_b6_x3, 0bin0000@istrue_a15_b6_x4, 0bin0000@istrue_a15_b6_x5, 0bin0000@istrue_a15_b6_x6, 0bin0000@istrue_a15_b6_x7, 0bin0000@istrue_a15_b6_x8, 0bin0000@istrue_a15_b6_x9, 0bin0000@istrue_a15_b6_x10, 0bin0000@istrue_a15_b6_x11, 0bin0000@istrue_a15_b6_x12, 0bin0000@istrue_a15_b6_x13, 0bin0000@istrue_a15_b6_x14, 0bin0000@istrue_a15_b6_x15));
ASSERT( IF BVXOR(S[x0],b7) = S[BVXOR(x0,a15)] THEN istrue_a15_b7_x0 = 0bin1 ELSE istrue_a15_b7_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b7) = S[BVXOR(x1,a15)] THEN istrue_a15_b7_x1 = 0bin1 ELSE istrue_a15_b7_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b7) = S[BVXOR(x2,a15)] THEN istrue_a15_b7_x2 = 0bin1 ELSE istrue_a15_b7_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b7) = S[BVXOR(x3,a15)] THEN istrue_a15_b7_x3 = 0bin1 ELSE istrue_a15_b7_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b7) = S[BVXOR(x4,a15)] THEN istrue_a15_b7_x4 = 0bin1 ELSE istrue_a15_b7_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b7) = S[BVXOR(x5,a15)] THEN istrue_a15_b7_x5 = 0bin1 ELSE istrue_a15_b7_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b7) = S[BVXOR(x6,a15)] THEN istrue_a15_b7_x6 = 0bin1 ELSE istrue_a15_b7_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b7) = S[BVXOR(x7,a15)] THEN istrue_a15_b7_x7 = 0bin1 ELSE istrue_a15_b7_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b7) = S[BVXOR(x8,a15)] THEN istrue_a15_b7_x8 = 0bin1 ELSE istrue_a15_b7_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b7) = S[BVXOR(x9,a15)] THEN istrue_a15_b7_x9 = 0bin1 ELSE istrue_a15_b7_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b7) = S[BVXOR(x10,a15)] THEN istrue_a15_b7_x10 = 0bin1 ELSE istrue_a15_b7_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b7) = S[BVXOR(x11,a15)] THEN istrue_a15_b7_x11 = 0bin1 ELSE istrue_a15_b7_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b7) = S[BVXOR(x12,a15)] THEN istrue_a15_b7_x12 = 0bin1 ELSE istrue_a15_b7_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b7) = S[BVXOR(x13,a15)] THEN istrue_a15_b7_x13 = 0bin1 ELSE istrue_a15_b7_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b7) = S[BVXOR(x14,a15)] THEN istrue_a15_b7_x14 = 0bin1 ELSE istrue_a15_b7_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b7) = S[BVXOR(x15,a15)] THEN istrue_a15_b7_x15 = 0bin1 ELSE istrue_a15_b7_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b7 = BVPLUS(5, 0bin0000@istrue_a15_b7_x0, 0bin0000@istrue_a15_b7_x1, 0bin0000@istrue_a15_b7_x2, 0bin0000@istrue_a15_b7_x3, 0bin0000@istrue_a15_b7_x4, 0bin0000@istrue_a15_b7_x5, 0bin0000@istrue_a15_b7_x6, 0bin0000@istrue_a15_b7_x7, 0bin0000@istrue_a15_b7_x8, 0bin0000@istrue_a15_b7_x9, 0bin0000@istrue_a15_b7_x10, 0bin0000@istrue_a15_b7_x11, 0bin0000@istrue_a15_b7_x12, 0bin0000@istrue_a15_b7_x13, 0bin0000@istrue_a15_b7_x14, 0bin0000@istrue_a15_b7_x15));
ASSERT( IF BVXOR(S[x0],b8) = S[BVXOR(x0,a15)] THEN istrue_a15_b8_x0 = 0bin1 ELSE istrue_a15_b8_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b8) = S[BVXOR(x1,a15)] THEN istrue_a15_b8_x1 = 0bin1 ELSE istrue_a15_b8_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b8) = S[BVXOR(x2,a15)] THEN istrue_a15_b8_x2 = 0bin1 ELSE istrue_a15_b8_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b8) = S[BVXOR(x3,a15)] THEN istrue_a15_b8_x3 = 0bin1 ELSE istrue_a15_b8_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b8) = S[BVXOR(x4,a15)] THEN istrue_a15_b8_x4 = 0bin1 ELSE istrue_a15_b8_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b8) = S[BVXOR(x5,a15)] THEN istrue_a15_b8_x5 = 0bin1 ELSE istrue_a15_b8_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b8) = S[BVXOR(x6,a15)] THEN istrue_a15_b8_x6 = 0bin1 ELSE istrue_a15_b8_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b8) = S[BVXOR(x7,a15)] THEN istrue_a15_b8_x7 = 0bin1 ELSE istrue_a15_b8_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b8) = S[BVXOR(x8,a15)] THEN istrue_a15_b8_x8 = 0bin1 ELSE istrue_a15_b8_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b8) = S[BVXOR(x9,a15)] THEN istrue_a15_b8_x9 = 0bin1 ELSE istrue_a15_b8_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b8) = S[BVXOR(x10,a15)] THEN istrue_a15_b8_x10 = 0bin1 ELSE istrue_a15_b8_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b8) = S[BVXOR(x11,a15)] THEN istrue_a15_b8_x11 = 0bin1 ELSE istrue_a15_b8_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b8) = S[BVXOR(x12,a15)] THEN istrue_a15_b8_x12 = 0bin1 ELSE istrue_a15_b8_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b8) = S[BVXOR(x13,a15)] THEN istrue_a15_b8_x13 = 0bin1 ELSE istrue_a15_b8_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b8) = S[BVXOR(x14,a15)] THEN istrue_a15_b8_x14 = 0bin1 ELSE istrue_a15_b8_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b8) = S[BVXOR(x15,a15)] THEN istrue_a15_b8_x15 = 0bin1 ELSE istrue_a15_b8_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b8 = BVPLUS(5, 0bin0000@istrue_a15_b8_x0, 0bin0000@istrue_a15_b8_x1, 0bin0000@istrue_a15_b8_x2, 0bin0000@istrue_a15_b8_x3, 0bin0000@istrue_a15_b8_x4, 0bin0000@istrue_a15_b8_x5, 0bin0000@istrue_a15_b8_x6, 0bin0000@istrue_a15_b8_x7, 0bin0000@istrue_a15_b8_x8, 0bin0000@istrue_a15_b8_x9, 0bin0000@istrue_a15_b8_x10, 0bin0000@istrue_a15_b8_x11, 0bin0000@istrue_a15_b8_x12, 0bin0000@istrue_a15_b8_x13, 0bin0000@istrue_a15_b8_x14, 0bin0000@istrue_a15_b8_x15));
ASSERT( IF BVXOR(S[x0],b9) = S[BVXOR(x0,a15)] THEN istrue_a15_b9_x0 = 0bin1 ELSE istrue_a15_b9_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b9) = S[BVXOR(x1,a15)] THEN istrue_a15_b9_x1 = 0bin1 ELSE istrue_a15_b9_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b9) = S[BVXOR(x2,a15)] THEN istrue_a15_b9_x2 = 0bin1 ELSE istrue_a15_b9_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b9) = S[BVXOR(x3,a15)] THEN istrue_a15_b9_x3 = 0bin1 ELSE istrue_a15_b9_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b9) = S[BVXOR(x4,a15)] THEN istrue_a15_b9_x4 = 0bin1 ELSE istrue_a15_b9_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b9) = S[BVXOR(x5,a15)] THEN istrue_a15_b9_x5 = 0bin1 ELSE istrue_a15_b9_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b9) = S[BVXOR(x6,a15)] THEN istrue_a15_b9_x6 = 0bin1 ELSE istrue_a15_b9_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b9) = S[BVXOR(x7,a15)] THEN istrue_a15_b9_x7 = 0bin1 ELSE istrue_a15_b9_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b9) = S[BVXOR(x8,a15)] THEN istrue_a15_b9_x8 = 0bin1 ELSE istrue_a15_b9_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b9) = S[BVXOR(x9,a15)] THEN istrue_a15_b9_x9 = 0bin1 ELSE istrue_a15_b9_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b9) = S[BVXOR(x10,a15)] THEN istrue_a15_b9_x10 = 0bin1 ELSE istrue_a15_b9_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b9) = S[BVXOR(x11,a15)] THEN istrue_a15_b9_x11 = 0bin1 ELSE istrue_a15_b9_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b9) = S[BVXOR(x12,a15)] THEN istrue_a15_b9_x12 = 0bin1 ELSE istrue_a15_b9_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b9) = S[BVXOR(x13,a15)] THEN istrue_a15_b9_x13 = 0bin1 ELSE istrue_a15_b9_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b9) = S[BVXOR(x14,a15)] THEN istrue_a15_b9_x14 = 0bin1 ELSE istrue_a15_b9_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b9) = S[BVXOR(x15,a15)] THEN istrue_a15_b9_x15 = 0bin1 ELSE istrue_a15_b9_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b9 = BVPLUS(5, 0bin0000@istrue_a15_b9_x0, 0bin0000@istrue_a15_b9_x1, 0bin0000@istrue_a15_b9_x2, 0bin0000@istrue_a15_b9_x3, 0bin0000@istrue_a15_b9_x4, 0bin0000@istrue_a15_b9_x5, 0bin0000@istrue_a15_b9_x6, 0bin0000@istrue_a15_b9_x7, 0bin0000@istrue_a15_b9_x8, 0bin0000@istrue_a15_b9_x9, 0bin0000@istrue_a15_b9_x10, 0bin0000@istrue_a15_b9_x11, 0bin0000@istrue_a15_b9_x12, 0bin0000@istrue_a15_b9_x13, 0bin0000@istrue_a15_b9_x14, 0bin0000@istrue_a15_b9_x15));
ASSERT( IF BVXOR(S[x0],b10) = S[BVXOR(x0,a15)] THEN istrue_a15_b10_x0 = 0bin1 ELSE istrue_a15_b10_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b10) = S[BVXOR(x1,a15)] THEN istrue_a15_b10_x1 = 0bin1 ELSE istrue_a15_b10_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b10) = S[BVXOR(x2,a15)] THEN istrue_a15_b10_x2 = 0bin1 ELSE istrue_a15_b10_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b10) = S[BVXOR(x3,a15)] THEN istrue_a15_b10_x3 = 0bin1 ELSE istrue_a15_b10_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b10) = S[BVXOR(x4,a15)] THEN istrue_a15_b10_x4 = 0bin1 ELSE istrue_a15_b10_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b10) = S[BVXOR(x5,a15)] THEN istrue_a15_b10_x5 = 0bin1 ELSE istrue_a15_b10_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b10) = S[BVXOR(x6,a15)] THEN istrue_a15_b10_x6 = 0bin1 ELSE istrue_a15_b10_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b10) = S[BVXOR(x7,a15)] THEN istrue_a15_b10_x7 = 0bin1 ELSE istrue_a15_b10_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b10) = S[BVXOR(x8,a15)] THEN istrue_a15_b10_x8 = 0bin1 ELSE istrue_a15_b10_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b10) = S[BVXOR(x9,a15)] THEN istrue_a15_b10_x9 = 0bin1 ELSE istrue_a15_b10_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b10) = S[BVXOR(x10,a15)] THEN istrue_a15_b10_x10 = 0bin1 ELSE istrue_a15_b10_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b10) = S[BVXOR(x11,a15)] THEN istrue_a15_b10_x11 = 0bin1 ELSE istrue_a15_b10_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b10) = S[BVXOR(x12,a15)] THEN istrue_a15_b10_x12 = 0bin1 ELSE istrue_a15_b10_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b10) = S[BVXOR(x13,a15)] THEN istrue_a15_b10_x13 = 0bin1 ELSE istrue_a15_b10_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b10) = S[BVXOR(x14,a15)] THEN istrue_a15_b10_x14 = 0bin1 ELSE istrue_a15_b10_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b10) = S[BVXOR(x15,a15)] THEN istrue_a15_b10_x15 = 0bin1 ELSE istrue_a15_b10_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b10 = BVPLUS(5, 0bin0000@istrue_a15_b10_x0, 0bin0000@istrue_a15_b10_x1, 0bin0000@istrue_a15_b10_x2, 0bin0000@istrue_a15_b10_x3, 0bin0000@istrue_a15_b10_x4, 0bin0000@istrue_a15_b10_x5, 0bin0000@istrue_a15_b10_x6, 0bin0000@istrue_a15_b10_x7, 0bin0000@istrue_a15_b10_x8, 0bin0000@istrue_a15_b10_x9, 0bin0000@istrue_a15_b10_x10, 0bin0000@istrue_a15_b10_x11, 0bin0000@istrue_a15_b10_x12, 0bin0000@istrue_a15_b10_x13, 0bin0000@istrue_a15_b10_x14, 0bin0000@istrue_a15_b10_x15));
ASSERT( IF BVXOR(S[x0],b11) = S[BVXOR(x0,a15)] THEN istrue_a15_b11_x0 = 0bin1 ELSE istrue_a15_b11_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b11) = S[BVXOR(x1,a15)] THEN istrue_a15_b11_x1 = 0bin1 ELSE istrue_a15_b11_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b11) = S[BVXOR(x2,a15)] THEN istrue_a15_b11_x2 = 0bin1 ELSE istrue_a15_b11_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b11) = S[BVXOR(x3,a15)] THEN istrue_a15_b11_x3 = 0bin1 ELSE istrue_a15_b11_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b11) = S[BVXOR(x4,a15)] THEN istrue_a15_b11_x4 = 0bin1 ELSE istrue_a15_b11_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b11) = S[BVXOR(x5,a15)] THEN istrue_a15_b11_x5 = 0bin1 ELSE istrue_a15_b11_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b11) = S[BVXOR(x6,a15)] THEN istrue_a15_b11_x6 = 0bin1 ELSE istrue_a15_b11_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b11) = S[BVXOR(x7,a15)] THEN istrue_a15_b11_x7 = 0bin1 ELSE istrue_a15_b11_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b11) = S[BVXOR(x8,a15)] THEN istrue_a15_b11_x8 = 0bin1 ELSE istrue_a15_b11_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b11) = S[BVXOR(x9,a15)] THEN istrue_a15_b11_x9 = 0bin1 ELSE istrue_a15_b11_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b11) = S[BVXOR(x10,a15)] THEN istrue_a15_b11_x10 = 0bin1 ELSE istrue_a15_b11_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b11) = S[BVXOR(x11,a15)] THEN istrue_a15_b11_x11 = 0bin1 ELSE istrue_a15_b11_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b11) = S[BVXOR(x12,a15)] THEN istrue_a15_b11_x12 = 0bin1 ELSE istrue_a15_b11_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b11) = S[BVXOR(x13,a15)] THEN istrue_a15_b11_x13 = 0bin1 ELSE istrue_a15_b11_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b11) = S[BVXOR(x14,a15)] THEN istrue_a15_b11_x14 = 0bin1 ELSE istrue_a15_b11_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b11) = S[BVXOR(x15,a15)] THEN istrue_a15_b11_x15 = 0bin1 ELSE istrue_a15_b11_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b11 = BVPLUS(5, 0bin0000@istrue_a15_b11_x0, 0bin0000@istrue_a15_b11_x1, 0bin0000@istrue_a15_b11_x2, 0bin0000@istrue_a15_b11_x3, 0bin0000@istrue_a15_b11_x4, 0bin0000@istrue_a15_b11_x5, 0bin0000@istrue_a15_b11_x6, 0bin0000@istrue_a15_b11_x7, 0bin0000@istrue_a15_b11_x8, 0bin0000@istrue_a15_b11_x9, 0bin0000@istrue_a15_b11_x10, 0bin0000@istrue_a15_b11_x11, 0bin0000@istrue_a15_b11_x12, 0bin0000@istrue_a15_b11_x13, 0bin0000@istrue_a15_b11_x14, 0bin0000@istrue_a15_b11_x15));
ASSERT( IF BVXOR(S[x0],b12) = S[BVXOR(x0,a15)] THEN istrue_a15_b12_x0 = 0bin1 ELSE istrue_a15_b12_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b12) = S[BVXOR(x1,a15)] THEN istrue_a15_b12_x1 = 0bin1 ELSE istrue_a15_b12_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b12) = S[BVXOR(x2,a15)] THEN istrue_a15_b12_x2 = 0bin1 ELSE istrue_a15_b12_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b12) = S[BVXOR(x3,a15)] THEN istrue_a15_b12_x3 = 0bin1 ELSE istrue_a15_b12_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b12) = S[BVXOR(x4,a15)] THEN istrue_a15_b12_x4 = 0bin1 ELSE istrue_a15_b12_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b12) = S[BVXOR(x5,a15)] THEN istrue_a15_b12_x5 = 0bin1 ELSE istrue_a15_b12_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b12) = S[BVXOR(x6,a15)] THEN istrue_a15_b12_x6 = 0bin1 ELSE istrue_a15_b12_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b12) = S[BVXOR(x7,a15)] THEN istrue_a15_b12_x7 = 0bin1 ELSE istrue_a15_b12_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b12) = S[BVXOR(x8,a15)] THEN istrue_a15_b12_x8 = 0bin1 ELSE istrue_a15_b12_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b12) = S[BVXOR(x9,a15)] THEN istrue_a15_b12_x9 = 0bin1 ELSE istrue_a15_b12_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b12) = S[BVXOR(x10,a15)] THEN istrue_a15_b12_x10 = 0bin1 ELSE istrue_a15_b12_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b12) = S[BVXOR(x11,a15)] THEN istrue_a15_b12_x11 = 0bin1 ELSE istrue_a15_b12_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b12) = S[BVXOR(x12,a15)] THEN istrue_a15_b12_x12 = 0bin1 ELSE istrue_a15_b12_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b12) = S[BVXOR(x13,a15)] THEN istrue_a15_b12_x13 = 0bin1 ELSE istrue_a15_b12_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b12) = S[BVXOR(x14,a15)] THEN istrue_a15_b12_x14 = 0bin1 ELSE istrue_a15_b12_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b12) = S[BVXOR(x15,a15)] THEN istrue_a15_b12_x15 = 0bin1 ELSE istrue_a15_b12_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b12 = BVPLUS(5, 0bin0000@istrue_a15_b12_x0, 0bin0000@istrue_a15_b12_x1, 0bin0000@istrue_a15_b12_x2, 0bin0000@istrue_a15_b12_x3, 0bin0000@istrue_a15_b12_x4, 0bin0000@istrue_a15_b12_x5, 0bin0000@istrue_a15_b12_x6, 0bin0000@istrue_a15_b12_x7, 0bin0000@istrue_a15_b12_x8, 0bin0000@istrue_a15_b12_x9, 0bin0000@istrue_a15_b12_x10, 0bin0000@istrue_a15_b12_x11, 0bin0000@istrue_a15_b12_x12, 0bin0000@istrue_a15_b12_x13, 0bin0000@istrue_a15_b12_x14, 0bin0000@istrue_a15_b12_x15));
ASSERT( IF BVXOR(S[x0],b13) = S[BVXOR(x0,a15)] THEN istrue_a15_b13_x0 = 0bin1 ELSE istrue_a15_b13_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b13) = S[BVXOR(x1,a15)] THEN istrue_a15_b13_x1 = 0bin1 ELSE istrue_a15_b13_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b13) = S[BVXOR(x2,a15)] THEN istrue_a15_b13_x2 = 0bin1 ELSE istrue_a15_b13_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b13) = S[BVXOR(x3,a15)] THEN istrue_a15_b13_x3 = 0bin1 ELSE istrue_a15_b13_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b13) = S[BVXOR(x4,a15)] THEN istrue_a15_b13_x4 = 0bin1 ELSE istrue_a15_b13_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b13) = S[BVXOR(x5,a15)] THEN istrue_a15_b13_x5 = 0bin1 ELSE istrue_a15_b13_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b13) = S[BVXOR(x6,a15)] THEN istrue_a15_b13_x6 = 0bin1 ELSE istrue_a15_b13_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b13) = S[BVXOR(x7,a15)] THEN istrue_a15_b13_x7 = 0bin1 ELSE istrue_a15_b13_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b13) = S[BVXOR(x8,a15)] THEN istrue_a15_b13_x8 = 0bin1 ELSE istrue_a15_b13_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b13) = S[BVXOR(x9,a15)] THEN istrue_a15_b13_x9 = 0bin1 ELSE istrue_a15_b13_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b13) = S[BVXOR(x10,a15)] THEN istrue_a15_b13_x10 = 0bin1 ELSE istrue_a15_b13_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b13) = S[BVXOR(x11,a15)] THEN istrue_a15_b13_x11 = 0bin1 ELSE istrue_a15_b13_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b13) = S[BVXOR(x12,a15)] THEN istrue_a15_b13_x12 = 0bin1 ELSE istrue_a15_b13_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b13) = S[BVXOR(x13,a15)] THEN istrue_a15_b13_x13 = 0bin1 ELSE istrue_a15_b13_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b13) = S[BVXOR(x14,a15)] THEN istrue_a15_b13_x14 = 0bin1 ELSE istrue_a15_b13_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b13) = S[BVXOR(x15,a15)] THEN istrue_a15_b13_x15 = 0bin1 ELSE istrue_a15_b13_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b13 = BVPLUS(5, 0bin0000@istrue_a15_b13_x0, 0bin0000@istrue_a15_b13_x1, 0bin0000@istrue_a15_b13_x2, 0bin0000@istrue_a15_b13_x3, 0bin0000@istrue_a15_b13_x4, 0bin0000@istrue_a15_b13_x5, 0bin0000@istrue_a15_b13_x6, 0bin0000@istrue_a15_b13_x7, 0bin0000@istrue_a15_b13_x8, 0bin0000@istrue_a15_b13_x9, 0bin0000@istrue_a15_b13_x10, 0bin0000@istrue_a15_b13_x11, 0bin0000@istrue_a15_b13_x12, 0bin0000@istrue_a15_b13_x13, 0bin0000@istrue_a15_b13_x14, 0bin0000@istrue_a15_b13_x15));
ASSERT( IF BVXOR(S[x0],b14) = S[BVXOR(x0,a15)] THEN istrue_a15_b14_x0 = 0bin1 ELSE istrue_a15_b14_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b14) = S[BVXOR(x1,a15)] THEN istrue_a15_b14_x1 = 0bin1 ELSE istrue_a15_b14_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b14) = S[BVXOR(x2,a15)] THEN istrue_a15_b14_x2 = 0bin1 ELSE istrue_a15_b14_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b14) = S[BVXOR(x3,a15)] THEN istrue_a15_b14_x3 = 0bin1 ELSE istrue_a15_b14_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b14) = S[BVXOR(x4,a15)] THEN istrue_a15_b14_x4 = 0bin1 ELSE istrue_a15_b14_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b14) = S[BVXOR(x5,a15)] THEN istrue_a15_b14_x5 = 0bin1 ELSE istrue_a15_b14_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b14) = S[BVXOR(x6,a15)] THEN istrue_a15_b14_x6 = 0bin1 ELSE istrue_a15_b14_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b14) = S[BVXOR(x7,a15)] THEN istrue_a15_b14_x7 = 0bin1 ELSE istrue_a15_b14_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b14) = S[BVXOR(x8,a15)] THEN istrue_a15_b14_x8 = 0bin1 ELSE istrue_a15_b14_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b14) = S[BVXOR(x9,a15)] THEN istrue_a15_b14_x9 = 0bin1 ELSE istrue_a15_b14_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b14) = S[BVXOR(x10,a15)] THEN istrue_a15_b14_x10 = 0bin1 ELSE istrue_a15_b14_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b14) = S[BVXOR(x11,a15)] THEN istrue_a15_b14_x11 = 0bin1 ELSE istrue_a15_b14_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b14) = S[BVXOR(x12,a15)] THEN istrue_a15_b14_x12 = 0bin1 ELSE istrue_a15_b14_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b14) = S[BVXOR(x13,a15)] THEN istrue_a15_b14_x13 = 0bin1 ELSE istrue_a15_b14_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b14) = S[BVXOR(x14,a15)] THEN istrue_a15_b14_x14 = 0bin1 ELSE istrue_a15_b14_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b14) = S[BVXOR(x15,a15)] THEN istrue_a15_b14_x15 = 0bin1 ELSE istrue_a15_b14_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b14 = BVPLUS(5, 0bin0000@istrue_a15_b14_x0, 0bin0000@istrue_a15_b14_x1, 0bin0000@istrue_a15_b14_x2, 0bin0000@istrue_a15_b14_x3, 0bin0000@istrue_a15_b14_x4, 0bin0000@istrue_a15_b14_x5, 0bin0000@istrue_a15_b14_x6, 0bin0000@istrue_a15_b14_x7, 0bin0000@istrue_a15_b14_x8, 0bin0000@istrue_a15_b14_x9, 0bin0000@istrue_a15_b14_x10, 0bin0000@istrue_a15_b14_x11, 0bin0000@istrue_a15_b14_x12, 0bin0000@istrue_a15_b14_x13, 0bin0000@istrue_a15_b14_x14, 0bin0000@istrue_a15_b14_x15));
ASSERT( IF BVXOR(S[x0],b15) = S[BVXOR(x0,a15)] THEN istrue_a15_b15_x0 = 0bin1 ELSE istrue_a15_b15_x0 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x1],b15) = S[BVXOR(x1,a15)] THEN istrue_a15_b15_x1 = 0bin1 ELSE istrue_a15_b15_x1 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x2],b15) = S[BVXOR(x2,a15)] THEN istrue_a15_b15_x2 = 0bin1 ELSE istrue_a15_b15_x2 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x3],b15) = S[BVXOR(x3,a15)] THEN istrue_a15_b15_x3 = 0bin1 ELSE istrue_a15_b15_x3 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x4],b15) = S[BVXOR(x4,a15)] THEN istrue_a15_b15_x4 = 0bin1 ELSE istrue_a15_b15_x4 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x5],b15) = S[BVXOR(x5,a15)] THEN istrue_a15_b15_x5 = 0bin1 ELSE istrue_a15_b15_x5 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x6],b15) = S[BVXOR(x6,a15)] THEN istrue_a15_b15_x6 = 0bin1 ELSE istrue_a15_b15_x6 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x7],b15) = S[BVXOR(x7,a15)] THEN istrue_a15_b15_x7 = 0bin1 ELSE istrue_a15_b15_x7 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x8],b15) = S[BVXOR(x8,a15)] THEN istrue_a15_b15_x8 = 0bin1 ELSE istrue_a15_b15_x8 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x9],b15) = S[BVXOR(x9,a15)] THEN istrue_a15_b15_x9 = 0bin1 ELSE istrue_a15_b15_x9 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x10],b15) = S[BVXOR(x10,a15)] THEN istrue_a15_b15_x10 = 0bin1 ELSE istrue_a15_b15_x10 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x11],b15) = S[BVXOR(x11,a15)] THEN istrue_a15_b15_x11 = 0bin1 ELSE istrue_a15_b15_x11 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x12],b15) = S[BVXOR(x12,a15)] THEN istrue_a15_b15_x12 = 0bin1 ELSE istrue_a15_b15_x12 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x13],b15) = S[BVXOR(x13,a15)] THEN istrue_a15_b15_x13 = 0bin1 ELSE istrue_a15_b15_x13 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x14],b15) = S[BVXOR(x14,a15)] THEN istrue_a15_b15_x14 = 0bin1 ELSE istrue_a15_b15_x14 = 0bin0 ENDIF );
ASSERT( IF BVXOR(S[x15],b15) = S[BVXOR(x15,a15)] THEN istrue_a15_b15_x15 = 0bin1 ELSE istrue_a15_b15_x15 = 0bin0 ENDIF );
ASSERT( ddt_a15_b15 = BVPLUS(5, 0bin0000@istrue_a15_b15_x0, 0bin0000@istrue_a15_b15_x1, 0bin0000@istrue_a15_b15_x2, 0bin0000@istrue_a15_b15_x3, 0bin0000@istrue_a15_b15_x4, 0bin0000@istrue_a15_b15_x5, 0bin0000@istrue_a15_b15_x6, 0bin0000@istrue_a15_b15_x7, 0bin0000@istrue_a15_b15_x8, 0bin0000@istrue_a15_b15_x9, 0bin0000@istrue_a15_b15_x10, 0bin0000@istrue_a15_b15_x11, 0bin0000@istrue_a15_b15_x12, 0bin0000@istrue_a15_b15_x13, 0bin0000@istrue_a15_b15_x14, 0bin0000@istrue_a15_b15_x15));
total_freq : BITVECTOR(9);
istruef_a0_b0 : BITVECTOR(1);
istruef_a0_b1 : BITVECTOR(1);
istruef_a0_b2 : BITVECTOR(1);
istruef_a0_b3 : BITVECTOR(1);
istruef_a0_b4 : BITVECTOR(1);
istruef_a0_b5 : BITVECTOR(1);
istruef_a0_b6 : BITVECTOR(1);
istruef_a0_b7 : BITVECTOR(1);
istruef_a0_b8 : BITVECTOR(1);
istruef_a0_b9 : BITVECTOR(1);
istruef_a0_b10 : BITVECTOR(1);
istruef_a0_b11 : BITVECTOR(1);
istruef_a0_b12 : BITVECTOR(1);
istruef_a0_b13 : BITVECTOR(1);
istruef_a0_b14 : BITVECTOR(1);
istruef_a0_b15 : BITVECTOR(1);
istruef_a1_b0 : BITVECTOR(1);
istruef_a1_b1 : BITVECTOR(1);
istruef_a1_b2 : BITVECTOR(1);
istruef_a1_b3 : BITVECTOR(1);
istruef_a1_b4 : BITVECTOR(1);
istruef_a1_b5 : BITVECTOR(1);
istruef_a1_b6 : BITVECTOR(1);
istruef_a1_b7 : BITVECTOR(1);
istruef_a1_b8 : BITVECTOR(1);
istruef_a1_b9 : BITVECTOR(1);
istruef_a1_b10 : BITVECTOR(1);
istruef_a1_b11 : BITVECTOR(1);
istruef_a1_b12 : BITVECTOR(1);
istruef_a1_b13 : BITVECTOR(1);
istruef_a1_b14 : BITVECTOR(1);
istruef_a1_b15 : BITVECTOR(1);
istruef_a2_b0 : BITVECTOR(1);
istruef_a2_b1 : BITVECTOR(1);
istruef_a2_b2 : BITVECTOR(1);
istruef_a2_b3 : BITVECTOR(1);
istruef_a2_b4 : BITVECTOR(1);
istruef_a2_b5 : BITVECTOR(1);
istruef_a2_b6 : BITVECTOR(1);
istruef_a2_b7 : BITVECTOR(1);
istruef_a2_b8 : BITVECTOR(1);
istruef_a2_b9 : BITVECTOR(1);
istruef_a2_b10 : BITVECTOR(1);
istruef_a2_b11 : BITVECTOR(1);
istruef_a2_b12 : BITVECTOR(1);
istruef_a2_b13 : BITVECTOR(1);
istruef_a2_b14 : BITVECTOR(1);
istruef_a2_b15 : BITVECTOR(1);
istruef_a3_b0 : BITVECTOR(1);
istruef_a3_b1 : BITVECTOR(1);
istruef_a3_b2 : BITVECTOR(1);
istruef_a3_b3 : BITVECTOR(1);
istruef_a3_b4 : BITVECTOR(1);
istruef_a3_b5 : BITVECTOR(1);
istruef_a3_b6 : BITVECTOR(1);
istruef_a3_b7 : BITVECTOR(1);
istruef_a3_b8 : BITVECTOR(1);
istruef_a3_b9 : BITVECTOR(1);
istruef_a3_b10 : BITVECTOR(1);
istruef_a3_b11 : BITVECTOR(1);
istruef_a3_b12 : BITVECTOR(1);
istruef_a3_b13 : BITVECTOR(1);
istruef_a3_b14 : BITVECTOR(1);
istruef_a3_b15 : BITVECTOR(1);
istruef_a4_b0 : BITVECTOR(1);
istruef_a4_b1 : BITVECTOR(1);
istruef_a4_b2 : BITVECTOR(1);
istruef_a4_b3 : BITVECTOR(1);
istruef_a4_b4 : BITVECTOR(1);
istruef_a4_b5 : BITVECTOR(1);
istruef_a4_b6 : BITVECTOR(1);
istruef_a4_b7 : BITVECTOR(1);
istruef_a4_b8 : BITVECTOR(1);
istruef_a4_b9 : BITVECTOR(1);
istruef_a4_b10 : BITVECTOR(1);
istruef_a4_b11 : BITVECTOR(1);
istruef_a4_b12 : BITVECTOR(1);
istruef_a4_b13 : BITVECTOR(1);
istruef_a4_b14 : BITVECTOR(1);
istruef_a4_b15 : BITVECTOR(1);
istruef_a5_b0 : BITVECTOR(1);
istruef_a5_b1 : BITVECTOR(1);
istruef_a5_b2 : BITVECTOR(1);
istruef_a5_b3 : BITVECTOR(1);
istruef_a5_b4 : BITVECTOR(1);
istruef_a5_b5 : BITVECTOR(1);
istruef_a5_b6 : BITVECTOR(1);
istruef_a5_b7 : BITVECTOR(1);
istruef_a5_b8 : BITVECTOR(1);
istruef_a5_b9 : BITVECTOR(1);
istruef_a5_b10 : BITVECTOR(1);
istruef_a5_b11 : BITVECTOR(1);
istruef_a5_b12 : BITVECTOR(1);
istruef_a5_b13 : BITVECTOR(1);
istruef_a5_b14 : BITVECTOR(1);
istruef_a5_b15 : BITVECTOR(1);
istruef_a6_b0 : BITVECTOR(1);
istruef_a6_b1 : BITVECTOR(1);
istruef_a6_b2 : BITVECTOR(1);
istruef_a6_b3 : BITVECTOR(1);
istruef_a6_b4 : BITVECTOR(1);
istruef_a6_b5 : BITVECTOR(1);
istruef_a6_b6 : BITVECTOR(1);
istruef_a6_b7 : BITVECTOR(1);
istruef_a6_b8 : BITVECTOR(1);
istruef_a6_b9 : BITVECTOR(1);
istruef_a6_b10 : BITVECTOR(1);
istruef_a6_b11 : BITVECTOR(1);
istruef_a6_b12 : BITVECTOR(1);
istruef_a6_b13 : BITVECTOR(1);
istruef_a6_b14 : BITVECTOR(1);
istruef_a6_b15 : BITVECTOR(1);
istruef_a7_b0 : BITVECTOR(1);
istruef_a7_b1 : BITVECTOR(1);
istruef_a7_b2 : BITVECTOR(1);
istruef_a7_b3 : BITVECTOR(1);
istruef_a7_b4 : BITVECTOR(1);
istruef_a7_b5 : BITVECTOR(1);
istruef_a7_b6 : BITVECTOR(1);
istruef_a7_b7 : BITVECTOR(1);
istruef_a7_b8 : BITVECTOR(1);
istruef_a7_b9 : BITVECTOR(1);
istruef_a7_b10 : BITVECTOR(1);
istruef_a7_b11 : BITVECTOR(1);
istruef_a7_b12 : BITVECTOR(1);
istruef_a7_b13 : BITVECTOR(1);
istruef_a7_b14 : BITVECTOR(1);
istruef_a7_b15 : BITVECTOR(1);
istruef_a8_b0 : BITVECTOR(1);
istruef_a8_b1 : BITVECTOR(1);
istruef_a8_b2 : BITVECTOR(1);
istruef_a8_b3 : BITVECTOR(1);
istruef_a8_b4 : BITVECTOR(1);
istruef_a8_b5 : BITVECTOR(1);
istruef_a8_b6 : BITVECTOR(1);
istruef_a8_b7 : BITVECTOR(1);
istruef_a8_b8 : BITVECTOR(1);
istruef_a8_b9 : BITVECTOR(1);
istruef_a8_b10 : BITVECTOR(1);
istruef_a8_b11 : BITVECTOR(1);
istruef_a8_b12 : BITVECTOR(1);
istruef_a8_b13 : BITVECTOR(1);
istruef_a8_b14 : BITVECTOR(1);
istruef_a8_b15 : BITVECTOR(1);
istruef_a9_b0 : BITVECTOR(1);
istruef_a9_b1 : BITVECTOR(1);
istruef_a9_b2 : BITVECTOR(1);
istruef_a9_b3 : BITVECTOR(1);
istruef_a9_b4 : BITVECTOR(1);
istruef_a9_b5 : BITVECTOR(1);
istruef_a9_b6 : BITVECTOR(1);
istruef_a9_b7 : BITVECTOR(1);
istruef_a9_b8 : BITVECTOR(1);
istruef_a9_b9 : BITVECTOR(1);
istruef_a9_b10 : BITVECTOR(1);
istruef_a9_b11 : BITVECTOR(1);
istruef_a9_b12 : BITVECTOR(1);
istruef_a9_b13 : BITVECTOR(1);
istruef_a9_b14 : BITVECTOR(1);
istruef_a9_b15 : BITVECTOR(1);
istruef_a10_b0 : BITVECTOR(1);
istruef_a10_b1 : BITVECTOR(1);
istruef_a10_b2 : BITVECTOR(1);
istruef_a10_b3 : BITVECTOR(1);
istruef_a10_b4 : BITVECTOR(1);
istruef_a10_b5 : BITVECTOR(1);
istruef_a10_b6 : BITVECTOR(1);
istruef_a10_b7 : BITVECTOR(1);
istruef_a10_b8 : BITVECTOR(1);
istruef_a10_b9 : BITVECTOR(1);
istruef_a10_b10 : BITVECTOR(1);
istruef_a10_b11 : BITVECTOR(1);
istruef_a10_b12 : BITVECTOR(1);
istruef_a10_b13 : BITVECTOR(1);
istruef_a10_b14 : BITVECTOR(1);
istruef_a10_b15 : BITVECTOR(1);
istruef_a11_b0 : BITVECTOR(1);
istruef_a11_b1 : BITVECTOR(1);
istruef_a11_b2 : BITVECTOR(1);
istruef_a11_b3 : BITVECTOR(1);
istruef_a11_b4 : BITVECTOR(1);
istruef_a11_b5 : BITVECTOR(1);
istruef_a11_b6 : BITVECTOR(1);
istruef_a11_b7 : BITVECTOR(1);
istruef_a11_b8 : BITVECTOR(1);
istruef_a11_b9 : BITVECTOR(1);
istruef_a11_b10 : BITVECTOR(1);
istruef_a11_b11 : BITVECTOR(1);
istruef_a11_b12 : BITVECTOR(1);
istruef_a11_b13 : BITVECTOR(1);
istruef_a11_b14 : BITVECTOR(1);
istruef_a11_b15 : BITVECTOR(1);
istruef_a12_b0 : BITVECTOR(1);
istruef_a12_b1 : BITVECTOR(1);
istruef_a12_b2 : BITVECTOR(1);
istruef_a12_b3 : BITVECTOR(1);
istruef_a12_b4 : BITVECTOR(1);
istruef_a12_b5 : BITVECTOR(1);
istruef_a12_b6 : BITVECTOR(1);
istruef_a12_b7 : BITVECTOR(1);
istruef_a12_b8 : BITVECTOR(1);
istruef_a12_b9 : BITVECTOR(1);
istruef_a12_b10 : BITVECTOR(1);
istruef_a12_b11 : BITVECTOR(1);
istruef_a12_b12 : BITVECTOR(1);
istruef_a12_b13 : BITVECTOR(1);
istruef_a12_b14 : BITVECTOR(1);
istruef_a12_b15 : BITVECTOR(1);
istruef_a13_b0 : BITVECTOR(1);
istruef_a13_b1 : BITVECTOR(1);
istruef_a13_b2 : BITVECTOR(1);
istruef_a13_b3 : BITVECTOR(1);
istruef_a13_b4 : BITVECTOR(1);
istruef_a13_b5 : BITVECTOR(1);
istruef_a13_b6 : BITVECTOR(1);
istruef_a13_b7 : BITVECTOR(1);
istruef_a13_b8 : BITVECTOR(1);
istruef_a13_b9 : BITVECTOR(1);
istruef_a13_b10 : BITVECTOR(1);
istruef_a13_b11 : BITVECTOR(1);
istruef_a13_b12 : BITVECTOR(1);
istruef_a13_b13 : BITVECTOR(1);
istruef_a13_b14 : BITVECTOR(1);
istruef_a13_b15 : BITVECTOR(1);
istruef_a14_b0 : BITVECTOR(1);
istruef_a14_b1 : BITVECTOR(1);
istruef_a14_b2 : BITVECTOR(1);
istruef_a14_b3 : BITVECTOR(1);
istruef_a14_b4 : BITVECTOR(1);
istruef_a14_b5 : BITVECTOR(1);
istruef_a14_b6 : BITVECTOR(1);
istruef_a14_b7 : BITVECTOR(1);
istruef_a14_b8 : BITVECTOR(1);
istruef_a14_b9 : BITVECTOR(1);
istruef_a14_b10 : BITVECTOR(1);
istruef_a14_b11 : BITVECTOR(1);
istruef_a14_b12 : BITVECTOR(1);
istruef_a14_b13 : BITVECTOR(1);
istruef_a14_b14 : BITVECTOR(1);
istruef_a14_b15 : BITVECTOR(1);
istruef_a15_b0 : BITVECTOR(1);
istruef_a15_b1 : BITVECTOR(1);
istruef_a15_b2 : BITVECTOR(1);
istruef_a15_b3 : BITVECTOR(1);
istruef_a15_b4 : BITVECTOR(1);
istruef_a15_b5 : BITVECTOR(1);
istruef_a15_b6 : BITVECTOR(1);
istruef_a15_b7 : BITVECTOR(1);
istruef_a15_b8 : BITVECTOR(1);
istruef_a15_b9 : BITVECTOR(1);
istruef_a15_b10 : BITVECTOR(1);
istruef_a15_b11 : BITVECTOR(1);
istruef_a15_b12 : BITVECTOR(1);
istruef_a15_b13 : BITVECTOR(1);
istruef_a15_b14 : BITVECTOR(1);
istruef_a15_b15 : BITVECTOR(1);
ASSERT ( istruef_a0_b0 = 0bin0 );
ASSERT ( istruef_a0_b1 = 0bin0 );
ASSERT ( istruef_a0_b2 = 0bin0 );
ASSERT ( istruef_a0_b3 = 0bin0 );
ASSERT ( istruef_a0_b4 = 0bin0 );
ASSERT ( istruef_a0_b5 = 0bin0 );
ASSERT ( istruef_a0_b6 = 0bin0 );
ASSERT ( istruef_a0_b7 = 0bin0 );
ASSERT ( istruef_a0_b8 = 0bin0 );
ASSERT ( istruef_a0_b9 = 0bin0 );
ASSERT ( istruef_a0_b10 = 0bin0 );
ASSERT ( istruef_a0_b11 = 0bin0 );
ASSERT ( istruef_a0_b12 = 0bin0 );
ASSERT ( istruef_a0_b13 = 0bin0 );
ASSERT ( istruef_a0_b14 = 0bin0 );
ASSERT ( istruef_a0_b15 = 0bin0 );
ASSERT( IF BVGE(ddt_a1_b0,0bin00100) THEN istruef_a1_b0 = 0bin1 ELSE istruef_a1_b0 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a1_b1,0bin00100) THEN istruef_a1_b1 = 0bin1 ELSE istruef_a1_b1 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a1_b2,0bin00100) THEN istruef_a1_b2 = 0bin1 ELSE istruef_a1_b2 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a1_b3,0bin00100) THEN istruef_a1_b3 = 0bin1 ELSE istruef_a1_b3 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a1_b4,0bin00100) THEN istruef_a1_b4 = 0bin1 ELSE istruef_a1_b4 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a1_b5,0bin00100) THEN istruef_a1_b5 = 0bin1 ELSE istruef_a1_b5 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a1_b6,0bin00100) THEN istruef_a1_b6 = 0bin1 ELSE istruef_a1_b6 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a1_b7,0bin00100) THEN istruef_a1_b7 = 0bin1 ELSE istruef_a1_b7 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a1_b8,0bin00100) THEN istruef_a1_b8 = 0bin1 ELSE istruef_a1_b8 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a1_b9,0bin00100) THEN istruef_a1_b9 = 0bin1 ELSE istruef_a1_b9 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a1_b10,0bin00100) THEN istruef_a1_b10 = 0bin1 ELSE istruef_a1_b10 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a1_b11,0bin00100) THEN istruef_a1_b11 = 0bin1 ELSE istruef_a1_b11 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a1_b12,0bin00100) THEN istruef_a1_b12 = 0bin1 ELSE istruef_a1_b12 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a1_b13,0bin00100) THEN istruef_a1_b13 = 0bin1 ELSE istruef_a1_b13 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a1_b14,0bin00100) THEN istruef_a1_b14 = 0bin1 ELSE istruef_a1_b14 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a1_b15,0bin00100) THEN istruef_a1_b15 = 0bin1 ELSE istruef_a1_b15 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b0,0bin00100) THEN istruef_a2_b0 = 0bin1 ELSE istruef_a2_b0 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b1,0bin00100) THEN istruef_a2_b1 = 0bin1 ELSE istruef_a2_b1 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b2,0bin00100) THEN istruef_a2_b2 = 0bin1 ELSE istruef_a2_b2 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b3,0bin00100) THEN istruef_a2_b3 = 0bin1 ELSE istruef_a2_b3 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b4,0bin00100) THEN istruef_a2_b4 = 0bin1 ELSE istruef_a2_b4 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b5,0bin00100) THEN istruef_a2_b5 = 0bin1 ELSE istruef_a2_b5 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b6,0bin00100) THEN istruef_a2_b6 = 0bin1 ELSE istruef_a2_b6 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b7,0bin00100) THEN istruef_a2_b7 = 0bin1 ELSE istruef_a2_b7 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b8,0bin00100) THEN istruef_a2_b8 = 0bin1 ELSE istruef_a2_b8 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b9,0bin00100) THEN istruef_a2_b9 = 0bin1 ELSE istruef_a2_b9 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b10,0bin00100) THEN istruef_a2_b10 = 0bin1 ELSE istruef_a2_b10 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b11,0bin00100) THEN istruef_a2_b11 = 0bin1 ELSE istruef_a2_b11 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b12,0bin00100) THEN istruef_a2_b12 = 0bin1 ELSE istruef_a2_b12 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b13,0bin00100) THEN istruef_a2_b13 = 0bin1 ELSE istruef_a2_b13 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b14,0bin00100) THEN istruef_a2_b14 = 0bin1 ELSE istruef_a2_b14 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a2_b15,0bin00100) THEN istruef_a2_b15 = 0bin1 ELSE istruef_a2_b15 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b0,0bin00100) THEN istruef_a3_b0 = 0bin1 ELSE istruef_a3_b0 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b1,0bin00100) THEN istruef_a3_b1 = 0bin1 ELSE istruef_a3_b1 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b2,0bin00100) THEN istruef_a3_b2 = 0bin1 ELSE istruef_a3_b2 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b3,0bin00100) THEN istruef_a3_b3 = 0bin1 ELSE istruef_a3_b3 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b4,0bin00100) THEN istruef_a3_b4 = 0bin1 ELSE istruef_a3_b4 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b5,0bin00100) THEN istruef_a3_b5 = 0bin1 ELSE istruef_a3_b5 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b6,0bin00100) THEN istruef_a3_b6 = 0bin1 ELSE istruef_a3_b6 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b7,0bin00100) THEN istruef_a3_b7 = 0bin1 ELSE istruef_a3_b7 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b8,0bin00100) THEN istruef_a3_b8 = 0bin1 ELSE istruef_a3_b8 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b9,0bin00100) THEN istruef_a3_b9 = 0bin1 ELSE istruef_a3_b9 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b10,0bin00100) THEN istruef_a3_b10 = 0bin1 ELSE istruef_a3_b10 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b11,0bin00100) THEN istruef_a3_b11 = 0bin1 ELSE istruef_a3_b11 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b12,0bin00100) THEN istruef_a3_b12 = 0bin1 ELSE istruef_a3_b12 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b13,0bin00100) THEN istruef_a3_b13 = 0bin1 ELSE istruef_a3_b13 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b14,0bin00100) THEN istruef_a3_b14 = 0bin1 ELSE istruef_a3_b14 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a3_b15,0bin00100) THEN istruef_a3_b15 = 0bin1 ELSE istruef_a3_b15 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b0,0bin00100) THEN istruef_a4_b0 = 0bin1 ELSE istruef_a4_b0 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b1,0bin00100) THEN istruef_a4_b1 = 0bin1 ELSE istruef_a4_b1 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b2,0bin00100) THEN istruef_a4_b2 = 0bin1 ELSE istruef_a4_b2 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b3,0bin00100) THEN istruef_a4_b3 = 0bin1 ELSE istruef_a4_b3 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b4,0bin00100) THEN istruef_a4_b4 = 0bin1 ELSE istruef_a4_b4 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b5,0bin00100) THEN istruef_a4_b5 = 0bin1 ELSE istruef_a4_b5 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b6,0bin00100) THEN istruef_a4_b6 = 0bin1 ELSE istruef_a4_b6 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b7,0bin00100) THEN istruef_a4_b7 = 0bin1 ELSE istruef_a4_b7 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b8,0bin00100) THEN istruef_a4_b8 = 0bin1 ELSE istruef_a4_b8 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b9,0bin00100) THEN istruef_a4_b9 = 0bin1 ELSE istruef_a4_b9 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b10,0bin00100) THEN istruef_a4_b10 = 0bin1 ELSE istruef_a4_b10 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b11,0bin00100) THEN istruef_a4_b11 = 0bin1 ELSE istruef_a4_b11 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b12,0bin00100) THEN istruef_a4_b12 = 0bin1 ELSE istruef_a4_b12 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b13,0bin00100) THEN istruef_a4_b13 = 0bin1 ELSE istruef_a4_b13 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b14,0bin00100) THEN istruef_a4_b14 = 0bin1 ELSE istruef_a4_b14 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a4_b15,0bin00100) THEN istruef_a4_b15 = 0bin1 ELSE istruef_a4_b15 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b0,0bin00100) THEN istruef_a5_b0 = 0bin1 ELSE istruef_a5_b0 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b1,0bin00100) THEN istruef_a5_b1 = 0bin1 ELSE istruef_a5_b1 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b2,0bin00100) THEN istruef_a5_b2 = 0bin1 ELSE istruef_a5_b2 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b3,0bin00100) THEN istruef_a5_b3 = 0bin1 ELSE istruef_a5_b3 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b4,0bin00100) THEN istruef_a5_b4 = 0bin1 ELSE istruef_a5_b4 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b5,0bin00100) THEN istruef_a5_b5 = 0bin1 ELSE istruef_a5_b5 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b6,0bin00100) THEN istruef_a5_b6 = 0bin1 ELSE istruef_a5_b6 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b7,0bin00100) THEN istruef_a5_b7 = 0bin1 ELSE istruef_a5_b7 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b8,0bin00100) THEN istruef_a5_b8 = 0bin1 ELSE istruef_a5_b8 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b9,0bin00100) THEN istruef_a5_b9 = 0bin1 ELSE istruef_a5_b9 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b10,0bin00100) THEN istruef_a5_b10 = 0bin1 ELSE istruef_a5_b10 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b11,0bin00100) THEN istruef_a5_b11 = 0bin1 ELSE istruef_a5_b11 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b12,0bin00100) THEN istruef_a5_b12 = 0bin1 ELSE istruef_a5_b12 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b13,0bin00100) THEN istruef_a5_b13 = 0bin1 ELSE istruef_a5_b13 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b14,0bin00100) THEN istruef_a5_b14 = 0bin1 ELSE istruef_a5_b14 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a5_b15,0bin00100) THEN istruef_a5_b15 = 0bin1 ELSE istruef_a5_b15 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b0,0bin00100) THEN istruef_a6_b0 = 0bin1 ELSE istruef_a6_b0 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b1,0bin00100) THEN istruef_a6_b1 = 0bin1 ELSE istruef_a6_b1 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b2,0bin00100) THEN istruef_a6_b2 = 0bin1 ELSE istruef_a6_b2 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b3,0bin00100) THEN istruef_a6_b3 = 0bin1 ELSE istruef_a6_b3 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b4,0bin00100) THEN istruef_a6_b4 = 0bin1 ELSE istruef_a6_b4 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b5,0bin00100) THEN istruef_a6_b5 = 0bin1 ELSE istruef_a6_b5 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b6,0bin00100) THEN istruef_a6_b6 = 0bin1 ELSE istruef_a6_b6 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b7,0bin00100) THEN istruef_a6_b7 = 0bin1 ELSE istruef_a6_b7 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b8,0bin00100) THEN istruef_a6_b8 = 0bin1 ELSE istruef_a6_b8 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b9,0bin00100) THEN istruef_a6_b9 = 0bin1 ELSE istruef_a6_b9 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b10,0bin00100) THEN istruef_a6_b10 = 0bin1 ELSE istruef_a6_b10 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b11,0bin00100) THEN istruef_a6_b11 = 0bin1 ELSE istruef_a6_b11 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b12,0bin00100) THEN istruef_a6_b12 = 0bin1 ELSE istruef_a6_b12 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b13,0bin00100) THEN istruef_a6_b13 = 0bin1 ELSE istruef_a6_b13 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b14,0bin00100) THEN istruef_a6_b14 = 0bin1 ELSE istruef_a6_b14 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a6_b15,0bin00100) THEN istruef_a6_b15 = 0bin1 ELSE istruef_a6_b15 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b0,0bin00100) THEN istruef_a7_b0 = 0bin1 ELSE istruef_a7_b0 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b1,0bin00100) THEN istruef_a7_b1 = 0bin1 ELSE istruef_a7_b1 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b2,0bin00100) THEN istruef_a7_b2 = 0bin1 ELSE istruef_a7_b2 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b3,0bin00100) THEN istruef_a7_b3 = 0bin1 ELSE istruef_a7_b3 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b4,0bin00100) THEN istruef_a7_b4 = 0bin1 ELSE istruef_a7_b4 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b5,0bin00100) THEN istruef_a7_b5 = 0bin1 ELSE istruef_a7_b5 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b6,0bin00100) THEN istruef_a7_b6 = 0bin1 ELSE istruef_a7_b6 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b7,0bin00100) THEN istruef_a7_b7 = 0bin1 ELSE istruef_a7_b7 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b8,0bin00100) THEN istruef_a7_b8 = 0bin1 ELSE istruef_a7_b8 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b9,0bin00100) THEN istruef_a7_b9 = 0bin1 ELSE istruef_a7_b9 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b10,0bin00100) THEN istruef_a7_b10 = 0bin1 ELSE istruef_a7_b10 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b11,0bin00100) THEN istruef_a7_b11 = 0bin1 ELSE istruef_a7_b11 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b12,0bin00100) THEN istruef_a7_b12 = 0bin1 ELSE istruef_a7_b12 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b13,0bin00100) THEN istruef_a7_b13 = 0bin1 ELSE istruef_a7_b13 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b14,0bin00100) THEN istruef_a7_b14 = 0bin1 ELSE istruef_a7_b14 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a7_b15,0bin00100) THEN istruef_a7_b15 = 0bin1 ELSE istruef_a7_b15 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b0,0bin00100) THEN istruef_a8_b0 = 0bin1 ELSE istruef_a8_b0 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b1,0bin00100) THEN istruef_a8_b1 = 0bin1 ELSE istruef_a8_b1 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b2,0bin00100) THEN istruef_a8_b2 = 0bin1 ELSE istruef_a8_b2 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b3,0bin00100) THEN istruef_a8_b3 = 0bin1 ELSE istruef_a8_b3 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b4,0bin00100) THEN istruef_a8_b4 = 0bin1 ELSE istruef_a8_b4 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b5,0bin00100) THEN istruef_a8_b5 = 0bin1 ELSE istruef_a8_b5 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b6,0bin00100) THEN istruef_a8_b6 = 0bin1 ELSE istruef_a8_b6 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b7,0bin00100) THEN istruef_a8_b7 = 0bin1 ELSE istruef_a8_b7 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b8,0bin00100) THEN istruef_a8_b8 = 0bin1 ELSE istruef_a8_b8 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b9,0bin00100) THEN istruef_a8_b9 = 0bin1 ELSE istruef_a8_b9 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b10,0bin00100) THEN istruef_a8_b10 = 0bin1 ELSE istruef_a8_b10 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b11,0bin00100) THEN istruef_a8_b11 = 0bin1 ELSE istruef_a8_b11 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b12,0bin00100) THEN istruef_a8_b12 = 0bin1 ELSE istruef_a8_b12 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b13,0bin00100) THEN istruef_a8_b13 = 0bin1 ELSE istruef_a8_b13 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b14,0bin00100) THEN istruef_a8_b14 = 0bin1 ELSE istruef_a8_b14 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a8_b15,0bin00100) THEN istruef_a8_b15 = 0bin1 ELSE istruef_a8_b15 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b0,0bin00100) THEN istruef_a9_b0 = 0bin1 ELSE istruef_a9_b0 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b1,0bin00100) THEN istruef_a9_b1 = 0bin1 ELSE istruef_a9_b1 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b2,0bin00100) THEN istruef_a9_b2 = 0bin1 ELSE istruef_a9_b2 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b3,0bin00100) THEN istruef_a9_b3 = 0bin1 ELSE istruef_a9_b3 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b4,0bin00100) THEN istruef_a9_b4 = 0bin1 ELSE istruef_a9_b4 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b5,0bin00100) THEN istruef_a9_b5 = 0bin1 ELSE istruef_a9_b5 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b6,0bin00100) THEN istruef_a9_b6 = 0bin1 ELSE istruef_a9_b6 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b7,0bin00100) THEN istruef_a9_b7 = 0bin1 ELSE istruef_a9_b7 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b8,0bin00100) THEN istruef_a9_b8 = 0bin1 ELSE istruef_a9_b8 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b9,0bin00100) THEN istruef_a9_b9 = 0bin1 ELSE istruef_a9_b9 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b10,0bin00100) THEN istruef_a9_b10 = 0bin1 ELSE istruef_a9_b10 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b11,0bin00100) THEN istruef_a9_b11 = 0bin1 ELSE istruef_a9_b11 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b12,0bin00100) THEN istruef_a9_b12 = 0bin1 ELSE istruef_a9_b12 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b13,0bin00100) THEN istruef_a9_b13 = 0bin1 ELSE istruef_a9_b13 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b14,0bin00100) THEN istruef_a9_b14 = 0bin1 ELSE istruef_a9_b14 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a9_b15,0bin00100) THEN istruef_a9_b15 = 0bin1 ELSE istruef_a9_b15 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b0,0bin00100) THEN istruef_a10_b0 = 0bin1 ELSE istruef_a10_b0 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b1,0bin00100) THEN istruef_a10_b1 = 0bin1 ELSE istruef_a10_b1 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b2,0bin00100) THEN istruef_a10_b2 = 0bin1 ELSE istruef_a10_b2 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b3,0bin00100) THEN istruef_a10_b3 = 0bin1 ELSE istruef_a10_b3 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b4,0bin00100) THEN istruef_a10_b4 = 0bin1 ELSE istruef_a10_b4 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b5,0bin00100) THEN istruef_a10_b5 = 0bin1 ELSE istruef_a10_b5 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b6,0bin00100) THEN istruef_a10_b6 = 0bin1 ELSE istruef_a10_b6 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b7,0bin00100) THEN istruef_a10_b7 = 0bin1 ELSE istruef_a10_b7 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b8,0bin00100) THEN istruef_a10_b8 = 0bin1 ELSE istruef_a10_b8 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b9,0bin00100) THEN istruef_a10_b9 = 0bin1 ELSE istruef_a10_b9 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b10,0bin00100) THEN istruef_a10_b10 = 0bin1 ELSE istruef_a10_b10 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b11,0bin00100) THEN istruef_a10_b11 = 0bin1 ELSE istruef_a10_b11 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b12,0bin00100) THEN istruef_a10_b12 = 0bin1 ELSE istruef_a10_b12 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b13,0bin00100) THEN istruef_a10_b13 = 0bin1 ELSE istruef_a10_b13 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b14,0bin00100) THEN istruef_a10_b14 = 0bin1 ELSE istruef_a10_b14 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a10_b15,0bin00100) THEN istruef_a10_b15 = 0bin1 ELSE istruef_a10_b15 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b0,0bin00100) THEN istruef_a11_b0 = 0bin1 ELSE istruef_a11_b0 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b1,0bin00100) THEN istruef_a11_b1 = 0bin1 ELSE istruef_a11_b1 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b2,0bin00100) THEN istruef_a11_b2 = 0bin1 ELSE istruef_a11_b2 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b3,0bin00100) THEN istruef_a11_b3 = 0bin1 ELSE istruef_a11_b3 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b4,0bin00100) THEN istruef_a11_b4 = 0bin1 ELSE istruef_a11_b4 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b5,0bin00100) THEN istruef_a11_b5 = 0bin1 ELSE istruef_a11_b5 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b6,0bin00100) THEN istruef_a11_b6 = 0bin1 ELSE istruef_a11_b6 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b7,0bin00100) THEN istruef_a11_b7 = 0bin1 ELSE istruef_a11_b7 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b8,0bin00100) THEN istruef_a11_b8 = 0bin1 ELSE istruef_a11_b8 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b9,0bin00100) THEN istruef_a11_b9 = 0bin1 ELSE istruef_a11_b9 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b10,0bin00100) THEN istruef_a11_b10 = 0bin1 ELSE istruef_a11_b10 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b11,0bin00100) THEN istruef_a11_b11 = 0bin1 ELSE istruef_a11_b11 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b12,0bin00100) THEN istruef_a11_b12 = 0bin1 ELSE istruef_a11_b12 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b13,0bin00100) THEN istruef_a11_b13 = 0bin1 ELSE istruef_a11_b13 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b14,0bin00100) THEN istruef_a11_b14 = 0bin1 ELSE istruef_a11_b14 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a11_b15,0bin00100) THEN istruef_a11_b15 = 0bin1 ELSE istruef_a11_b15 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b0,0bin00100) THEN istruef_a12_b0 = 0bin1 ELSE istruef_a12_b0 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b1,0bin00100) THEN istruef_a12_b1 = 0bin1 ELSE istruef_a12_b1 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b2,0bin00100) THEN istruef_a12_b2 = 0bin1 ELSE istruef_a12_b2 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b3,0bin00100) THEN istruef_a12_b3 = 0bin1 ELSE istruef_a12_b3 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b4,0bin00100) THEN istruef_a12_b4 = 0bin1 ELSE istruef_a12_b4 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b5,0bin00100) THEN istruef_a12_b5 = 0bin1 ELSE istruef_a12_b5 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b6,0bin00100) THEN istruef_a12_b6 = 0bin1 ELSE istruef_a12_b6 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b7,0bin00100) THEN istruef_a12_b7 = 0bin1 ELSE istruef_a12_b7 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b8,0bin00100) THEN istruef_a12_b8 = 0bin1 ELSE istruef_a12_b8 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b9,0bin00100) THEN istruef_a12_b9 = 0bin1 ELSE istruef_a12_b9 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b10,0bin00100) THEN istruef_a12_b10 = 0bin1 ELSE istruef_a12_b10 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b11,0bin00100) THEN istruef_a12_b11 = 0bin1 ELSE istruef_a12_b11 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b12,0bin00100) THEN istruef_a12_b12 = 0bin1 ELSE istruef_a12_b12 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b13,0bin00100) THEN istruef_a12_b13 = 0bin1 ELSE istruef_a12_b13 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b14,0bin00100) THEN istruef_a12_b14 = 0bin1 ELSE istruef_a12_b14 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a12_b15,0bin00100) THEN istruef_a12_b15 = 0bin1 ELSE istruef_a12_b15 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b0,0bin00100) THEN istruef_a13_b0 = 0bin1 ELSE istruef_a13_b0 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b1,0bin00100) THEN istruef_a13_b1 = 0bin1 ELSE istruef_a13_b1 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b2,0bin00100) THEN istruef_a13_b2 = 0bin1 ELSE istruef_a13_b2 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b3,0bin00100) THEN istruef_a13_b3 = 0bin1 ELSE istruef_a13_b3 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b4,0bin00100) THEN istruef_a13_b4 = 0bin1 ELSE istruef_a13_b4 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b5,0bin00100) THEN istruef_a13_b5 = 0bin1 ELSE istruef_a13_b5 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b6,0bin00100) THEN istruef_a13_b6 = 0bin1 ELSE istruef_a13_b6 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b7,0bin00100) THEN istruef_a13_b7 = 0bin1 ELSE istruef_a13_b7 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b8,0bin00100) THEN istruef_a13_b8 = 0bin1 ELSE istruef_a13_b8 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b9,0bin00100) THEN istruef_a13_b9 = 0bin1 ELSE istruef_a13_b9 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b10,0bin00100) THEN istruef_a13_b10 = 0bin1 ELSE istruef_a13_b10 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b11,0bin00100) THEN istruef_a13_b11 = 0bin1 ELSE istruef_a13_b11 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b12,0bin00100) THEN istruef_a13_b12 = 0bin1 ELSE istruef_a13_b12 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b13,0bin00100) THEN istruef_a13_b13 = 0bin1 ELSE istruef_a13_b13 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b14,0bin00100) THEN istruef_a13_b14 = 0bin1 ELSE istruef_a13_b14 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a13_b15,0bin00100) THEN istruef_a13_b15 = 0bin1 ELSE istruef_a13_b15 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b0,0bin00100) THEN istruef_a14_b0 = 0bin1 ELSE istruef_a14_b0 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b1,0bin00100) THEN istruef_a14_b1 = 0bin1 ELSE istruef_a14_b1 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b2,0bin00100) THEN istruef_a14_b2 = 0bin1 ELSE istruef_a14_b2 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b3,0bin00100) THEN istruef_a14_b3 = 0bin1 ELSE istruef_a14_b3 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b4,0bin00100) THEN istruef_a14_b4 = 0bin1 ELSE istruef_a14_b4 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b5,0bin00100) THEN istruef_a14_b5 = 0bin1 ELSE istruef_a14_b5 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b6,0bin00100) THEN istruef_a14_b6 = 0bin1 ELSE istruef_a14_b6 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b7,0bin00100) THEN istruef_a14_b7 = 0bin1 ELSE istruef_a14_b7 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b8,0bin00100) THEN istruef_a14_b8 = 0bin1 ELSE istruef_a14_b8 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b9,0bin00100) THEN istruef_a14_b9 = 0bin1 ELSE istruef_a14_b9 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b10,0bin00100) THEN istruef_a14_b10 = 0bin1 ELSE istruef_a14_b10 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b11,0bin00100) THEN istruef_a14_b11 = 0bin1 ELSE istruef_a14_b11 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b12,0bin00100) THEN istruef_a14_b12 = 0bin1 ELSE istruef_a14_b12 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b13,0bin00100) THEN istruef_a14_b13 = 0bin1 ELSE istruef_a14_b13 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b14,0bin00100) THEN istruef_a14_b14 = 0bin1 ELSE istruef_a14_b14 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a14_b15,0bin00100) THEN istruef_a14_b15 = 0bin1 ELSE istruef_a14_b15 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b0,0bin00100) THEN istruef_a15_b0 = 0bin1 ELSE istruef_a15_b0 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b1,0bin00100) THEN istruef_a15_b1 = 0bin1 ELSE istruef_a15_b1 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b2,0bin00100) THEN istruef_a15_b2 = 0bin1 ELSE istruef_a15_b2 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b3,0bin00100) THEN istruef_a15_b3 = 0bin1 ELSE istruef_a15_b3 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b4,0bin00100) THEN istruef_a15_b4 = 0bin1 ELSE istruef_a15_b4 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b5,0bin00100) THEN istruef_a15_b5 = 0bin1 ELSE istruef_a15_b5 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b6,0bin00100) THEN istruef_a15_b6 = 0bin1 ELSE istruef_a15_b6 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b7,0bin00100) THEN istruef_a15_b7 = 0bin1 ELSE istruef_a15_b7 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b8,0bin00100) THEN istruef_a15_b8 = 0bin1 ELSE istruef_a15_b8 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b9,0bin00100) THEN istruef_a15_b9 = 0bin1 ELSE istruef_a15_b9 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b10,0bin00100) THEN istruef_a15_b10 = 0bin1 ELSE istruef_a15_b10 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b11,0bin00100) THEN istruef_a15_b11 = 0bin1 ELSE istruef_a15_b11 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b12,0bin00100) THEN istruef_a15_b12 = 0bin1 ELSE istruef_a15_b12 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b13,0bin00100) THEN istruef_a15_b13 = 0bin1 ELSE istruef_a15_b13 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b14,0bin00100) THEN istruef_a15_b14 = 0bin1 ELSE istruef_a15_b14 = 0bin0 ENDIF );
ASSERT( IF BVGE(ddt_a15_b15,0bin00100) THEN istruef_a15_b15 = 0bin1 ELSE istruef_a15_b15 = 0bin0 ENDIF );
ASSERT( total_freq = BVPLUS(9, 0bin00000000@istruef_a0_b0, 0bin00000000@istruef_a0_b1, 0bin00000000@istruef_a0_b2, 0bin00000000@istruef_a0_b3, 0bin00000000@istruef_a0_b4, 0bin00000000@istruef_a0_b5, 0bin00000000@istruef_a0_b6, 0bin00000000@istruef_a0_b7, 0bin00000000@istruef_a0_b8, 0bin00000000@istruef_a0_b9, 0bin00000000@istruef_a0_b10, 0bin00000000@istruef_a0_b11, 0bin00000000@istruef_a0_b12, 0bin00000000@istruef_a0_b13, 0bin00000000@istruef_a0_b14, 0bin00000000@istruef_a0_b15, 0bin00000000@istruef_a1_b0, 0bin00000000@istruef_a1_b1, 0bin00000000@istruef_a1_b2, 0bin00000000@istruef_a1_b3, 0bin00000000@istruef_a1_b4, 0bin00000000@istruef_a1_b5, 0bin00000000@istruef_a1_b6, 0bin00000000@istruef_a1_b7, 0bin00000000@istruef_a1_b8, 0bin00000000@istruef_a1_b9, 0bin00000000@istruef_a1_b10, 0bin00000000@istruef_a1_b11, 0bin00000000@istruef_a1_b12, 0bin00000000@istruef_a1_b13, 0bin00000000@istruef_a1_b14, 0bin00000000@istruef_a1_b15, 0bin00000000@istruef_a2_b0, 0bin00000000@istruef_a2_b1, 0bin00000000@istruef_a2_b2, 0bin00000000@istruef_a2_b3, 0bin00000000@istruef_a2_b4, 0bin00000000@istruef_a2_b5, 0bin00000000@istruef_a2_b6, 0bin00000000@istruef_a2_b7, 0bin00000000@istruef_a2_b8, 0bin00000000@istruef_a2_b9, 0bin00000000@istruef_a2_b10, 0bin00000000@istruef_a2_b11, 0bin00000000@istruef_a2_b12, 0bin00000000@istruef_a2_b13, 0bin00000000@istruef_a2_b14, 0bin00000000@istruef_a2_b15, 0bin00000000@istruef_a3_b0, 0bin00000000@istruef_a3_b1, 0bin00000000@istruef_a3_b2, 0bin00000000@istruef_a3_b3, 0bin00000000@istruef_a3_b4, 0bin00000000@istruef_a3_b5, 0bin00000000@istruef_a3_b6, 0bin00000000@istruef_a3_b7, 0bin00000000@istruef_a3_b8, 0bin00000000@istruef_a3_b9, 0bin00000000@istruef_a3_b10, 0bin00000000@istruef_a3_b11, 0bin00000000@istruef_a3_b12, 0bin00000000@istruef_a3_b13, 0bin00000000@istruef_a3_b14, 0bin00000000@istruef_a3_b15, 0bin00000000@istruef_a4_b0, 0bin00000000@istruef_a4_b1, 0bin00000000@istruef_a4_b2, 0bin00000000@istruef_a4_b3, 0bin00000000@istruef_a4_b4, 0bin00000000@istruef_a4_b5, 0bin00000000@istruef_a4_b6, 0bin00000000@istruef_a4_b7, 0bin00000000@istruef_a4_b8, 0bin00000000@istruef_a4_b9, 0bin00000000@istruef_a4_b10, 0bin00000000@istruef_a4_b11, 0bin00000000@istruef_a4_b12, 0bin00000000@istruef_a4_b13, 0bin00000000@istruef_a4_b14, 0bin00000000@istruef_a4_b15, 0bin00000000@istruef_a5_b0, 0bin00000000@istruef_a5_b1, 0bin00000000@istruef_a5_b2, 0bin00000000@istruef_a5_b3, 0bin00000000@istruef_a5_b4, 0bin00000000@istruef_a5_b5, 0bin00000000@istruef_a5_b6, 0bin00000000@istruef_a5_b7, 0bin00000000@istruef_a5_b8, 0bin00000000@istruef_a5_b9, 0bin00000000@istruef_a5_b10, 0bin00000000@istruef_a5_b11, 0bin00000000@istruef_a5_b12, 0bin00000000@istruef_a5_b13, 0bin00000000@istruef_a5_b14, 0bin00000000@istruef_a5_b15, 0bin00000000@istruef_a6_b0, 0bin00000000@istruef_a6_b1, 0bin00000000@istruef_a6_b2, 0bin00000000@istruef_a6_b3, 0bin00000000@istruef_a6_b4, 0bin00000000@istruef_a6_b5, 0bin00000000@istruef_a6_b6, 0bin00000000@istruef_a6_b7, 0bin00000000@istruef_a6_b8, 0bin00000000@istruef_a6_b9, 0bin00000000@istruef_a6_b10, 0bin00000000@istruef_a6_b11, 0bin00000000@istruef_a6_b12, 0bin00000000@istruef_a6_b13, 0bin00000000@istruef_a6_b14, 0bin00000000@istruef_a6_b15, 0bin00000000@istruef_a7_b0, 0bin00000000@istruef_a7_b1, 0bin00000000@istruef_a7_b2, 0bin00000000@istruef_a7_b3, 0bin00000000@istruef_a7_b4, 0bin00000000@istruef_a7_b5, 0bin00000000@istruef_a7_b6, 0bin00000000@istruef_a7_b7, 0bin00000000@istruef_a7_b8, 0bin00000000@istruef_a7_b9, 0bin00000000@istruef_a7_b10, 0bin00000000@istruef_a7_b11, 0bin00000000@istruef_a7_b12, 0bin00000000@istruef_a7_b13, 0bin00000000@istruef_a7_b14, 0bin00000000@istruef_a7_b15, 0bin00000000@istruef_a8_b0, 0bin00000000@istruef_a8_b1, 0bin00000000@istruef_a8_b2, 0bin00000000@istruef_a8_b3, 0bin00000000@istruef_a8_b4, 0bin00000000@istruef_a8_b5, 0bin00000000@istruef_a8_b6, 0bin00000000@istruef_a8_b7, 0bin00000000@istruef_a8_b8, 0bin00000000@istruef_a8_b9, 0bin00000000@istruef_a8_b10, 0bin00000000@istruef_a8_b11, 0bin00000000@istruef_a8_b12, 0bin00000000@istruef_a8_b13, 0bin00000000@istruef_a8_b14, 0bin00000000@istruef_a8_b15, 0bin00000000@istruef_a9_b0, 0bin00000000@istruef_a9_b1, 0bin00000000@istruef_a9_b2, 0bin00000000@istruef_a9_b3, 0bin00000000@istruef_a9_b4, 0bin00000000@istruef_a9_b5, 0bin00000000@istruef_a9_b6, 0bin00000000@istruef_a9_b7, 0bin00000000@istruef_a9_b8, 0bin00000000@istruef_a9_b9, 0bin00000000@istruef_a9_b10, 0bin00000000@istruef_a9_b11, 0bin00000000@istruef_a9_b12, 0bin00000000@istruef_a9_b13, 0bin00000000@istruef_a9_b14, 0bin00000000@istruef_a9_b15, 0bin00000000@istruef_a10_b0, 0bin00000000@istruef_a10_b1, 0bin00000000@istruef_a10_b2, 0bin00000000@istruef_a10_b3, 0bin00000000@istruef_a10_b4, 0bin00000000@istruef_a10_b5, 0bin00000000@istruef_a10_b6, 0bin00000000@istruef_a10_b7, 0bin00000000@istruef_a10_b8, 0bin00000000@istruef_a10_b9, 0bin00000000@istruef_a10_b10, 0bin00000000@istruef_a10_b11, 0bin00000000@istruef_a10_b12, 0bin00000000@istruef_a10_b13, 0bin00000000@istruef_a10_b14, 0bin00000000@istruef_a10_b15, 0bin00000000@istruef_a11_b0, 0bin00000000@istruef_a11_b1, 0bin00000000@istruef_a11_b2, 0bin00000000@istruef_a11_b3, 0bin00000000@istruef_a11_b4, 0bin00000000@istruef_a11_b5, 0bin00000000@istruef_a11_b6, 0bin00000000@istruef_a11_b7, 0bin00000000@istruef_a11_b8, 0bin00000000@istruef_a11_b9, 0bin00000000@istruef_a11_b10, 0bin00000000@istruef_a11_b11, 0bin00000000@istruef_a11_b12, 0bin00000000@istruef_a11_b13, 0bin00000000@istruef_a11_b14, 0bin00000000@istruef_a11_b15, 0bin00000000@istruef_a12_b0, 0bin00000000@istruef_a12_b1, 0bin00000000@istruef_a12_b2, 0bin00000000@istruef_a12_b3, 0bin00000000@istruef_a12_b4, 0bin00000000@istruef_a12_b5, 0bin00000000@istruef_a12_b6, 0bin00000000@istruef_a12_b7, 0bin00000000@istruef_a12_b8, 0bin00000000@istruef_a12_b9, 0bin00000000@istruef_a12_b10, 0bin00000000@istruef_a12_b11, 0bin00000000@istruef_a12_b12, 0bin00000000@istruef_a12_b13, 0bin00000000@istruef_a12_b14, 0bin00000000@istruef_a12_b15, 0bin00000000@istruef_a13_b0, 0bin00000000@istruef_a13_b1, 0bin00000000@istruef_a13_b2, 0bin00000000@istruef_a13_b3, 0bin00000000@istruef_a13_b4, 0bin00000000@istruef_a13_b5, 0bin00000000@istruef_a13_b6, 0bin00000000@istruef_a13_b7, 0bin00000000@istruef_a13_b8, 0bin00000000@istruef_a13_b9, 0bin00000000@istruef_a13_b10, 0bin00000000@istruef_a13_b11, 0bin00000000@istruef_a13_b12, 0bin00000000@istruef_a13_b13, 0bin00000000@istruef_a13_b14, 0bin00000000@istruef_a13_b15, 0bin00000000@istruef_a14_b0, 0bin00000000@istruef_a14_b1, 0bin00000000@istruef_a14_b2, 0bin00000000@istruef_a14_b3, 0bin00000000@istruef_a14_b4, 0bin00000000@istruef_a14_b5, 0bin00000000@istruef_a14_b6, 0bin00000000@istruef_a14_b7, 0bin00000000@istruef_a14_b8, 0bin00000000@istruef_a14_b9, 0bin00000000@istruef_a14_b10, 0bin00000000@istruef_a14_b11, 0bin00000000@istruef_a14_b12, 0bin00000000@istruef_a14_b13, 0bin00000000@istruef_a14_b14, 0bin00000000@istruef_a14_b15, 0bin00000000@istruef_a15_b0, 0bin00000000@istruef_a15_b1, 0bin00000000@istruef_a15_b2, 0bin00000000@istruef_a15_b3, 0bin00000000@istruef_a15_b4, 0bin00000000@istruef_a15_b5, 0bin00000000@istruef_a15_b6, 0bin00000000@istruef_a15_b7, 0bin00000000@istruef_a15_b8, 0bin00000000@istruef_a15_b9, 0bin00000000@istruef_a15_b10, 0bin00000000@istruef_a15_b11, 0bin00000000@istruef_a15_b12, 0bin00000000@istruef_a15_b13, 0bin00000000@istruef_a15_b14, 0bin00000000@istruef_a15_b15));
ASSERT( BVGE(total_freq,0bin000000001) );
QUERY FALSE;
COUNTEREXAMPLE;
